{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/draouil/Documents/Workspaces/VideosProject/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/home/draouil/Documents/Workspaces/VideosProject/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/home/draouil/Documents/Workspaces/VideosProject/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/home/draouil/Documents/Workspaces/VideosProject/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"/home/draouil/Documents/Workspaces/VideosProject/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/home/draouil/Documents/Workspaces/VideosProject/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { isValidElement, useRef, useState, useCallback, useEffect, useMemo, createContext, useContext, createElement, cloneElement } from 'react';\nvar isHTMLElement = function isHTMLElement(value) {\n  return value instanceof HTMLElement;\n};\nvar EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input'\n};\nvar VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nvar SELECT = 'select';\nvar UNDEFINED = 'undefined';\nvar INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nfunction attachEventListeners(_ref, shouldAttachChangeEvent, handleChange) {\n  var ref = _ref.ref;\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value == null;\n};\nvar isObjectType = function isObjectType(value) {\n  return typeof value === 'object';\n};\nvar isObject = function isObject(value) {\n  return !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !(value instanceof Date);\n};\nvar isKey = function isKey(value) {\n  return /^\\w*$/.test(value);\n};\nvar compact = function compact(value) {\n  return value.filter(Boolean);\n};\nvar stringToPath = function stringToPath(input) {\n  return compact(input.replace(/[\"|']/g, '').replace(/\\[/g, '.').replace(/\\]/g, '').split('.'));\n};\nfunction set(object, path, value) {\n  var index = -1;\n  var tempPath = isKey(path) ? [path] : stringToPath(path);\n  var length = tempPath.length;\n  var lastIndex = length - 1;\n  while (++index < length) {\n    var key = tempPath[index];\n    var newValue = value;\n    if (index !== lastIndex) {\n      var objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\nvar transformToNestObject = function transformToNestObject(data) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  for (var key in data) {\n    !isKey(key) ? set(value, key, data[key]) : value[key] = data[key];\n  }\n  return value;\n};\nvar isUndefined = function isUndefined(val) {\n  return val === undefined;\n};\nvar _get = function get() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var path = arguments.length > 1 ? arguments[1] : undefined;\n  var defaultValue = arguments.length > 2 ? arguments[2] : undefined;\n  var result = compact(path.split(/[,[\\].]+?/)).reduce(function (result, key) {\n    return isNullOrUndefined(result) ? result : result[key];\n  }, obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\nvar focusOnErrorField = function focusOnErrorField(fields, fieldErrors) {\n  for (var key in fields) {\n    if (_get(fieldErrors, key)) {\n      var field = fields[key];\n      if (field) {\n        if (field.ref.focus && isUndefined(field.ref.focus())) {\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n          break;\n        }\n      }\n    }\n  }\n};\nvar removeAllEventListeners = function removeAllEventListeners(ref, validateWithStateUpdate) {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\nvar defaultReturn = {\n  isValid: false,\n  value: null\n};\nvar getRadioValue = function getRadioValue(options) {\n  return Array.isArray(options) ? options.reduce(function (previous, option) {\n    return option && option.ref.checked ? {\n      isValid: true,\n      value: option.ref.value\n    } : previous;\n  }, defaultReturn) : defaultReturn;\n};\nvar getMultipleSelectValue = function getMultipleSelectValue(options) {\n  return _toConsumableArray(options).filter(function (_ref2) {\n    var selected = _ref2.selected;\n    return selected;\n  }).map(function (_ref3) {\n    var value = _ref3.value;\n    return value;\n  });\n};\nvar isRadioInput = function isRadioInput(element) {\n  return element.type === 'radio';\n};\nvar isFileInput = function isFileInput(element) {\n  return element.type === 'file';\n};\nvar isCheckBoxInput = function isCheckBoxInput(element) {\n  return element.type === 'checkbox';\n};\nvar isMultipleSelect = function isMultipleSelect(element) {\n  return element.type === \"\".concat(SELECT, \"-multiple\");\n};\nvar defaultResult = {\n  value: false,\n  isValid: false\n};\nvar validResult = {\n  value: true,\n  isValid: true\n};\nvar getCheckboxValue = function getCheckboxValue(options) {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      var values = options.filter(function (option) {\n        return option && option.ref.checked;\n      }).map(function (_ref4) {\n        var value = _ref4.ref.value;\n        return value;\n      });\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n    var _options$0$ref = options[0].ref,\n      checked = _options$0$ref.checked,\n      value = _options$0$ref.value,\n      attributes = _options$0$ref.attributes;\n    return checked ? attributes && !isUndefined(attributes.value) ? isUndefined(value) || value === '' ? validResult : {\n      value: value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n  return defaultResult;\n};\nfunction getFieldValue(fieldsRef, name, shallowFieldsStateRef, excludeDisabled, shouldKeepRawValue) {\n  var field = fieldsRef.current[name];\n  if (field) {\n    var _field$ref = field.ref,\n      value = _field$ref.value,\n      disabled = _field$ref.disabled,\n      ref = field.ref,\n      valueAsNumber = field.valueAsNumber,\n      valueAsDate = field.valueAsDate,\n      setValueAs = field.setValueAs;\n    if (disabled && excludeDisabled) {\n      return;\n    }\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n    if (isCheckBoxInput(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n    return shouldKeepRawValue ? value : valueAsNumber ? value === '' ? NaN : +value : valueAsDate ? ref.valueAsDate : setValueAs ? setValueAs(value) : value;\n  }\n  if (shallowFieldsStateRef) {\n    return _get(shallowFieldsStateRef.current, name);\n  }\n}\nfunction isDetached(element) {\n  if (!element) {\n    return true;\n  }\n  if (!(element instanceof HTMLElement) || element.nodeType === Node.DOCUMENT_NODE) {\n    return false;\n  }\n  return isDetached(element.parentNode);\n}\nvar isEmptyObject = function isEmptyObject(value) {\n  return isObject(value) && !Object.keys(value).length;\n};\nvar isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\nfunction baseGet(object, updatePath) {\n  var length = updatePath.slice(0, -1).length;\n  var index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nfunction unset(object, path) {\n  var updatePath = isKey(path) ? [path] : stringToPath(path);\n  var childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  var key = updatePath[updatePath.length - 1];\n  var previousObjRef;\n  if (childObject) {\n    delete childObject[key];\n  }\n  for (var k = 0; k < updatePath.slice(0, -1).length; k++) {\n    var index = -1;\n    var objectRef = void 0;\n    var currentPaths = updatePath.slice(0, -(k + 1));\n    var currentPathsLength = currentPaths.length - 1;\n    if (k > 0) {\n      previousObjRef = object;\n    }\n    while (++index < currentPaths.length) {\n      var item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n      if (currentPathsLength === index && (isObject(objectRef) && isEmptyObject(objectRef) || Array.isArray(objectRef) && !objectRef.filter(function (data) {\n        return isObject(data) && !isEmptyObject(data) || isBoolean(data);\n      }).length)) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n      previousObjRef = objectRef;\n    }\n  }\n  return object;\n}\nvar isSameRef = function isSameRef(fieldValue, ref) {\n  return fieldValue && fieldValue.ref === ref;\n};\nfunction findRemovedFieldAndRemoveListener(fieldsRef, handleChange, field, shallowFieldsStateRef, shouldUnregister, forceDelete) {\n  var ref = field.ref,\n    name = field.ref.name;\n  var fieldRef = fieldsRef.current[name];\n  if (!shouldUnregister) {\n    var value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n    !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\n  }\n  if (!ref.type || !fieldRef) {\n    delete fieldsRef.current[name];\n    return;\n  }\n  if (isRadioInput(ref) || isCheckBoxInput(ref)) {\n    if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\n      compact(fieldRef.options).forEach(function () {\n        var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var index = arguments.length > 1 ? arguments[1] : undefined;\n        if (isDetached(option.ref) && isSameRef(option, option.ref) || forceDelete) {\n          removeAllEventListeners(option.ref, handleChange);\n          unset(fieldRef.options, \"[\".concat(index, \"]\"));\n        }\n      });\n      if (fieldRef.options && !compact(fieldRef.options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if (isDetached(ref) && isSameRef(fieldRef, ref) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n    delete fieldsRef.current[name];\n  }\n}\nvar isPrimitive = function isPrimitive(value) {\n  return isNullOrUndefined(value) || !isObjectType(value);\n};\nfunction deepMerge(target, source) {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n  for (var key in source) {\n    var targetValue = target[key];\n    var sourceValue = source[key];\n    try {\n      target[key] = isObject(targetValue) && isObject(sourceValue) || Array.isArray(targetValue) && Array.isArray(sourceValue) ? deepMerge(targetValue, sourceValue) : sourceValue;\n    } catch (_a) {}\n  }\n  return target;\n}\nfunction deepEqual(object1, object2, isErrorObject) {\n  if (isPrimitive(object1) || isPrimitive(object2) || object1 instanceof Date || object2 instanceof Date) {\n    return object1 === object2;\n  }\n  if (!isValidElement(object1)) {\n    var keys1 = Object.keys(object1);\n    var keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    for (var _i = 0, _keys = keys1; _i < _keys.length; _i++) {\n      var key = _keys[_i];\n      var val1 = object1[key];\n      if (!(isErrorObject && key === 'ref')) {\n        var val2 = object2[key];\n        if ((isObject(val1) || Array.isArray(val1)) && (isObject(val2) || Array.isArray(val2)) ? !deepEqual(val1, val2, isErrorObject) : val1 !== val2) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n  var index = -1;\n  while (++index < values.length) {\n    for (var key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(values[index][key], _get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n      } else {\n        deepEqual(_get(defaultValues[index] || {}, key), values[index][key]) ? set(dirtyFields[index] || {}, key) : dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), _defineProperty({}, key, true));\n      }\n    }\n    parentNode && !dirtyFields.length && delete parentNode[parentName];\n  }\n  return dirtyFields;\n}\nvar setFieldArrayDirtyFields = function setFieldArrayDirtyFields(values, defaultValues, dirtyFields) {\n  return deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n};\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\nvar getFieldsValues = function getFieldsValues(fieldsRef, shallowFieldsState, shouldUnregister, excludeDisabled, search) {\n  var output = {};\n  var _loop = function _loop(name) {\n    if (isUndefined(search) || (isString(search) ? name.startsWith(search) : Array.isArray(search) && search.find(function (data) {\n      return name.startsWith(data);\n    }))) {\n      output[name] = getFieldValue(fieldsRef, name, undefined, excludeDisabled);\n    }\n  };\n  for (var name in fieldsRef.current) {\n    _loop(name);\n  }\n  return shouldUnregister ? transformToNestObject(output) : deepMerge(shallowFieldsState, transformToNestObject(output));\n};\nvar isErrorStateChanged = function isErrorStateChanged(_ref5) {\n  var errors = _ref5.errors,\n    name = _ref5.name,\n    error = _ref5.error,\n    validFields = _ref5.validFields,\n    fieldsWithValidation = _ref5.fieldsWithValidation;\n  var isValid = isUndefined(error);\n  var previousError = _get(errors, name);\n  return isValid && !!previousError || !isValid && !deepEqual(previousError, error, true) || isValid && _get(fieldsWithValidation, name) && !_get(validFields, name);\n};\nvar isRegex = function isRegex(value) {\n  return value instanceof RegExp;\n};\nvar getValueAndMessage = function getValueAndMessage(validationData) {\n  return isObject(validationData) && !isRegex(validationData) ? validationData : {\n    value: validationData,\n    message: ''\n  };\n};\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\nvar isMessage = function isMessage(value) {\n  return isString(value) || isValidElement(value);\n};\nfunction getValidateError(result, ref) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  if (isMessage(result) || isBoolean(result) && !result) {\n    return {\n      type: type,\n      message: isMessage(result) ? result : '',\n      ref: ref\n    };\n  }\n}\nvar appendErrors = function appendErrors(name, validateAllFieldCriteria, errors, type, message) {\n  return validateAllFieldCriteria ? Object.assign(Object.assign({}, errors[name]), {\n    types: Object.assign(Object.assign({}, errors[name] && errors[name].types ? errors[name].types : {}), _defineProperty({}, type, message || true))\n  }) : {};\n};\nvar validateField = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(fieldsRef, validateAllFieldCriteria, _ref6, shallowFieldsStateRef) {\n    var ref, value, options, required, maxLength, minLength, min, max, pattern, validate, name, error, isRadio, isCheckBox, isRadioOrCheckbox, isEmpty, appendErrorsCurry, getMinMaxMessage, _ref8, _value, message, exceedMax, exceedMin, maxOutput, minOutput, valueNumber, valueDate, maxLengthOutput, minLengthOutput, _exceedMax, _exceedMin, _getValueAndMessage, patternValue, _message, fieldValue, validateRef, result, validateError, validationResult, _i2, _Object$entries, _Object$entries$_i, key, validateFunction, validateResult, _validateError;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          ref = _ref6.ref, value = _ref6.ref.value, options = _ref6.options, required = _ref6.required, maxLength = _ref6.maxLength, minLength = _ref6.minLength, min = _ref6.min, max = _ref6.max, pattern = _ref6.pattern, validate = _ref6.validate;\n          name = ref.name;\n          error = {};\n          isRadio = isRadioInput(ref);\n          isCheckBox = isCheckBoxInput(ref);\n          isRadioOrCheckbox = isRadio || isCheckBox;\n          isEmpty = value === '';\n          appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n          getMinMaxMessage = function getMinMaxMessage(exceedMax, maxLengthMessage, minLengthMessage) {\n            var maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n            var minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n            var message = exceedMax ? maxLengthMessage : minLengthMessage;\n            error[name] = Object.assign({\n              type: exceedMax ? maxType : minType,\n              message: message,\n              ref: ref\n            }, exceedMax ? appendErrorsCurry(maxType, message) : appendErrorsCurry(minType, message));\n          };\n          if (!(required && (!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value)) || isBoolean(value) && !value || isCheckBox && !getCheckboxValue(options).isValid || isRadio && !getRadioValue(options).isValid))) {\n            _context.next = 15;\n            break;\n          }\n          _ref8 = isMessage(required) ? {\n            value: !!required,\n            message: required\n          } : getValueAndMessage(required), _value = _ref8.value, message = _ref8.message;\n          if (!_value) {\n            _context.next = 15;\n            break;\n          }\n          error[name] = Object.assign({\n            type: INPUT_VALIDATION_RULES.required,\n            message: message,\n            ref: isRadioOrCheckbox ? ((fieldsRef.current[name].options || [])[0] || {}).ref : ref\n          }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n          if (validateAllFieldCriteria) {\n            _context.next = 15;\n            break;\n          }\n          return _context.abrupt(\"return\", error);\n        case 15:\n          if (!((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && value !== '')) {\n            _context.next = 23;\n            break;\n          }\n          maxOutput = getValueAndMessage(max);\n          minOutput = getValueAndMessage(min);\n          if (!isNaN(value)) {\n            valueNumber = ref.valueAsNumber || parseFloat(value);\n            if (!isNullOrUndefined(maxOutput.value)) {\n              exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n              exceedMin = valueNumber < minOutput.value;\n            }\n          } else {\n            valueDate = ref.valueAsDate || new Date(value);\n            if (isString(maxOutput.value)) {\n              exceedMax = valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value)) {\n              exceedMin = valueDate < new Date(minOutput.value);\n            }\n          }\n          if (!(exceedMax || exceedMin)) {\n            _context.next = 23;\n            break;\n          }\n          getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n          if (validateAllFieldCriteria) {\n            _context.next = 23;\n            break;\n          }\n          return _context.abrupt(\"return\", error);\n        case 23:\n          if (!(isString(value) && !isEmpty && (maxLength || minLength))) {\n            _context.next = 32;\n            break;\n          }\n          maxLengthOutput = getValueAndMessage(maxLength);\n          minLengthOutput = getValueAndMessage(minLength);\n          _exceedMax = !isNullOrUndefined(maxLengthOutput.value) && value.length > maxLengthOutput.value;\n          _exceedMin = !isNullOrUndefined(minLengthOutput.value) && value.length < minLengthOutput.value;\n          if (!(_exceedMax || _exceedMin)) {\n            _context.next = 32;\n            break;\n          }\n          getMinMaxMessage(_exceedMax, maxLengthOutput.message, minLengthOutput.message);\n          if (validateAllFieldCriteria) {\n            _context.next = 32;\n            break;\n          }\n          return _context.abrupt(\"return\", error);\n        case 32:\n          if (!(isString(value) && pattern && !isEmpty)) {\n            _context.next = 38;\n            break;\n          }\n          _getValueAndMessage = getValueAndMessage(pattern), patternValue = _getValueAndMessage.value, _message = _getValueAndMessage.message;\n          if (!(isRegex(patternValue) && !patternValue.test(value))) {\n            _context.next = 38;\n            break;\n          }\n          error[name] = Object.assign({\n            type: INPUT_VALIDATION_RULES.pattern,\n            message: _message,\n            ref: ref\n          }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, _message));\n          if (validateAllFieldCriteria) {\n            _context.next = 38;\n            break;\n          }\n          return _context.abrupt(\"return\", error);\n        case 38:\n          if (!validate) {\n            _context.next = 71;\n            break;\n          }\n          fieldValue = getFieldValue(fieldsRef, name, shallowFieldsStateRef, false, true);\n          validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n          if (!isFunction(validate)) {\n            _context.next = 52;\n            break;\n          }\n          _context.next = 44;\n          return validate(fieldValue);\n        case 44:\n          result = _context.sent;\n          validateError = getValidateError(result, validateRef);\n          if (!validateError) {\n            _context.next = 50;\n            break;\n          }\n          error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n          if (validateAllFieldCriteria) {\n            _context.next = 50;\n            break;\n          }\n          return _context.abrupt(\"return\", error);\n        case 50:\n          _context.next = 71;\n          break;\n        case 52:\n          if (!isObject(validate)) {\n            _context.next = 71;\n            break;\n          }\n          validationResult = {};\n          _i2 = 0, _Object$entries = Object.entries(validate);\n        case 55:\n          if (!(_i2 < _Object$entries.length)) {\n            _context.next = 67;\n            break;\n          }\n          _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2), key = _Object$entries$_i[0], validateFunction = _Object$entries$_i[1];\n          if (!(!isEmptyObject(validationResult) && !validateAllFieldCriteria)) {\n            _context.next = 59;\n            break;\n          }\n          return _context.abrupt(\"break\", 67);\n        case 59:\n          _context.next = 61;\n          return validateFunction(fieldValue);\n        case 61:\n          validateResult = _context.sent;\n          _validateError = getValidateError(validateResult, validateRef, key);\n          if (_validateError) {\n            validationResult = Object.assign(Object.assign({}, _validateError), appendErrorsCurry(key, _validateError.message));\n            if (validateAllFieldCriteria) {\n              error[name] = validationResult;\n            }\n          }\n        case 64:\n          _i2++;\n          _context.next = 55;\n          break;\n        case 67:\n          if (isEmptyObject(validationResult)) {\n            _context.next = 71;\n            break;\n          }\n          error[name] = Object.assign({\n            ref: validateRef\n          }, validationResult);\n          if (validateAllFieldCriteria) {\n            _context.next = 71;\n            break;\n          }\n          return _context.abrupt(\"return\", error);\n        case 71:\n          return _context.abrupt(\"return\", error);\n        case 72:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function validateField(_x, _x2, _x3, _x4) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar getPath = function getPath(rootPath, values) {\n  var paths = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  for (var property in values) {\n    var rootName = rootPath + (isObject(values) ? \".\".concat(property) : \"[\".concat(property, \"]\"));\n    isPrimitive(values[property]) ? paths.push(rootName) : getPath(rootName, values[property], paths);\n  }\n  return paths;\n};\nvar assignWatchFields = function assignWatchFields(fieldValues, fieldName, watchFields, inputValue, isSingleField) {\n  var value = undefined;\n  watchFields.add(fieldName);\n  if (!isEmptyObject(fieldValues)) {\n    value = _get(fieldValues, fieldName);\n    if (isObject(value) || Array.isArray(value)) {\n      getPath(fieldName, value).forEach(function (name) {\n        return watchFields.add(name);\n      });\n    }\n  }\n  return isUndefined(value) ? isSingleField ? inputValue : _get(inputValue, fieldName) : value;\n};\nvar skipValidation = function skipValidation(_ref9) {\n  var isOnBlur = _ref9.isOnBlur,\n    isOnChange = _ref9.isOnChange,\n    isOnTouch = _ref9.isOnTouch,\n    isTouched = _ref9.isTouched,\n    isReValidateOnBlur = _ref9.isReValidateOnBlur,\n    isReValidateOnChange = _ref9.isReValidateOnChange,\n    isBlurEvent = _ref9.isBlurEvent,\n    isSubmitted = _ref9.isSubmitted,\n    isOnAll = _ref9.isOnAll;\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\nvar getFieldArrayParentName = function getFieldArrayParentName(name) {\n  return name.substring(0, name.indexOf('['));\n};\nvar isMatchFieldArrayName = function isMatchFieldArrayName(name, searchName) {\n  return RegExp(\"^\".concat(searchName, \"([|.)\\\\d+\").replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(name);\n};\nvar isNameInFieldArray = function isNameInFieldArray(names, name) {\n  return _toConsumableArray(names).some(function (current) {\n    return isMatchFieldArrayName(name, current);\n  });\n};\nvar isSelectInput = function isSelectInput(element) {\n  return element.type === \"\".concat(SELECT, \"-one\");\n};\nfunction onDomRemove(fieldsRef, removeFieldEventListenerAndRef) {\n  var observer = new MutationObserver(function () {\n    for (var _i3 = 0, _Object$values = Object.values(fieldsRef.current); _i3 < _Object$values.length; _i3++) {\n      var field = _Object$values[_i3];\n      if (field && field.options) {\n        var _iterator = _createForOfIteratorHelper(field.options),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            if (option && option.ref && isDetached(option.ref)) {\n              removeFieldEventListenerAndRef(field);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else if (field && isDetached(field.ref)) {\n        removeFieldEventListenerAndRef(field);\n      }\n    }\n  });\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar isWeb = typeof window !== UNDEFINED && typeof document !== UNDEFINED;\nfunction cloneObject(data) {\n  var _a;\n  var copy;\n  if (isPrimitive(data) || isWeb && (data instanceof File || isHTMLElement(data))) {\n    return data;\n  }\n  if (!['Set', 'Map', 'Object', 'Date', 'Array'].includes((_a = data.constructor) === null || _a === void 0 ? void 0 : _a.name)) {\n    return data;\n  }\n  if (data instanceof Date) {\n    copy = new Date(data.getTime());\n    return copy;\n  }\n  if (data instanceof Set) {\n    copy = new Set();\n    var _iterator2 = _createForOfIteratorHelper(data),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var item = _step2.value;\n        copy.add(item);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    return copy;\n  }\n  if (data instanceof Map) {\n    copy = new Map();\n    var _iterator3 = _createForOfIteratorHelper(data.keys()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var key = _step3.value;\n        copy.set(key, cloneObject(data.get(key)));\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return copy;\n  }\n  copy = Array.isArray(data) ? [] : {};\n  for (var _key in data) {\n    copy[_key] = cloneObject(data[_key]);\n  }\n  return copy;\n}\nvar modeChecker = function modeChecker(mode) {\n  return {\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched\n  };\n};\nvar isRadioOrCheckboxFunction = function isRadioOrCheckboxFunction(ref) {\n  return isRadioInput(ref) || isCheckBoxInput(ref);\n};\nvar isWindowUndefined = typeof window === UNDEFINED;\nvar isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\nfunction useForm() {\n  var _ref10 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    _ref10$mode = _ref10.mode,\n    mode = _ref10$mode === void 0 ? VALIDATION_MODE.onSubmit : _ref10$mode,\n    _ref10$reValidateMode = _ref10.reValidateMode,\n    reValidateMode = _ref10$reValidateMode === void 0 ? VALIDATION_MODE.onChange : _ref10$reValidateMode,\n    resolver = _ref10.resolver,\n    context = _ref10.context,\n    _ref10$defaultValues = _ref10.defaultValues,\n    defaultValues = _ref10$defaultValues === void 0 ? {} : _ref10$defaultValues,\n    _ref10$shouldFocusErr = _ref10.shouldFocusError,\n    shouldFocusError = _ref10$shouldFocusErr === void 0 ? true : _ref10$shouldFocusErr,\n    _ref10$shouldUnregist = _ref10.shouldUnregister,\n    shouldUnregister = _ref10$shouldUnregist === void 0 ? true : _ref10$shouldUnregist,\n    criteriaMode = _ref10.criteriaMode;\n  var fieldsRef = useRef({});\n  var fieldArrayDefaultValuesRef = useRef({});\n  var fieldArrayValuesRef = useRef({});\n  var watchFieldsRef = useRef(new Set());\n  var useWatchFieldsRef = useRef({});\n  var useWatchRenderFunctionsRef = useRef({});\n  var fieldsWithValidationRef = useRef({});\n  var validFieldsRef = useRef({});\n  var defaultValuesRef = useRef(defaultValues);\n  var isUnMount = useRef(false);\n  var isWatchAllRef = useRef(false);\n  var handleChangeRef = useRef();\n  var shallowFieldsStateRef = useRef({});\n  var resetFieldArrayFunctionRef = useRef({});\n  var contextRef = useRef(context);\n  var resolverRef = useRef(resolver);\n  var fieldArrayNamesRef = useRef(new Set());\n  var modeRef = useRef(modeChecker(mode));\n  var _modeRef$current = modeRef.current,\n    isOnSubmit = _modeRef$current.isOnSubmit,\n    isOnTouch = _modeRef$current.isOnTouch;\n  var isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  var _useState = useState({\n      isDirty: false,\n      isValidating: false,\n      dirtyFields: {},\n      isSubmitted: false,\n      submitCount: 0,\n      touched: {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n      isValid: !isOnSubmit,\n      errors: {}\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formState = _useState2[0],\n    setFormState = _useState2[1];\n  var readFormStateRef = useRef({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isValidating: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled\n  });\n  var formStateRef = useRef(formState);\n  var observerRef = useRef();\n  var _useRef$current = useRef(modeChecker(reValidateMode)).current,\n    isReValidateOnBlur = _useRef$current.isOnBlur,\n    isReValidateOnChange = _useRef$current.isOnChange;\n  contextRef.current = context;\n  resolverRef.current = resolver;\n  formStateRef.current = formState;\n  shallowFieldsStateRef.current = shouldUnregister ? {} : isEmptyObject(shallowFieldsStateRef.current) ? cloneObject(defaultValues) : shallowFieldsStateRef.current;\n  var updateFormState = useCallback(function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!isUnMount.current) {\n      formStateRef.current = Object.assign(Object.assign({}, formStateRef.current), state);\n      setFormState(formStateRef.current);\n    }\n  }, []);\n  var updateIsValidating = function updateIsValidating() {\n    return readFormStateRef.current.isValidating && updateFormState({\n      isValidating: true\n    });\n  };\n  var shouldRenderBaseOnError = useCallback(function (name, error) {\n    var shouldRender = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var state = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var isValid = arguments.length > 4 ? arguments[4] : undefined;\n    var shouldReRender = shouldRender || isErrorStateChanged({\n      errors: formStateRef.current.errors,\n      error: error,\n      name: name,\n      validFields: validFieldsRef.current,\n      fieldsWithValidation: fieldsWithValidationRef.current\n    });\n    var previousError = _get(formStateRef.current.errors, name);\n    if (error) {\n      unset(validFieldsRef.current, name);\n      shouldReRender = shouldReRender || !previousError || !deepEqual(previousError, error, true);\n      set(formStateRef.current.errors, name, error);\n    } else {\n      if (_get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n        set(validFieldsRef.current, name, true);\n        shouldReRender = shouldReRender || previousError;\n      }\n      unset(formStateRef.current.errors, name);\n    }\n    if (shouldReRender && !isNullOrUndefined(shouldRender) || !isEmptyObject(state) || readFormStateRef.current.isValidating) {\n      updateFormState(Object.assign(Object.assign(Object.assign({}, state), resolverRef.current ? {\n        isValid: !!isValid\n      } : {}), {\n        isValidating: false\n      }));\n    }\n  }, []);\n  var setFieldValue = useCallback(function (name, rawValue) {\n    var _fieldsRef$current$na = fieldsRef.current[name],\n      ref = _fieldsRef$current$na.ref,\n      options = _fieldsRef$current$na.options;\n    var value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue) ? '' : rawValue;\n    if (isRadioInput(ref)) {\n      (options || []).forEach(function (_ref11) {\n        var radioRef = _ref11.ref;\n        return radioRef.checked = radioRef.value === value;\n      });\n    } else if (isFileInput(ref) && !isString(value)) {\n      ref.files = value;\n    } else if (isMultipleSelect(ref)) {\n      _toConsumableArray(ref.options).forEach(function (selectRef) {\n        return selectRef.selected = value.includes(selectRef.value);\n      });\n    } else if (isCheckBoxInput(ref) && options) {\n      options.length > 1 ? options.forEach(function (_ref12) {\n        var checkboxRef = _ref12.ref;\n        return checkboxRef.checked = Array.isArray(value) ? !!value.find(function (data) {\n          return data === checkboxRef.value;\n        }) : value === checkboxRef.value;\n      }) : options[0].ref.checked = !!value;\n    } else {\n      ref.value = value;\n    }\n  }, []);\n  var isFormDirty = useCallback(function (name, data) {\n    if (readFormStateRef.current.isDirty) {\n      var formValues = getValues();\n      name && data && set(formValues, name, data);\n      return !deepEqual(formValues, defaultValuesRef.current);\n    }\n    return false;\n  }, []);\n  var updateAndGetDirtyState = useCallback(function (name) {\n    var shouldRender = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) {\n      var isFieldDirty = !deepEqual(_get(defaultValuesRef.current, name), getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      var isDirtyFieldExist = _get(formStateRef.current.dirtyFields, name);\n      var previousIsDirty = formStateRef.current.isDirty;\n      isFieldDirty ? set(formStateRef.current.dirtyFields, name, true) : unset(formStateRef.current.dirtyFields, name);\n      var state = {\n        isDirty: isFormDirty(),\n        dirtyFields: formStateRef.current.dirtyFields\n      };\n      var isChanged = readFormStateRef.current.isDirty && previousIsDirty !== state.isDirty || readFormStateRef.current.dirtyFields && isDirtyFieldExist !== _get(formStateRef.current.dirtyFields, name);\n      isChanged && shouldRender && updateFormState(state);\n      return isChanged ? state : {};\n    }\n    return {};\n  }, []);\n  var executeValidation = useCallback( /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(name, skipReRender) {\n      var error;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(process.env.NODE_ENV !== 'production')) {\n              _context2.next = 4;\n              break;\n            }\n            if (fieldsRef.current[name]) {\n              _context2.next = 4;\n              break;\n            }\n            console.warn('📋 Field is missing with `name` attribute: ', name);\n            return _context2.abrupt(\"return\", false);\n          case 4:\n            _context2.next = 6;\n            return validateField(fieldsRef, isValidateAllFieldCriteria, fieldsRef.current[name], shallowFieldsStateRef);\n          case 6:\n            _context2.t0 = name;\n            error = _context2.sent[_context2.t0];\n            shouldRenderBaseOnError(name, error, skipReRender);\n            return _context2.abrupt(\"return\", isUndefined(error));\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function (_x5, _x6) {\n      return _ref13.apply(this, arguments);\n    };\n  }(), [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\n  var executeSchemaOrResolverValidation = useCallback( /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(names) {\n      var _yield$resolverRef$cu, errors, previousFormIsValid, isInputsValid, _error;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\n          case 2:\n            _yield$resolverRef$cu = _context3.sent;\n            errors = _yield$resolverRef$cu.errors;\n            previousFormIsValid = formStateRef.current.isValid;\n            if (!Array.isArray(names)) {\n              _context3.next = 11;\n              break;\n            }\n            isInputsValid = names.map(function (name) {\n              var error = _get(errors, name);\n              error ? set(formStateRef.current.errors, name, error) : unset(formStateRef.current.errors, name);\n              return !error;\n            }).every(Boolean);\n            updateFormState({\n              isValid: isEmptyObject(errors),\n              isValidating: false\n            });\n            return _context3.abrupt(\"return\", isInputsValid);\n          case 11:\n            _error = _get(errors, names);\n            shouldRenderBaseOnError(names, _error, previousFormIsValid !== isEmptyObject(errors), {}, isEmptyObject(errors));\n            return _context3.abrupt(\"return\", !_error);\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function (_x7) {\n      return _ref14.apply(this, arguments);\n    };\n  }(), [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\n  var trigger = useCallback( /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(name) {\n      var fields, result;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            fields = name || Object.keys(fieldsRef.current);\n            updateIsValidating();\n            if (!resolverRef.current) {\n              _context5.next = 4;\n              break;\n            }\n            return _context5.abrupt(\"return\", executeSchemaOrResolverValidation(fields));\n          case 4:\n            if (!Array.isArray(fields)) {\n              _context5.next = 11;\n              break;\n            }\n            !name && (formStateRef.current.errors = {});\n            _context5.next = 8;\n            return Promise.all(fields.map( /*#__PURE__*/function () {\n              var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(data) {\n                return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                  while (1) switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return executeValidation(data, null);\n                    case 2:\n                      return _context4.abrupt(\"return\", _context4.sent);\n                    case 3:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }, _callee4);\n              }));\n              return function (_x9) {\n                return _ref16.apply(this, arguments);\n              };\n            }()));\n          case 8:\n            result = _context5.sent;\n            updateFormState({\n              isValidating: false\n            });\n            return _context5.abrupt(\"return\", result.every(Boolean));\n          case 11:\n            _context5.next = 13;\n            return executeValidation(fields);\n          case 13:\n            return _context5.abrupt(\"return\", _context5.sent);\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return function (_x8) {\n      return _ref15.apply(this, arguments);\n    };\n  }(), [executeSchemaOrResolverValidation, executeValidation]);\n  var setInternalValues = useCallback(function (name, value, _ref17) {\n    var shouldDirty = _ref17.shouldDirty,\n      shouldValidate = _ref17.shouldValidate;\n    var data = {};\n    set(data, name, value);\n    var _iterator4 = _createForOfIteratorHelper(getPath(name, value)),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var fieldName = _step4.value;\n        if (fieldsRef.current[fieldName]) {\n          setFieldValue(fieldName, _get(data, fieldName));\n          shouldDirty && updateAndGetDirtyState(fieldName);\n          shouldValidate && trigger(fieldName);\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  }, [trigger, setFieldValue, updateAndGetDirtyState]);\n  var setInternalValue = useCallback(function (name, value, config) {\n    !shouldUnregister && !isPrimitive(value) && set(shallowFieldsStateRef.current, name, Array.isArray(value) ? _toConsumableArray(value) : Object.assign({}, value));\n    if (fieldsRef.current[name]) {\n      setFieldValue(name, value);\n      config.shouldDirty && updateAndGetDirtyState(name);\n      config.shouldValidate && trigger(name);\n    } else if (!isPrimitive(value)) {\n      setInternalValues(name, value, config);\n      if (fieldArrayNamesRef.current.has(name)) {\n        var parentName = getFieldArrayParentName(name) || name;\n        set(fieldArrayDefaultValuesRef.current, name, value);\n        resetFieldArrayFunctionRef.current[parentName](_defineProperty({}, parentName, _get(fieldArrayDefaultValuesRef.current, parentName)));\n        if ((readFormStateRef.current.isDirty || readFormStateRef.current.dirtyFields) && config.shouldDirty) {\n          set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(value, _get(defaultValuesRef.current, name, []), _get(formStateRef.current.dirtyFields, name, [])));\n          updateFormState({\n            isDirty: !deepEqual(Object.assign(Object.assign({}, getValues()), _defineProperty({}, name, value)), defaultValuesRef.current)\n          });\n        }\n      }\n    }\n    !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\n  }, [updateAndGetDirtyState, setFieldValue, setInternalValues]);\n  var isFieldWatched = function isFieldWatched(name) {\n    return isWatchAllRef.current || watchFieldsRef.current.has(name) || watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n  };\n  var renderWatchedInputs = function renderWatchedInputs(name) {\n    var found = true;\n    if (!isEmptyObject(useWatchFieldsRef.current)) {\n      for (var key in useWatchFieldsRef.current) {\n        if (!name || !useWatchFieldsRef.current[key].size || useWatchFieldsRef.current[key].has(name) || useWatchFieldsRef.current[key].has(getFieldArrayParentName(name))) {\n          useWatchRenderFunctionsRef.current[key]();\n          found = false;\n        }\n      }\n    }\n    return found;\n  };\n  function setValue(name, value, config) {\n    setInternalValue(name, value, config || {});\n    isFieldWatched(name) && updateFormState();\n    renderWatchedInputs(name);\n  }\n  handleChangeRef.current = handleChangeRef.current ? handleChangeRef.current : /*#__PURE__*/function () {\n    var _ref19 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref18) {\n      var type, target, name, field, error, isValid, isBlurEvent, shouldSkipValidation, state, shouldRender, _yield$resolverRef$cu2, errors, previousFormIsValid, parentNodeName, currentError;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            type = _ref18.type, target = _ref18.target;\n            name = target.name;\n            field = fieldsRef.current[name];\n            if (!field) {\n              _context6.next = 32;\n              break;\n            }\n            isBlurEvent = type === EVENTS.BLUR;\n            shouldSkipValidation = skipValidation(Object.assign({\n              isBlurEvent: isBlurEvent,\n              isReValidateOnChange: isReValidateOnChange,\n              isReValidateOnBlur: isReValidateOnBlur,\n              isTouched: !!_get(formStateRef.current.touched, name),\n              isSubmitted: formStateRef.current.isSubmitted\n            }, modeRef.current));\n            state = updateAndGetDirtyState(name, false);\n            shouldRender = !isEmptyObject(state) || !isBlurEvent && isFieldWatched(name);\n            if (isBlurEvent && !_get(formStateRef.current.touched, name) && readFormStateRef.current.touched) {\n              set(formStateRef.current.touched, name, true);\n              state = Object.assign(Object.assign({}, state), {\n                touched: formStateRef.current.touched\n              });\n            }\n            if (!shouldUnregister && isCheckBoxInput(target)) {\n              set(shallowFieldsStateRef.current, name, getFieldValue(fieldsRef, name));\n            }\n            if (!shouldSkipValidation) {\n              _context6.next = 13;\n              break;\n            }\n            !isBlurEvent && renderWatchedInputs(name);\n            return _context6.abrupt(\"return\", (!isEmptyObject(state) || shouldRender && isEmptyObject(state)) && updateFormState(state));\n          case 13:\n            updateIsValidating();\n            if (!resolverRef.current) {\n              _context6.next = 26;\n              break;\n            }\n            _context6.next = 17;\n            return resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\n          case 17:\n            _yield$resolverRef$cu2 = _context6.sent;\n            errors = _yield$resolverRef$cu2.errors;\n            previousFormIsValid = formStateRef.current.isValid;\n            error = _get(errors, name);\n            if (isCheckBoxInput(target) && !error && resolverRef.current) {\n              parentNodeName = getFieldArrayParentName(name);\n              currentError = _get(errors, parentNodeName, {});\n              currentError.type && currentError.message && (error = currentError);\n              if (parentNodeName && (currentError || _get(formStateRef.current.errors, parentNodeName))) {\n                name = parentNodeName;\n              }\n            }\n            isValid = isEmptyObject(errors);\n            previousFormIsValid !== isValid && (shouldRender = true);\n            _context6.next = 30;\n            break;\n          case 26:\n            _context6.next = 28;\n            return validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef);\n          case 28:\n            _context6.t0 = name;\n            error = _context6.sent[_context6.t0];\n          case 30:\n            !isBlurEvent && renderWatchedInputs(name);\n            shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n          case 32:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return function (_x10) {\n      return _ref19.apply(this, arguments);\n    };\n  }();\n  function setFieldArrayDefaultValues(data) {\n    if (!shouldUnregister) {\n      var copy = cloneObject(data);\n      var _iterator5 = _createForOfIteratorHelper(fieldArrayNamesRef.current),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var value = _step5.value;\n          if (isKey(value) && !copy[value]) {\n            copy = Object.assign(Object.assign({}, copy), _defineProperty({}, value, []));\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return copy;\n    }\n    return data;\n  }\n  function getValues(payload) {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\n    }\n    if (Array.isArray(payload)) {\n      var data = {};\n      var _iterator6 = _createForOfIteratorHelper(payload),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _name = _step6.value;\n          set(data, _name, getFieldValue(fieldsRef, _name, shallowFieldsStateRef));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return data;\n    }\n    return setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister));\n  }\n  var validateResolver = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n    var values,\n      newDefaultValues,\n      _ref21,\n      errors,\n      isValid,\n      _args7 = arguments;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          values = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};\n          newDefaultValues = isEmptyObject(fieldsRef.current) ? defaultValuesRef.current : {};\n          _context7.next = 4;\n          return resolverRef.current(Object.assign(Object.assign(Object.assign({}, newDefaultValues), getValues()), values), contextRef.current, isValidateAllFieldCriteria);\n        case 4:\n          _context7.t0 = _context7.sent;\n          if (_context7.t0) {\n            _context7.next = 7;\n            break;\n          }\n          _context7.t0 = {};\n        case 7:\n          _ref21 = _context7.t0;\n          errors = _ref21.errors;\n          isValid = isEmptyObject(errors);\n          formStateRef.current.isValid !== isValid && updateFormState({\n            isValid: isValid\n          });\n        case 11:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  })), [isValidateAllFieldCriteria]);\n  var removeFieldEventListener = useCallback(function (field, forceDelete) {\n    findRemovedFieldAndRemoveListener(fieldsRef, handleChangeRef.current, field, shallowFieldsStateRef, shouldUnregister, forceDelete);\n    if (shouldUnregister) {\n      unset(validFieldsRef.current, field.ref.name);\n      unset(fieldsWithValidationRef.current, field.ref.name);\n    }\n  }, [shouldUnregister]);\n  var updateWatchedValue = useCallback(function (name) {\n    if (isWatchAllRef.current) {\n      updateFormState();\n    } else {\n      var _iterator7 = _createForOfIteratorHelper(watchFieldsRef.current),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var watchField = _step7.value;\n          if (watchField.startsWith(name)) {\n            updateFormState();\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      renderWatchedInputs(name);\n    }\n  }, []);\n  var removeFieldEventListenerAndRef = useCallback(function (field, forceDelete) {\n    if (field) {\n      removeFieldEventListener(field, forceDelete);\n      if (shouldUnregister && !compact(field.options || []).length) {\n        unset(formStateRef.current.errors, field.ref.name);\n        set(formStateRef.current.dirtyFields, field.ref.name, true);\n        updateFormState({\n          isDirty: isFormDirty()\n        });\n        readFormStateRef.current.isValid && resolverRef.current && validateResolver();\n        updateWatchedValue(field.ref.name);\n      }\n    }\n  }, [validateResolver, removeFieldEventListener]);\n  function clearErrors(name) {\n    name && (Array.isArray(name) ? name : [name]).forEach(function (inputName) {\n      return fieldsRef.current[inputName] && isKey(inputName) ? delete formStateRef.current.errors[inputName] : unset(formStateRef.current.errors, inputName);\n    });\n    updateFormState({\n      errors: name ? formStateRef.current.errors : {}\n    });\n  }\n  function setError(name, error) {\n    var ref = (fieldsRef.current[name] || {}).ref;\n    set(formStateRef.current.errors, name, Object.assign(Object.assign({}, error), {\n      ref: ref\n    }));\n    updateFormState({\n      isValid: false\n    });\n    error.shouldFocus && ref && ref.focus && ref.focus();\n  }\n  var watchInternal = useCallback(function (fieldNames, defaultValue, watchId) {\n    var watchFields = watchId ? useWatchFieldsRef.current[watchId] : watchFieldsRef.current;\n    var fieldValues = getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, false, fieldNames);\n    if (isString(fieldNames)) {\n      var parentNodeName = getFieldArrayParentName(fieldNames) || fieldNames;\n      if (fieldArrayNamesRef.current.has(parentNodeName)) {\n        fieldValues = Object.assign(Object.assign({}, fieldArrayValuesRef.current), fieldValues);\n      }\n      return assignWatchFields(fieldValues, fieldNames, watchFields, isUndefined(_get(defaultValuesRef.current, fieldNames)) ? defaultValue : _get(defaultValuesRef.current, fieldNames), true);\n    }\n    var combinedDefaultValues = isUndefined(defaultValue) ? defaultValuesRef.current : defaultValue;\n    if (Array.isArray(fieldNames)) {\n      return fieldNames.reduce(function (previous, name) {\n        return Object.assign(Object.assign({}, previous), _defineProperty({}, name, assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues)));\n      }, {});\n    }\n    isWatchAllRef.current = isUndefined(watchId);\n    return transformToNestObject(!isEmptyObject(fieldValues) && fieldValues || combinedDefaultValues);\n  }, []);\n  function watch(fieldNames, defaultValue) {\n    return watchInternal(fieldNames, defaultValue);\n  }\n  function unregister(name) {\n    var _iterator8 = _createForOfIteratorHelper(Array.isArray(name) ? name : [name]),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var fieldName = _step8.value;\n        removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n  }\n  function registerFieldRef(ref) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute', ref, \"https://react-hook-form.com/api#useForm\");\n      }\n      if (fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) && !RegExp(\"^\".concat(ref.name.split(/\\[\\d+\\]$/)[0], \"[\\\\d+].\\\\w+\").replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(ref.name)) {\n        return console.warn('📋 `name` prop should be in object shape: name=\"test[index].name\"', ref, 'https://react-hook-form.com/api#useFieldArray');\n      }\n    }\n    var name = ref.name,\n      type = ref.type,\n      value = ref.value;\n    var fieldRefAndValidationOptions = Object.assign({\n      ref: ref\n    }, options);\n    var fields = fieldsRef.current;\n    var isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    var isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    var compareRef = function compareRef(currentRef) {\n      return isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    };\n    var field = fields[name];\n    var isEmptyDefaultValue = true;\n    var defaultValue;\n    if (field && (isRadioOrCheckbox ? Array.isArray(field.options) && compact(field.options).find(function (option) {\n      return value === option.ref.value && compareRef(option.ref);\n    }) : compareRef(field.ref))) {\n      fields[name] = Object.assign(Object.assign({}, field), options);\n      return;\n    }\n    if (type) {\n      field = isRadioOrCheckbox ? Object.assign({\n        options: [].concat(_toConsumableArray(compact(field && field.options || [])), [{\n          ref: ref\n        }]),\n        ref: {\n          type: type,\n          name: name\n        }\n      }, options) : Object.assign({}, fieldRefAndValidationOptions);\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n    fields[name] = field;\n    var isEmptyUnmountFields = isUndefined(_get(shallowFieldsStateRef.current, name));\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = _get(isEmptyUnmountFields ? defaultValuesRef.current : shallowFieldsStateRef.current, name);\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(name, defaultValue);\n      }\n    }\n    if (!isEmptyObject(options)) {\n      set(fieldsWithValidationRef.current, name, true);\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef).then(function (error) {\n          var previousFormIsValid = formStateRef.current.isValid;\n          isEmptyObject(error) ? set(validFieldsRef.current, name, true) : unset(validFieldsRef.current, name);\n          previousFormIsValid !== isEmptyObject(error) && updateFormState();\n        });\n      }\n    }\n    if (shouldUnregister && !(isFieldArray && isEmptyDefaultValue)) {\n      !isFieldArray && unset(formStateRef.current.dirtyFields, name);\n    }\n    if (type) {\n      attachEventListeners(isRadioOrCheckbox && field.options ? field.options[field.options.length - 1] : field, isRadioOrCheckbox || isSelectInput(ref), handleChangeRef.current);\n    }\n  }\n  function register(refOrRegisterOptions, options) {\n    if (!isWindowUndefined) {\n      if (isString(refOrRegisterOptions)) {\n        registerFieldRef({\n          name: refOrRegisterOptions\n        }, options);\n      } else if (isObject(refOrRegisterOptions) && 'name' in refOrRegisterOptions) {\n        registerFieldRef(refOrRegisterOptions, options);\n      } else {\n        return function (ref) {\n          return ref && registerFieldRef(ref, refOrRegisterOptions);\n        };\n      }\n    }\n  }\n  var handleSubmit = useCallback(function (onValid, onInvalid) {\n    return /*#__PURE__*/function () {\n      var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(e) {\n        var fieldErrors, fieldValues, _yield$resolverRef$cu3, errors, values, _i4, _Object$values2, field, _name2, fieldError;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              if (e && e.preventDefault) {\n                e.preventDefault();\n                e.persist();\n              }\n              fieldErrors = {};\n              fieldValues = setFieldArrayDefaultValues(getFieldsValues(fieldsRef, cloneObject(shallowFieldsStateRef.current), shouldUnregister, true));\n              readFormStateRef.current.isSubmitting && updateFormState({\n                isSubmitting: true\n              });\n              _context8.prev = 4;\n              if (!resolverRef.current) {\n                _context8.next = 15;\n                break;\n              }\n              _context8.next = 8;\n              return resolverRef.current(fieldValues, contextRef.current, isValidateAllFieldCriteria);\n            case 8:\n              _yield$resolverRef$cu3 = _context8.sent;\n              errors = _yield$resolverRef$cu3.errors;\n              values = _yield$resolverRef$cu3.values;\n              formStateRef.current.errors = fieldErrors = errors;\n              fieldValues = values;\n              _context8.next = 27;\n              break;\n            case 15:\n              _i4 = 0, _Object$values2 = Object.values(fieldsRef.current);\n            case 16:\n              if (!(_i4 < _Object$values2.length)) {\n                _context8.next = 27;\n                break;\n              }\n              field = _Object$values2[_i4];\n              if (!field) {\n                _context8.next = 24;\n                break;\n              }\n              _name2 = field.ref.name;\n              _context8.next = 22;\n              return validateField(fieldsRef, isValidateAllFieldCriteria, field, shallowFieldsStateRef);\n            case 22:\n              fieldError = _context8.sent;\n              if (fieldError[_name2]) {\n                set(fieldErrors, _name2, fieldError[_name2]);\n                unset(validFieldsRef.current, _name2);\n              } else if (_get(fieldsWithValidationRef.current, _name2)) {\n                unset(formStateRef.current.errors, _name2);\n                set(validFieldsRef.current, _name2, true);\n              }\n            case 24:\n              _i4++;\n              _context8.next = 16;\n              break;\n            case 27:\n              if (!(isEmptyObject(fieldErrors) && Object.keys(formStateRef.current.errors).every(function (name) {\n                return name in fieldsRef.current;\n              }))) {\n                _context8.next = 33;\n                break;\n              }\n              updateFormState({\n                errors: {},\n                isSubmitting: true\n              });\n              _context8.next = 31;\n              return onValid(fieldValues, e);\n            case 31:\n              _context8.next = 39;\n              break;\n            case 33:\n              formStateRef.current.errors = Object.assign(Object.assign({}, formStateRef.current.errors), fieldErrors);\n              _context8.t0 = onInvalid;\n              if (!_context8.t0) {\n                _context8.next = 38;\n                break;\n              }\n              _context8.next = 38;\n              return onInvalid(formStateRef.current.errors, e);\n            case 38:\n              shouldFocusError && focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\n            case 39:\n              _context8.prev = 39;\n              formStateRef.current.isSubmitting = false;\n              updateFormState({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\n                submitCount: formStateRef.current.submitCount + 1\n              });\n              return _context8.finish(39);\n            case 43:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[4,, 39, 43]]);\n      }));\n      return function (_x11) {\n        return _ref22.apply(this, arguments);\n      };\n    }();\n  }, [shouldFocusError, isValidateAllFieldCriteria]);\n  var resetRefs = function resetRefs(_ref23) {\n    var errors = _ref23.errors,\n      isDirty = _ref23.isDirty,\n      isSubmitted = _ref23.isSubmitted,\n      touched = _ref23.touched,\n      isValid = _ref23.isValid,\n      submitCount = _ref23.submitCount,\n      dirtyFields = _ref23.dirtyFields;\n    if (!isValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n    fieldArrayDefaultValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n    updateFormState({\n      submitCount: submitCount ? formStateRef.current.submitCount : 0,\n      isDirty: isDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\n      isValid: isValid ? formStateRef.current.isValid : false,\n      dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\n      touched: touched ? formStateRef.current.touched : {},\n      errors: errors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n  var reset = function reset(values) {\n    var omitResetState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (isWeb) {\n      for (var _i5 = 0, _Object$values3 = Object.values(fieldsRef.current); _i5 < _Object$values3.length; _i5++) {\n        var field = _Object$values3[_i5];\n        if (field) {\n          var _ref24 = field.ref,\n            options = field.options;\n          var inputRef = isRadioOrCheckboxFunction(_ref24) && Array.isArray(options) ? options[0].ref : _ref24;\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form').reset();\n              break;\n            } catch (_a) {}\n          }\n        }\n      }\n    }\n    fieldsRef.current = {};\n    defaultValuesRef.current = Object.assign({}, values || defaultValuesRef.current);\n    values && renderWatchedInputs('');\n    Object.values(resetFieldArrayFunctionRef.current).forEach(function (resetFieldArray) {\n      return isFunction(resetFieldArray) && resetFieldArray();\n    });\n    shallowFieldsStateRef.current = shouldUnregister ? {} : cloneObject(values || defaultValuesRef.current);\n    resetRefs(omitResetState);\n  };\n  useEffect(function () {\n    resolver && readFormStateRef.current.isValid && validateResolver();\n    observerRef.current = observerRef.current || !isWeb ? observerRef.current : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\n  }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\n  useEffect(function () {\n    return function () {\n      observerRef.current && observerRef.current.disconnect();\n      isUnMount.current = true;\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n      Object.values(fieldsRef.current).forEach(function (field) {\n        return removeFieldEventListenerAndRef(field, true);\n      });\n    };\n  }, []);\n  if (!resolver && readFormStateRef.current.isValid) {\n    formState.isValid = deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) && isEmptyObject(formStateRef.current.errors);\n  }\n  var commonProps = {\n    trigger: trigger,\n    setValue: useCallback(setValue, [setInternalValue, trigger]),\n    getValues: useCallback(getValues, []),\n    register: useCallback(register, [defaultValuesRef.current]),\n    unregister: useCallback(unregister, []),\n    formState: isProxyEnabled ? new Proxy(formState, {\n      get: function get(obj, prop) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (prop === 'isValid' && isOnSubmit) {\n            console.warn('📋 `formState.isValid` is applicable with `onTouched`, `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState');\n          }\n        }\n        if (prop in obj) {\n          readFormStateRef.current[prop] = true;\n          return obj[prop];\n        }\n        return undefined;\n      }\n    }) : formState\n  };\n  var control = useMemo(function () {\n    return Object.assign({\n      isFormDirty: isFormDirty,\n      updateWatchedValue: updateWatchedValue,\n      shouldUnregister: shouldUnregister,\n      updateFormState: updateFormState,\n      removeFieldEventListener: removeFieldEventListener,\n      watchInternal: watchInternal,\n      mode: modeRef.current,\n      reValidateMode: {\n        isReValidateOnBlur: isReValidateOnBlur,\n        isReValidateOnChange: isReValidateOnChange\n      },\n      validateResolver: resolver ? validateResolver : undefined,\n      fieldsRef: fieldsRef,\n      resetFieldArrayFunctionRef: resetFieldArrayFunctionRef,\n      useWatchFieldsRef: useWatchFieldsRef,\n      useWatchRenderFunctionsRef: useWatchRenderFunctionsRef,\n      fieldArrayDefaultValuesRef: fieldArrayDefaultValuesRef,\n      validFieldsRef: validFieldsRef,\n      fieldsWithValidationRef: fieldsWithValidationRef,\n      fieldArrayNamesRef: fieldArrayNamesRef,\n      readFormStateRef: readFormStateRef,\n      formStateRef: formStateRef,\n      defaultValuesRef: defaultValuesRef,\n      shallowFieldsStateRef: shallowFieldsStateRef,\n      fieldArrayValuesRef: fieldArrayValuesRef\n    }, commonProps);\n  }, [defaultValuesRef.current, updateWatchedValue, shouldUnregister, removeFieldEventListener, watchInternal]);\n  return Object.assign({\n    watch: watch,\n    control: control,\n    handleSubmit: handleSubmit,\n    reset: useCallback(reset, []),\n    clearErrors: useCallback(clearErrors, []),\n    setError: useCallback(setError, []),\n    errors: formState.errors\n  }, commonProps);\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nvar FormContext = createContext(null);\nFormContext.displayName = 'RHFContext';\nvar useFormContext = function useFormContext() {\n  return useContext(FormContext);\n};\nvar FormProvider = function FormProvider(_a) {\n  var children = _a.children,\n    props = __rest(_a, [\"children\"]);\n  return createElement(FormContext.Provider, {\n    value: Object.assign({}, props)\n  }, children);\n};\nvar generateId = function generateId() {\n  var d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\nfunction removeAtIndexes(data, indexes) {\n  var i = 0;\n  var temp = _toConsumableArray(data);\n  var _iterator9 = _createForOfIteratorHelper(indexes),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var index = _step9.value;\n      temp.splice(index - i, 1);\n      i++;\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n  return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = function removeArrayAt(data, index) {\n  return isUndefined(index) ? [] : removeAtIndexes(data, (Array.isArray(index) ? index : [index]).sort(function (a, b) {\n    return a - b;\n  }));\n};\nvar moveArrayAt = function moveArrayAt(data, from, to) {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n  return [];\n};\nvar swapArrayAt = function swapArrayAt(data, indexA, indexB) {\n  var temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\nfunction prepend(data, value) {\n  return [].concat(_toConsumableArray(Array.isArray(value) ? value : [value || undefined]), _toConsumableArray(data));\n}\nfunction insert(data, index, value) {\n  return [].concat(_toConsumableArray(data.slice(0, index)), _toConsumableArray(Array.isArray(value) ? value : [value || undefined]), _toConsumableArray(data.slice(index)));\n}\nvar fillEmptyArray = function fillEmptyArray(value) {\n  return Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n};\nvar fillBooleanArray = function fillBooleanArray(value) {\n  return (Array.isArray(value) ? value : [value]).map(function (data) {\n    if (isObject(data)) {\n      var object = {};\n      for (var key in data) {\n        object[key] = true;\n      }\n      return object;\n    }\n    return true;\n  });\n};\nvar mapIds = function mapIds() {\n  var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var keyName = arguments.length > 1 ? arguments[1] : undefined;\n  var skipWarn = arguments.length > 2 ? arguments[2] : undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!skipWarn) {\n      var _iterator10 = _createForOfIteratorHelper(values),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var value = _step10.value;\n          if (typeof value === 'object') {\n            if (keyName in value) {\n              console.warn(\"\\uD83D\\uDCCB useFieldArray fieldValues contain the keyName `\".concat(keyName, \"` which is reserved for use by useFieldArray. https://react-hook-form.com/api#useFieldArray\"));\n              break;\n            }\n          } else {\n            console.warn(\"\\uD83D\\uDCCB useFieldArray input's name should be in object shape instead of flat array. https://react-hook-form.com/api#useFieldArray\");\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }\n  return values.map(function (value) {\n    return Object.assign(_defineProperty({}, keyName, value[keyName] || generateId()), value);\n  });\n};\nvar useFieldArray = function useFieldArray(_ref25) {\n  var control = _ref25.control,\n    name = _ref25.name,\n    _ref25$keyName = _ref25.keyName,\n    keyName = _ref25$keyName === void 0 ? 'id' : _ref25$keyName;\n  var methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useFieldArray is missing `control` prop. https://react-hook-form.com/api#useFieldArray');\n    }\n  }\n  var focusIndexRef = useRef(-1);\n  var isUnMount = useRef(false);\n  var _ref26 = control || methods.control,\n    isFormDirty = _ref26.isFormDirty,\n    updateWatchedValue = _ref26.updateWatchedValue,\n    resetFieldArrayFunctionRef = _ref26.resetFieldArrayFunctionRef,\n    fieldArrayNamesRef = _ref26.fieldArrayNamesRef,\n    fieldsRef = _ref26.fieldsRef,\n    defaultValuesRef = _ref26.defaultValuesRef,\n    removeFieldEventListener = _ref26.removeFieldEventListener,\n    formStateRef = _ref26.formStateRef,\n    shallowFieldsStateRef = _ref26.shallowFieldsStateRef,\n    updateFormState = _ref26.updateFormState,\n    readFormStateRef = _ref26.readFormStateRef,\n    validFieldsRef = _ref26.validFieldsRef,\n    fieldsWithValidationRef = _ref26.fieldsWithValidationRef,\n    fieldArrayDefaultValuesRef = _ref26.fieldArrayDefaultValuesRef,\n    validateResolver = _ref26.validateResolver,\n    getValues = _ref26.getValues,\n    shouldUnregister = _ref26.shouldUnregister,\n    fieldArrayValuesRef = _ref26.fieldArrayValuesRef;\n  var getDefaultValues = function getDefaultValues(values) {\n    return _get(shouldUnregister ? values : shallowFieldsStateRef.current, name, []);\n  };\n  var fieldArrayParentName = getFieldArrayParentName(name);\n  var memoizedDefaultValues = useRef(_toConsumableArray(_get(fieldArrayDefaultValuesRef.current, fieldArrayParentName) ? getDefaultValues(fieldArrayDefaultValuesRef.current) : getDefaultValues(defaultValuesRef.current)));\n  var _useState3 = useState(mapIds(memoizedDefaultValues.current, keyName)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    fields = _useState4[0],\n    setFields = _useState4[1];\n  set(fieldArrayValuesRef.current, name, compact(fields));\n  var omitKey = function omitKey(fields) {\n    return fields.map(function () {\n      var _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _b = keyName,\n        omitted = _a[_b],\n        rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n      return rest;\n    });\n  };\n  fieldArrayNamesRef.current.add(name);\n  var getFieldArrayValue = useCallback(function () {\n    return _get(fieldArrayValuesRef.current, name, []);\n  }, [name]);\n  var getCurrentFieldsValues = function getCurrentFieldsValues() {\n    return mapIds(_get(getValues(), name, getFieldArrayValue()).map(function (item, index) {\n      return Object.assign(Object.assign({}, getFieldArrayValue()[index]), item);\n    }), keyName, true);\n  };\n  fieldArrayNamesRef.current.add(name);\n  if (fieldArrayParentName && !_get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)) {\n    set(fieldArrayDefaultValuesRef.current, fieldArrayParentName, cloneObject(_get(defaultValuesRef.current, fieldArrayParentName)));\n  }\n  var setFieldAndValidState = function setFieldAndValidState(fieldsValues) {\n    setFields(fieldsValues);\n    set(fieldArrayValuesRef.current, name, fieldsValues);\n    if (readFormStateRef.current.isValid && validateResolver) {\n      var values = getValues();\n      set(values, name, fieldsValues);\n      validateResolver(values);\n    }\n  };\n  var resetFields = function resetFields() {\n    for (var key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name)) {\n        removeFieldEventListener(fieldsRef.current[key], true);\n        delete fieldsRef.current[key];\n      }\n    }\n  };\n  var cleanup = function cleanup(ref) {\n    return !compact(_get(ref, name, [])).length && unset(ref, name);\n  };\n  var updateDirtyFieldsWithDefaultValues = function updateDirtyFieldsWithDefaultValues(updatedFieldArrayValues) {\n    if (updatedFieldArrayValues) {\n      set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues), _get(defaultValuesRef.current, name, []), _get(formStateRef.current.dirtyFields, name, [])));\n    }\n  };\n  var batchStateUpdate = function batchStateUpdate(method, args, updatedFieldValues) {\n    var updatedFormValues = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    var shouldSet = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var shouldUpdateValid = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    if (_get(shallowFieldsStateRef.current, name)) {\n      var output = method(_get(shallowFieldsStateRef.current, name), args.argA, args.argB);\n      shouldSet && set(shallowFieldsStateRef.current, name, output);\n    }\n    if (_get(fieldArrayDefaultValuesRef.current, name)) {\n      var _output = method(_get(fieldArrayDefaultValuesRef.current, name), args.argA, args.argB);\n      shouldSet && set(fieldArrayDefaultValuesRef.current, name, _output);\n    }\n    if (Array.isArray(_get(formStateRef.current.errors, name))) {\n      var _output2 = method(_get(formStateRef.current.errors, name), args.argA, args.argB);\n      shouldSet && set(formStateRef.current.errors, name, _output2);\n      cleanup(formStateRef.current.errors);\n    }\n    if (readFormStateRef.current.touched && _get(formStateRef.current.touched, name)) {\n      var _output3 = method(_get(formStateRef.current.touched, name), args.argA, args.argB);\n      shouldSet && set(formStateRef.current.touched, name, _output3);\n      cleanup(formStateRef.current.touched);\n    }\n    if (readFormStateRef.current.dirtyFields || readFormStateRef.current.isDirty) {\n      set(formStateRef.current.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFormValues), _get(defaultValuesRef.current, name, []), _get(formStateRef.current.dirtyFields, name, [])));\n      updateDirtyFieldsWithDefaultValues(updatedFieldValues);\n      cleanup(formStateRef.current.dirtyFields);\n    }\n    if (shouldUpdateValid && readFormStateRef.current.isValid && !validateResolver) {\n      set(validFieldsRef.current, name, method(_get(validFieldsRef.current, name, []), args.argA));\n      cleanup(validFieldsRef.current);\n      set(fieldsWithValidationRef.current, name, method(_get(fieldsWithValidationRef.current, name, []), args.argA));\n      cleanup(fieldsWithValidationRef.current);\n    }\n    if (!isUnMount.current && readFormStateRef.current.isDirty) {\n      updateFormState({\n        isDirty: isFormDirty(name, omitKey(updatedFormValues))\n      });\n    }\n  };\n  var append = function append(value) {\n    var shouldFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var appendValue = Array.isArray(value) ? value : [value];\n    var updateFormValues = [].concat(_toConsumableArray(getCurrentFieldsValues()), _toConsumableArray(mapIds(appendValue, keyName)));\n    setFieldAndValidState(updateFormValues);\n    if (readFormStateRef.current.dirtyFields || readFormStateRef.current.isDirty) {\n      updateDirtyFieldsWithDefaultValues(updateFormValues);\n      updateFormState({\n        isDirty: true,\n        dirtyFields: formStateRef.current.dirtyFields\n      });\n    }\n    !shouldUnregister && set(shallowFieldsStateRef.current, name, [].concat(_toConsumableArray(_get(shallowFieldsStateRef.current, name) || []), _toConsumableArray(cloneObject(appendValue))));\n    focusIndexRef.current = shouldFocus ? _get(fieldArrayValuesRef.current, name).length - 1 : -1;\n  };\n  var prepend$1 = function prepend$1(value) {\n    var shouldFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var emptyArray = fillEmptyArray(value);\n    var updatedFieldArrayValues = prepend(getCurrentFieldsValues(), mapIds(Array.isArray(value) ? value : [value], keyName));\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(prepend, {\n      argA: emptyArray,\n      argC: fillBooleanArray(value)\n    }, updatedFieldArrayValues);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n  var remove = function remove(index) {\n    var fieldValues = getCurrentFieldsValues();\n    var updatedFieldValues = removeArrayAt(fieldValues, index);\n    setFieldAndValidState(updatedFieldValues);\n    resetFields();\n    batchStateUpdate(removeArrayAt, {\n      argA: index,\n      argC: index\n    }, updatedFieldValues, removeArrayAt(fieldValues, index), true, true);\n  };\n  var insert$1 = function insert$1(index, value) {\n    var shouldFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var emptyArray = fillEmptyArray(value);\n    var fieldValues = getCurrentFieldsValues();\n    var updatedFieldArrayValues = insert(fieldValues, index, mapIds(Array.isArray(value) ? value : [value], keyName));\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(insert, {\n      argA: index,\n      argB: emptyArray,\n      argC: index,\n      argD: fillBooleanArray(value)\n    }, updatedFieldArrayValues, insert(fieldValues, index));\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n  var swap = function swap(indexA, indexB) {\n    var fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields();\n    setFieldAndValidState(_toConsumableArray(fieldValues));\n    batchStateUpdate(swapArrayAt, {\n      argA: indexA,\n      argB: indexB,\n      argC: indexA,\n      argD: indexB\n    }, undefined, fieldValues, false);\n  };\n  var move = function move(from, to) {\n    var fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields();\n    setFieldAndValidState(_toConsumableArray(fieldValues));\n    batchStateUpdate(moveArrayAt, {\n      argA: from,\n      argB: to,\n      argC: from,\n      argD: to\n    }, undefined, fieldValues, false);\n  };\n  useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        console.warn('📋 useFieldArray is missing `name` attribute. https://react-hook-form.com/api#useFieldArray');\n      }\n    }\n    var defaultValues = _get(fieldArrayDefaultValuesRef.current, name);\n    if (defaultValues && fields.length < defaultValues.length) {\n      set(fieldArrayDefaultValuesRef.current, name, defaultValues.slice(1));\n    }\n    updateWatchedValue(name);\n    if (focusIndexRef.current > -1) {\n      for (var key in fieldsRef.current) {\n        var field = fieldsRef.current[key];\n        if (key.startsWith(\"\".concat(name, \"[\").concat(focusIndexRef.current, \"]\")) && field.ref.focus) {\n          field.ref.focus();\n          break;\n        }\n      }\n    }\n    focusIndexRef.current = -1;\n  }, [fields, name]);\n  useEffect(function () {\n    var resetFunctions = resetFieldArrayFunctionRef.current;\n    var fieldArrayNames = fieldArrayNamesRef.current;\n    if (!getFieldArrayParentName(name)) {\n      resetFunctions[name] = function (data) {\n        resetFields();\n        !data && unset(fieldArrayDefaultValuesRef.current, name);\n        unset(shallowFieldsStateRef.current, name);\n        memoizedDefaultValues.current = _get(data || defaultValuesRef.current, name);\n        if (!isUnMount.current) {\n          setFields(mapIds(memoizedDefaultValues.current, keyName));\n        }\n      };\n    }\n    return function () {\n      isUnMount.current = true;\n      shouldUnregister && remove();\n      resetFields();\n      delete resetFunctions[name];\n      unset(fieldArrayValuesRef.current, name);\n      fieldArrayNames.delete(name);\n    };\n  }, []);\n  return {\n    swap: useCallback(swap, [name]),\n    move: useCallback(move, [name]),\n    prepend: useCallback(prepend$1, [name]),\n    append: useCallback(append, [name]),\n    remove: useCallback(remove, [name]),\n    insert: useCallback(insert$1, [name]),\n    fields: compact(fields)\n  };\n};\nvar getInputValue = function getInputValue(event) {\n  return isPrimitive(event) || !isObject(event.target) || isObject(event.target) && !event.type ? event : isUndefined(event.target.value) ? event.target.checked : event.target.value;\n};\nfunction useController(_ref27) {\n  var name = _ref27.name,\n    rules = _ref27.rules,\n    defaultValue = _ref27.defaultValue,\n    control = _ref27.control,\n    onFocus = _ref27.onFocus;\n  var methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 Controller is missing `control` prop. https://react-hook-form.com/api#Controller');\n    }\n  }\n  var _ref28 = control || methods.control,\n    defaultValuesRef = _ref28.defaultValuesRef,\n    setValue = _ref28.setValue,\n    register = _ref28.register,\n    unregister = _ref28.unregister,\n    trigger = _ref28.trigger,\n    mode = _ref28.mode,\n    _ref28$reValidateMode = _ref28.reValidateMode,\n    isReValidateOnBlur = _ref28$reValidateMode.isReValidateOnBlur,\n    isReValidateOnChange = _ref28$reValidateMode.isReValidateOnChange,\n    formState = _ref28.formState,\n    _ref28$formStateRef$c = _ref28.formStateRef.current,\n    isSubmitted = _ref28$formStateRef$c.isSubmitted,\n    touched = _ref28$formStateRef$c.touched,\n    errors = _ref28$formStateRef$c.errors,\n    updateFormState = _ref28.updateFormState,\n    readFormStateRef = _ref28.readFormStateRef,\n    fieldsRef = _ref28.fieldsRef,\n    fieldArrayNamesRef = _ref28.fieldArrayNamesRef,\n    shallowFieldsStateRef = _ref28.shallowFieldsStateRef;\n  var isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  var getInitialValue = function getInitialValue() {\n    return !isUndefined(_get(shallowFieldsStateRef.current, name)) && isNotFieldArray ? _get(shallowFieldsStateRef.current, name) : isUndefined(defaultValue) ? _get(defaultValuesRef.current, name) : defaultValue;\n  };\n  var _useState5 = useState(getInitialValue()),\n    _useState6 = _slicedToArray(_useState5, 2),\n    value = _useState6[0],\n    setInputStateValue = _useState6[1];\n  var valueRef = useRef(value);\n  var ref = useRef({\n    focus: function focus() {\n      return null;\n    }\n  });\n  var onFocusRef = useRef(onFocus || function () {\n    if (isFunction(ref.current.focus)) {\n      ref.current.focus();\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!isFunction(ref.current.focus)) {\n        console.warn(\"\\uD83D\\uDCCB 'ref' from Controller render prop must be attached to a React component or a DOM Element whose ref provides a 'focus()' method\");\n      }\n    }\n  });\n  var shouldValidate = useCallback(function (isBlurEvent) {\n    return !skipValidation(Object.assign({\n      isBlurEvent: isBlurEvent,\n      isReValidateOnBlur: isReValidateOnBlur,\n      isReValidateOnChange: isReValidateOnChange,\n      isSubmitted: isSubmitted,\n      isTouched: !!_get(touched, name)\n    }, mode));\n  }, [isReValidateOnBlur, isReValidateOnChange, isSubmitted, touched, name, mode]);\n  var commonTask = useCallback(function (_ref29) {\n    var _ref30 = _slicedToArray(_ref29, 1),\n      event = _ref30[0];\n    var data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  }, []);\n  var registerField = useCallback(function (shouldUpdateValue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        return console.warn('📋 Field is missing `name` prop. https://react-hook-form.com/api#Controller');\n      }\n    }\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = Object.assign({\n        ref: fieldsRef.current[name].ref\n      }, rules);\n    } else {\n      register(Object.defineProperties({\n        name: name,\n        focus: onFocusRef.current\n      }, {\n        value: {\n          set: function set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get: function get() {\n            return valueRef.current;\n          }\n        }\n      }), rules);\n      shouldUpdateValue = isUndefined(_get(defaultValuesRef.current, name));\n    }\n    shouldUpdateValue && isNotFieldArray && setInputStateValue(getInitialValue());\n  }, [rules, name, register]);\n  useEffect(function () {\n    return function () {\n      return unregister(name);\n    };\n  }, [name]);\n  useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isUndefined(value)) {\n        console.warn(\"\\uD83D\\uDCCB \".concat(name, \" is missing in the 'defaultValue' prop of either its Controller (https://react-hook-form.com/api#Controller) or useForm (https://react-hook-form.com/api#useForm)\"));\n      }\n      if (!isNotFieldArray && isUndefined(defaultValue)) {\n        console.warn('📋 Controller is missing `defaultValue` prop when using `useFieldArray`. https://react-hook-form.com/api#Controller');\n      }\n    }\n    registerField();\n  }, [registerField]);\n  useEffect(function () {\n    !fieldsRef.current[name] && registerField(true);\n  });\n  var onBlur = useCallback(function () {\n    if (readFormStateRef.current.touched && !_get(touched, name)) {\n      set(touched, name, true);\n      updateFormState({\n        touched: touched\n      });\n    }\n    shouldValidate(true) && trigger(name);\n  }, [name, updateFormState, shouldValidate, trigger, readFormStateRef]);\n  var onChange = useCallback(function () {\n    for (var _len = arguments.length, event = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n      event[_key2] = arguments[_key2];\n    }\n    return setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true\n    });\n  }, [setValue, name, shouldValidate]);\n  return {\n    field: {\n      onChange: onChange,\n      onBlur: onBlur,\n      name: name,\n      value: value,\n      ref: ref\n    },\n    meta: Object.defineProperties({\n      invalid: !!_get(errors, name)\n    }, {\n      isDirty: {\n        get: function get() {\n          return !!_get(formState.dirtyFields, name);\n        }\n      },\n      isTouched: {\n        get: function get() {\n          return !!_get(formState.touched, name);\n        }\n      }\n    })\n  };\n}\nfunction useWatch(_ref31) {\n  var control = _ref31.control,\n    name = _ref31.name,\n    defaultValue = _ref31.defaultValue;\n  var methods = useFormContext();\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useWatch is missing `control` prop. https://react-hook-form.com/api#useWatch');\n    }\n  }\n  var _ref32 = control || methods.control,\n    useWatchFieldsRef = _ref32.useWatchFieldsRef,\n    useWatchRenderFunctionsRef = _ref32.useWatchRenderFunctionsRef,\n    watchInternal = _ref32.watchInternal,\n    defaultValuesRef = _ref32.defaultValuesRef;\n  var updateValue = useState()[1];\n  var idRef = useRef();\n  var defaultValueRef = useRef(defaultValue);\n  useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (name === '') {\n        console.warn('📋 useWatch is missing `name` attribute. https://react-hook-form.com/api#useWatch');\n      }\n    }\n    var id = idRef.current = generateId();\n    var watchFieldsHookRender = useWatchRenderFunctionsRef.current;\n    var watchFieldsHook = useWatchFieldsRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = function () {\n      return updateValue({});\n    };\n    watchInternal(name, defaultValueRef.current, id);\n    return function () {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [name, useWatchRenderFunctionsRef, useWatchFieldsRef, watchInternal, defaultValueRef]);\n  return idRef.current ? watchInternal(name, defaultValueRef.current, idRef.current) : isUndefined(defaultValue) ? isString(name) ? _get(defaultValuesRef.current, name) : Array.isArray(name) ? name.reduce(function (previous, inputName) {\n    return Object.assign(Object.assign({}, previous), _defineProperty({}, inputName, _get(defaultValuesRef.current, inputName)));\n  }, {}) : defaultValuesRef.current : defaultValue;\n}\nvar Controller = function Controller(props) {\n  var rules = props.rules,\n    as = props.as,\n    render = props.render,\n    defaultValue = props.defaultValue,\n    control = props.control,\n    onFocus = props.onFocus,\n    rest = __rest(props, [\"rules\", \"as\", \"render\", \"defaultValue\", \"control\", \"onFocus\"]);\n  var _useController = useController(props),\n    field = _useController.field,\n    meta = _useController.meta;\n  var componentProps = Object.assign(Object.assign({}, rest), field);\n  return as ? isValidElement(as) ? cloneElement(as, componentProps) : createElement(as, componentProps) : render ? render(field, meta) : null;\n};\nexport { Controller, FormProvider, appendErrors, _get as get, transformToNestObject, useController, useFieldArray, useForm, useFormContext, useWatch };","map":{"version":3,"names":["isHTMLElement","value","HTMLElement","EVENTS","BLUR","CHANGE","INPUT","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","SELECT","UNDEFINED","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","attachEventListeners","_ref","shouldAttachChangeEvent","handleChange","ref","addEventListener","isNullOrUndefined","isObjectType","isObject","Array","isArray","Date","isKey","test","compact","filter","Boolean","stringToPath","input","replace","split","set","object","path","index","tempPath","length","lastIndex","key","newValue","objValue","isNaN","transformToNestObject","data","arguments","undefined","isUndefined","val","get","obj","defaultValue","result","reduce","focusOnErrorField","fields","fieldErrors","field","focus","options","removeAllEventListeners","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","getRadioValue","previous","option","checked","getMultipleSelectValue","_toConsumableArray","_ref2","selected","map","_ref3","isRadioInput","element","type","isFileInput","isCheckBoxInput","isMultipleSelect","concat","defaultResult","validResult","getCheckboxValue","values","_ref4","_options$0$ref","attributes","getFieldValue","fieldsRef","name","shallowFieldsStateRef","excludeDisabled","shouldKeepRawValue","current","_field$ref","disabled","valueAsNumber","valueAsDate","setValueAs","files","NaN","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","isEmptyObject","Object","keys","isBoolean","baseGet","updatePath","slice","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","fieldRef","forEach","isPrimitive","deepMerge","target","source","targetValue","sourceValue","_a","deepEqual","object1","object2","isErrorObject","isValidElement","keys1","keys2","_i","_keys","val1","val2","setDirtyFields","defaultValues","dirtyFields","parentName","assign","_defineProperty","setFieldArrayDirtyFields","isString","getFieldsValues","shallowFieldsState","search","output","_loop","startsWith","find","isErrorStateChanged","_ref5","errors","error","validFields","fieldsWithValidation","previousError","isRegex","RegExp","getValueAndMessage","validationData","message","isFunction","isMessage","getValidateError","appendErrors","validateAllFieldCriteria","types","validateField","_ref7","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref6","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","getMinMaxMessage","_ref8","_value","exceedMax","exceedMin","maxOutput","minOutput","valueNumber","valueDate","maxLengthOutput","minLengthOutput","_exceedMax","_exceedMin","_getValueAndMessage","patternValue","_message","validateRef","validateError","validationResult","_i2","_Object$entries","_Object$entries$_i","validateFunction","validateResult","_validateError","wrap","_callee$","_context","prev","next","bind","maxLengthMessage","minLengthMessage","maxType","minType","abrupt","parseFloat","sent","entries","_slicedToArray","stop","_x","_x2","_x3","_x4","apply","getPath","rootPath","paths","property","rootName","push","assignWatchFields","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","skipValidation","_ref9","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","getFieldArrayParentName","substring","indexOf","isMatchFieldArrayName","searchName","isNameInFieldArray","names","some","isSelectInput","onDomRemove","removeFieldEventListenerAndRef","observer","MutationObserver","_i3","_Object$values","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","observe","window","document","childList","subtree","isWeb","cloneObject","copy","File","includes","constructor","getTime","Set","_iterator2","_step2","Map","_iterator3","_step3","modeChecker","mode","isOnSubmit","isRadioOrCheckboxFunction","isWindowUndefined","isProxyEnabled","Proxy","useForm","_ref10","_ref10$mode","_ref10$reValidateMode","reValidateMode","resolver","context","_ref10$defaultValues","_ref10$shouldFocusErr","shouldFocusError","_ref10$shouldUnregist","criteriaMode","useRef","fieldArrayDefaultValuesRef","fieldArrayValuesRef","watchFieldsRef","useWatchFieldsRef","useWatchRenderFunctionsRef","fieldsWithValidationRef","validFieldsRef","defaultValuesRef","isUnMount","isWatchAllRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","modeRef","_modeRef$current","isValidateAllFieldCriteria","_useState","useState","isDirty","isValidating","submitCount","touched","isSubmitting","isSubmitSuccessful","_useState2","formState","setFormState","readFormStateRef","formStateRef","observerRef","_useRef$current","updateFormState","useCallback","state","updateIsValidating","shouldRenderBaseOnError","shouldRender","shouldReRender","setFieldValue","rawValue","_fieldsRef$current$na","_ref11","radioRef","selectRef","_ref12","checkboxRef","isFormDirty","formValues","getValues","updateAndGetDirtyState","isFieldDirty","isDirtyFieldExist","previousIsDirty","isChanged","executeValidation","_ref13","_callee2","skipReRender","_callee2$","_context2","process","env","NODE_ENV","console","warn","t0","_x5","_x6","executeSchemaOrResolverValidation","_ref14","_callee3","_yield$resolverRef$cu","previousFormIsValid","isInputsValid","_error","_callee3$","_context3","every","_x7","trigger","_ref15","_callee5","_callee5$","_context5","Promise","_ref16","_callee4","_callee4$","_context4","_x9","_x8","setInternalValues","_ref17","shouldDirty","shouldValidate","_iterator4","_step4","setInternalValue","config","has","isFieldWatched","match","renderWatchedInputs","found","size","setValue","_ref19","_callee6","_ref18","shouldSkipValidation","_yield$resolverRef$cu2","parentNodeName","currentError","_callee6$","_context6","_x10","setFieldArrayDefaultValues","_iterator5","_step5","payload","_iterator6","_step6","validateResolver","_callee7","newDefaultValues","_ref21","_args7","_callee7$","_context7","removeFieldEventListener","updateWatchedValue","_iterator7","_step7","watchField","clearErrors","inputName","setError","shouldFocus","watchInternal","fieldNames","watchId","combinedDefaultValues","watch","unregister","_iterator8","_step8","registerFieldRef","fieldRefAndValidationOptions","isFieldArray","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","then","register","refOrRegisterOptions","handleSubmit","onValid","onInvalid","_ref22","_callee8","_yield$resolverRef$cu3","_i4","_Object$values2","_name2","fieldError","_callee8$","_context8","preventDefault","persist","finish","_x11","resetRefs","_ref23","reset","omitResetState","_i5","_Object$values3","inputRef","closest","resetFieldArray","useEffect","disconnect","commonProps","prop","control","useMemo","FormContext","createContext","displayName","useFormContext","useContext","FormProvider","children","props","__rest","createElement","Provider","generateId","d","performance","now","c","r","Math","random","toString","removeAtIndexes","indexes","i","temp","_iterator9","_step9","splice","removeArrayAt","sort","a","b","moveArrayAt","from","to","swapArrayAt","indexA","indexB","prepend","insert","fillEmptyArray","fill","fillBooleanArray","mapIds","keyName","skipWarn","_iterator10","_step10","useFieldArray","_ref25","_ref25$keyName","methods","Error","focusIndexRef","_ref26","getDefaultValues","fieldArrayParentName","memoizedDefaultValues","_useState3","_useState4","setFields","omitKey","_b","omitted","rest","getFieldArrayValue","getCurrentFieldsValues","setFieldAndValidState","fieldsValues","resetFields","cleanup","updateDirtyFieldsWithDefaultValues","updatedFieldArrayValues","batchStateUpdate","method","args","updatedFieldValues","updatedFormValues","shouldSet","shouldUpdateValid","argA","argB","append","appendValue","updateFormValues","prepend$1","emptyArray","argC","remove","insert$1","argD","swap","move","resetFunctions","fieldArrayNames","delete","getInputValue","event","useController","_ref27","rules","onFocus","_ref28","_ref28$reValidateMode","_ref28$formStateRef$c","isNotFieldArray","getInitialValue","_useState5","_useState6","setInputStateValue","valueRef","onFocusRef","commonTask","_ref29","_ref30","registerField","shouldUpdateValue","defineProperties","_len","_key2","meta","invalid","useWatch","_ref31","_ref32","updateValue","idRef","defaultValueRef","id","watchFieldsHookRender","watchFieldsHook","Controller","as","render","_useController","componentProps","cloneElement"],"sources":["/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isHTMLElement.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/constants.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/attachEventListeners.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isNullOrUndefined.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isObject.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isKey.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/compact.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/stringToPath.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/set.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/transformToNestObject.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isUndefined.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/get.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/focusOnErrorField.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/removeAllEventListeners.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getRadioValue.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getMultipleSelectValue.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isRadioInput.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isFileInput.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isCheckBoxInput.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isMultipleSelect.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getCheckboxValue.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getFieldValue.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isDetached.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isEmptyObject.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isBoolean.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/unset.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/findRemovedFieldAndRemoveListener.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isPrimitive.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/deepMerge.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/deepEqual.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/setFieldArrayDirtyFields.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isString.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getFieldsValues.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/isErrorStateChanged.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isRegex.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getValueAndMessage.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isFunction.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isMessage.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getValidateError.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/appendErrors.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/validateField.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/getPath.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/assignWatchFields.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/skipValidation.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getNodeParentName.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/isNameInFieldArray.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isSelectInput.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/onDomRemove.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isWeb.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/cloneObject.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/validationModeChecker.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/isRadioOrCheckbox.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/useForm.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/useFormContext.tsx","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/generateId.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/remove.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/move.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/swap.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/prepend.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/insert.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/fillEmptyArray.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/utils/fillBooleanArray.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/useFieldArray.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/logic/getInputValue.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/useController.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/useWatch.ts","/home/draouil/Documents/Workspaces/VideosProject/node_modules/react-hook-form/src/controller.tsx"],"sourcesContent":["export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent?: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","import isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","export default (value: string) => /^\\w*$/.test(value);\n","export default (value: any[]) => value.filter(Boolean);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(\n    input\n      .replace(/[\"|']/g, '')\n      .replace(/\\[/g, '.')\n      .replace(/\\]/g, '')\n      .split('.'),\n  );\n","import isObject from './isObject';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types';\n\nexport default (data: FieldValues, value: Record<string, any> = {}): any => {\n  for (const key in data) {\n    !isKey(key) ? set(value, key, data[key]) : (value[key] = data[key]);\n  }\n  return value;\n};\n","export default (val: unknown): val is undefined => val === undefined;\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport compact from './compact';\n\nexport default (obj: any = {}, path: string, defaultValue?: unknown) => {\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport isUndefined from '../utils/isUndefined';\nimport { FieldErrors, FieldRefs } from '../types';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus && isUndefined(field.ref.focus())) {\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import { RadioOrCheckboxOption } from '../types';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport get from '../utils/get';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  shallowFieldsStateRef?: React.MutableRefObject<Partial<FieldValues>>,\n  excludeDisabled?: boolean,\n  shouldKeepRawValue?: boolean,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value, disabled },\n      ref,\n      valueAsNumber,\n      valueAsDate,\n      setValueAs,\n    } = field;\n\n    if (disabled && excludeDisabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return shouldKeepRawValue\n      ? value\n      : valueAsNumber\n      ? value === ''\n        ? NaN\n        : +value\n      : valueAsDate\n      ? (ref as HTMLInputElement).valueAsDate\n      : setValueAs\n      ? setValueAs(value)\n      : value;\n  }\n\n  if (shallowFieldsStateRef) {\n    return get(shallowFieldsStateRef.current, name);\n  }\n}\n","import { Ref } from '../types';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport set from '../utils/set';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport unset from '../utils/unset';\nimport compact from '../utils/compact';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  shallowFieldsStateRef: React.MutableRefObject<FieldValues>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name },\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, shallowFieldsStateRef);\n\n    !isUndefined(value) && set(shallowFieldsStateRef.current, name, value);\n  }\n\n  if (!ref.type || !fieldRef) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if (isRadioInput(ref) || isCheckBoxInput(ref)) {\n    if (Array.isArray(fieldRef.options) && fieldRef.options.length) {\n      compact(fieldRef.options).forEach((option = {}, index): void => {\n        if (\n          (isDetached(option.ref) && isSameRef(option, option.ref)) ||\n          forceDelete\n        ) {\n          removeAllEventListeners(option.ref, handleChange);\n          unset(fieldRef.options, `[${index}]`);\n        }\n      });\n\n      if (fieldRef.options && !compact(fieldRef.options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    delete fieldsRef.current[name];\n  }\n}\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] =\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\n          ? deepMerge(targetValue, sourceValue)\n          : sourceValue;\n    } catch {}\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport isObject from '../utils/isObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(\n  object1: any,\n  object2: any,\n  isErrorObject?: boolean,\n) {\n  if (\n    isPrimitive(object1) ||\n    isPrimitive(object2) ||\n    object1 instanceof Date ||\n    object2 instanceof Date\n  ) {\n    return object1 === object2;\n  }\n\n  if (!React.isValidElement(object1)) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      const val1 = object1[key];\n\n      if (!(isErrorObject && key === 'ref')) {\n        const val2 = object2[key];\n\n        if (\n          (isObject(val1) || Array.isArray(val1)) &&\n          (isObject(val2) || Array.isArray(val2))\n            ? !deepEqual(val1, val2, isErrorObject)\n            : val1 !== val2\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n","import { get } from '../utils';\nimport set from '../utils/set';\nimport { deepMerge } from '../utils/deepMerge';\nimport deepEqual from '../utils/deepEqual';\n\nfunction setDirtyFields<\n  T extends Record<string, unknown>[],\n  U extends Record<string, unknown>[],\n  K extends Record<string, boolean | []>\n>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n  parentNode?: K,\n  parentName?: keyof K,\n) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(\n          values[index][key] as T,\n          get(defaultValues[index] || {}, key, []),\n          dirtyFields[index][key] as [],\n          dirtyFields[index],\n          key,\n        );\n      } else {\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n          ? set(dirtyFields[index] || {}, key)\n          : (dirtyFields[index] = {\n              ...dirtyFields[index],\n              [key]: true,\n            });\n      }\n    }\n\n    parentNode &&\n      !dirtyFields.length &&\n      delete parentNode[parentName as keyof K];\n  }\n\n  return dirtyFields;\n}\n\nexport default <T extends U, U extends Record<string, unknown>[]>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n) =>\n  deepMerge(\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\n  );\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  shallowFieldsState: Record<string, any>,\n  shouldUnregister: boolean,\n  excludeDisabled?: boolean,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : Array.isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n        undefined,\n        excludeDisabled,\n      );\n    }\n  }\n\n  return shouldUnregister\n    ? transformToNestObject(output)\n    : deepMerge(shallowFieldsState, transformToNestObject(output));\n};\n","import get from '../utils/get';\nimport isUndefined from '../utils/isUndefined';\nimport deepEqual from '../utils/deepEqual';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldError,\n} from '../types';\n\nexport default <TFieldValues extends FieldValues>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FieldError | undefined;\n  name: InternalFieldName<TFieldValues>;\n  validFields: FieldNamesMarkedBoolean<TFieldValues>;\n  fieldsWithValidation: FieldNamesMarkedBoolean<TFieldValues>;\n}): boolean => {\n  const isValid = isUndefined(error);\n  const previousError = get(errors, name);\n\n  return (\n    (isValid && !!previousError) ||\n    (!isValid && !deepEqual(previousError, error, true)) ||\n    (isValid && get(fieldsWithValidation, name) && !get(validFields, name))\n  );\n};\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule } from '../types';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import * as React from 'react';\nimport isString from '../utils/isString';\nimport { Message } from '../types';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  InternalFieldErrors,\n} from '../types';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  InternalFieldErrors,\n} from '../types';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  shallowFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<InternalFieldErrors<TFieldValues>> => {\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: InternalFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: isRadioOrCheckbox\n          ? (((fieldsRef.current[name] as Field).options || [])[0] || {}).ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if ((!isNullOrUndefined(min) || !isNullOrUndefined(max)) && value !== '') {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(value)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      value.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      value.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && pattern && !isEmpty) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(\n      fieldsRef,\n      name,\n      shallowFieldsStateRef,\n      false,\n      true,\n    );\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldName } from '../types';\n\nexport const getPath = <TFieldValues>(\n  rootPath: FieldName<TFieldValues>,\n  values: any,\n  paths: FieldName<TFieldValues>[] = [],\n): FieldName<TFieldValues>[] => {\n  for (const property in values) {\n    const rootName = (rootPath +\n      (isObject(values)\n        ? `.${property}`\n        : `[${property}]`)) as FieldName<TFieldValues>;\n\n    isPrimitive(values[property])\n      ? paths.push(rootName)\n      : getPath(rootName, values[property], paths);\n  }\n\n  return paths;\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport {\n  DeepPartial,\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value = undefined;\n\n  watchFields.add(fieldName);\n\n  if (!isEmptyObject(fieldValues)) {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || Array.isArray(value)) {\n      getPath(fieldName, value).forEach((name) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import { FieldValues, InternalFieldName } from '../types';\n\nexport const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}([|.)\\\\d+`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (\n  names: Set<InternalFieldName<FieldValues>>,\n  name: InternalFieldName<FieldValues>,\n) => [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import * as React from 'react';\nimport { Field, FieldRefs } from '../types';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove<TFieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  removeFieldEventListenerAndRef: (\n    field: Field | undefined,\n    forceDelete?: boolean,\n  ) => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    for (const field of Object.values(fieldsRef.current)) {\n      if (field && field.options) {\n        for (const option of field.options) {\n          if (option && option.ref && isDetached(option.ref)) {\n            removeFieldEventListenerAndRef(field);\n          }\n        }\n      } else if (field && isDetached(field.ref)) {\n        removeFieldEventListenerAndRef(field);\n      }\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { UNDEFINED } from '../constants';\n\nexport default typeof window !== UNDEFINED && typeof document !== UNDEFINED;\n","import isPrimitive from './isPrimitive';\nimport isHTMLElement from './isHTMLElement';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T extends unknown>(data: T): T {\n  let copy: any;\n\n  if (\n    isPrimitive(data) ||\n    (isWeb && (data instanceof File || isHTMLElement(data)))\n  ) {\n    return data;\n  }\n\n  if (\n    !['Set', 'Map', 'Object', 'Date', 'Array'].includes(\n      (data as Object).constructor?.name,\n    )\n  ) {\n    return data;\n  }\n\n  if (data instanceof Date) {\n    copy = new Date(data.getTime());\n    return copy;\n  }\n\n  if (data instanceof Set) {\n    copy = new Set();\n    for (const item of data) {\n      copy.add(item);\n    }\n    return copy;\n  }\n\n  if (data instanceof Map) {\n    copy = new Map();\n    for (const key of data.keys()) {\n      copy.set(key, cloneObject(data.get(key)));\n    }\n    return copy;\n  }\n\n  copy = Array.isArray(data) ? [] : {};\n\n  for (const key in data) {\n    copy[key] = cloneObject(data[key]);\n  }\n\n  return copy;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport setFieldArrayDirtyFields from './logic/setFieldArrayDirtyFields';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport isErrorStateChanged from './logic/isErrorStateChanged';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getNodeParentName from './logic/getNodeParentName';\nimport deepEqual from './utils/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport onDomRemove from './utils/onDomRemove';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isString from './utils/isString';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport isKey from './utils/isKey';\nimport cloneObject from './utils/cloneObject';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport compact from './utils/compact';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isWeb from './utils/isWeb';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  RegisterOptions,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  SetValueConfig,\n  ErrorOption,\n  FormState,\n  SubmitErrorHandler,\n  FieldNamesMarkedBoolean,\n  LiteralToPrimitive,\n  DeepPartial,\n  InternalNameSet,\n  DefaultValues,\n  FieldError,\n  SetFieldValue,\n  FieldArrayDefaultValues,\n  ResetFieldArrayFunctionRef,\n  UseWatchRenderFunctions,\n  RecordInternalNameSet,\n} from './types';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as DefaultValues<TFieldValues>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const fieldArrayDefaultValuesRef = React.useRef<FieldArrayDefaultValues>({});\n  const fieldArrayValuesRef = React.useRef<FieldArrayDefaultValues>({});\n  const watchFieldsRef = React.useRef<InternalNameSet<TFieldValues>>(new Set());\n  const useWatchFieldsRef = React.useRef<RecordInternalNameSet<TFieldValues>>(\n    {},\n  );\n  const useWatchRenderFunctionsRef = React.useRef<UseWatchRenderFunctions>({});\n  const fieldsWithValidationRef = React.useRef<\n    FieldNamesMarkedBoolean<TFieldValues>\n  >({});\n  const validFieldsRef = React.useRef<FieldNamesMarkedBoolean<TFieldValues>>(\n    {},\n  );\n  const defaultValuesRef = React.useRef<DefaultValues<TFieldValues>>(\n    defaultValues,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const shallowFieldsStateRef = React.useRef({});\n  const resetFieldArrayFunctionRef = React.useRef<\n    ResetFieldArrayFunctionRef<TFieldValues>\n  >({});\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<InternalNameSet<TFieldValues>>(\n    new Set(),\n  );\n  const modeRef = React.useRef(modeChecker(mode));\n  const { isOnSubmit, isOnTouch } = modeRef.current;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const [formState, setFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touched: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: !isOnSubmit,\n    errors: {},\n  });\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isValidating: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const formStateRef = React.useRef(formState);\n  const observerRef = React.useRef<MutationObserver | undefined>();\n  const {\n    isOnBlur: isReValidateOnBlur,\n    isOnChange: isReValidateOnChange,\n  } = React.useRef(modeChecker(reValidateMode)).current;\n\n  contextRef.current = context;\n  resolverRef.current = resolver;\n  formStateRef.current = formState;\n  shallowFieldsStateRef.current = shouldUnregister\n    ? {}\n    : isEmptyObject(shallowFieldsStateRef.current)\n    ? cloneObject(defaultValues)\n    : shallowFieldsStateRef.current;\n\n  const updateFormState = React.useCallback(\n    (state: Partial<FormState<TFieldValues>> = {}) => {\n      if (!isUnMount.current) {\n        formStateRef.current = {\n          ...formStateRef.current,\n          ...state,\n        };\n        setFormState(formStateRef.current);\n      }\n    },\n    [],\n  );\n\n  const updateIsValidating = () =>\n    readFormStateRef.current.isValidating &&\n    updateFormState({\n      isValidating: true,\n    });\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FieldError | undefined,\n      shouldRender: boolean | null = false,\n      state: {\n        dirtyFields?: FieldNamesMarkedBoolean<TFieldValues>;\n        isDirty?: boolean;\n        touched?: FieldNamesMarkedBoolean<TFieldValues>;\n      } = {},\n      isValid?: boolean,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        isErrorStateChanged<TFieldValues>({\n          errors: formStateRef.current.errors,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(formStateRef.current.errors, name);\n\n      if (error) {\n        unset(validFieldsRef.current, name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !deepEqual(previousError, error, true);\n        set(formStateRef.current.errors, name, error);\n      } else {\n        if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n          set(validFieldsRef.current, name, true);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        unset(formStateRef.current.errors, name);\n      }\n\n      if (\n        (shouldReRender && !isNullOrUndefined(shouldRender)) ||\n        !isEmptyObject(state) ||\n        readFormStateRef.current.isValidating\n      ) {\n        updateFormState({\n          ...state,\n          ...(resolverRef.current ? { isValid: !!isValid } : {}),\n          isValidating: false,\n        });\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (name: FieldName<TFieldValues>, rawValue: SetFieldValue<TFieldValues>) => {\n      const { ref, options } = fieldsRef.current[name] as Field;\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref)) {\n        (options || []).forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string[]).includes(\n              selectRef.value,\n            )),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = Array.isArray(value)\n                  ? !!(value as []).find(\n                      (data: string) => data === checkboxRef.value,\n                    )\n                  : value === checkboxRef.value),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const isFormDirty = React.useCallback(\n    (name?: string, data?: unknown[]): boolean => {\n      if (readFormStateRef.current.isDirty) {\n        const formValues = getValues();\n\n        name && data && set(formValues, name, data);\n\n        return !deepEqual(formValues, defaultValuesRef.current);\n      }\n\n      return false;\n    },\n    [],\n  );\n\n  const updateAndGetDirtyState = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      shouldRender = true,\n    ): Partial<\n      Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touched'>\n    > => {\n      if (\n        readFormStateRef.current.isDirty ||\n        readFormStateRef.current.dirtyFields\n      ) {\n        const isFieldDirty = !deepEqual(\n          get(defaultValuesRef.current, name),\n          getFieldValue(fieldsRef, name, shallowFieldsStateRef),\n        );\n        const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\n        const previousIsDirty = formStateRef.current.isDirty;\n\n        isFieldDirty\n          ? set(formStateRef.current.dirtyFields, name, true)\n          : unset(formStateRef.current.dirtyFields, name);\n\n        const state = {\n          isDirty: isFormDirty(),\n          dirtyFields: formStateRef.current.dirtyFields,\n        };\n\n        const isChanged =\n          (readFormStateRef.current.isDirty &&\n            previousIsDirty !== state.isDirty) ||\n          (readFormStateRef.current.dirtyFields &&\n            isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\n\n        isChanged && shouldRender && updateFormState(state);\n\n        return isChanged ? state : {};\n      }\n\n      return {};\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean | null,\n    ): Promise<boolean> => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!fieldsRef.current[name]) {\n          console.warn('📋 Field is missing with `name` attribute: ', name);\n          return false;\n        }\n      }\n\n      const error = (\n        await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          shallowFieldsStateRef,\n        )\n      )[name];\n\n      shouldRenderBaseOnError(name, error, skipReRender);\n\n      return isUndefined(error);\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      names:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues(),\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = formStateRef.current.isValid;\n\n      if (Array.isArray(names)) {\n        const isInputsValid = names\n          .map((name) => {\n            const error = get(errors, name);\n\n            error\n              ? set(formStateRef.current.errors, name, error)\n              : unset(formStateRef.current.errors, name);\n\n            return !error;\n          })\n          .every(Boolean);\n\n        updateFormState({\n          isValid: isEmptyObject(errors),\n          isValidating: false,\n        });\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, names);\n\n        shouldRenderBaseOnError(\n          names,\n          error,\n          previousFormIsValid !== isEmptyObject(errors),\n          {},\n          isEmptyObject(errors),\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      updateIsValidating();\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (Array.isArray(fields)) {\n        !name && (formStateRef.current.errors = {});\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, null)),\n        );\n        updateFormState({\n          isValidating: false,\n        });\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: FieldName<TFieldValues>,\n      value: SetFieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      const data = {};\n      set(data, name, value);\n\n      for (const fieldName of getPath(name, value)) {\n        if (fieldsRef.current[fieldName]) {\n          setFieldValue(fieldName, get(data, fieldName));\n          shouldDirty && updateAndGetDirtyState(fieldName);\n          shouldValidate && trigger(fieldName as FieldName<TFieldValues>);\n        }\n      }\n    },\n    [trigger, setFieldValue, updateAndGetDirtyState],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: FieldName<TFieldValues>,\n      value: SetFieldValue<TFieldValues>,\n      config: SetValueConfig,\n    ) => {\n      !shouldUnregister &&\n        !isPrimitive(value) &&\n        set(\n          shallowFieldsStateRef.current,\n          name,\n          Array.isArray(value) ? [...value] : { ...value },\n        );\n\n      if (fieldsRef.current[name]) {\n        setFieldValue(name, value);\n        config.shouldDirty && updateAndGetDirtyState(name);\n        config.shouldValidate && trigger(name as any);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n\n        if (fieldArrayNamesRef.current.has(name)) {\n          const parentName = getNodeParentName(name) || name;\n          set(fieldArrayDefaultValuesRef.current, name, value);\n\n          resetFieldArrayFunctionRef.current[parentName]({\n            [parentName]: get(fieldArrayDefaultValuesRef.current, parentName),\n          } as UnpackNestedValue<DeepPartial<TFieldValues>>);\n\n          if (\n            (readFormStateRef.current.isDirty ||\n              readFormStateRef.current.dirtyFields) &&\n            config.shouldDirty\n          ) {\n            set(\n              formStateRef.current.dirtyFields,\n              name,\n              setFieldArrayDirtyFields(\n                value,\n                get(defaultValuesRef.current, name, []),\n                get(formStateRef.current.dirtyFields, name, []),\n              ),\n            );\n\n            updateFormState({\n              isDirty: !deepEqual(\n                { ...getValues(), [name]: value },\n                defaultValuesRef.current,\n              ),\n            });\n          }\n        }\n      }\n\n      !shouldUnregister && set(shallowFieldsStateRef.current, name, value);\n    },\n    [updateAndGetDirtyState, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = <T extends FieldName<TFieldValues>>(name: T) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = <T extends FieldName<FieldValues>>(\n    name: T,\n  ): boolean => {\n    let found = true;\n\n    if (!isEmptyObject(useWatchFieldsRef.current)) {\n      for (const key in useWatchFieldsRef.current) {\n        if (\n          !name ||\n          !useWatchFieldsRef.current[key].size ||\n          useWatchFieldsRef.current[key].has(name) ||\n          useWatchFieldsRef.current[key].has(getNodeParentName(name))\n        ) {\n          useWatchRenderFunctionsRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue(\n    name: FieldName<TFieldValues>,\n    value: SetFieldValue<TFieldValues>,\n    config?: SetValueConfig,\n  ): void {\n    setInternalValue(name, value, config || {});\n    isFieldWatched(name) && updateFormState();\n    renderWatchedInputs(name);\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        let name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error;\n        let isValid;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation = skipValidation({\n            isBlurEvent,\n            isReValidateOnChange,\n            isReValidateOnBlur,\n            isTouched: !!get(formStateRef.current.touched, name),\n            isSubmitted: formStateRef.current.isSubmitted,\n            ...modeRef.current,\n          });\n          let state = updateAndGetDirtyState(name, false);\n          let shouldRender =\n            !isEmptyObject(state) ||\n            (!isBlurEvent && isFieldWatched(name as FieldName<TFieldValues>));\n\n          if (\n            isBlurEvent &&\n            !get(formStateRef.current.touched, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(formStateRef.current.touched, name, true);\n            state = {\n              ...state,\n              touched: formStateRef.current.touched,\n            };\n          }\n\n          if (!shouldUnregister && isCheckBoxInput(target as Ref)) {\n            set(\n              shallowFieldsStateRef.current,\n              name,\n              getFieldValue(fieldsRef, name),\n            );\n          }\n\n          if (shouldSkipValidation) {\n            !isBlurEvent && renderWatchedInputs(name);\n            return (\n              (!isEmptyObject(state) ||\n                (shouldRender && isEmptyObject(state))) &&\n              updateFormState(state)\n            );\n          }\n\n          updateIsValidating();\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues(),\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = formStateRef.current.isValid;\n            error = get(errors, name);\n\n            if (\n              isCheckBoxInput(target as Ref) &&\n              !error &&\n              resolverRef.current\n            ) {\n              const parentNodeName = getNodeParentName(name);\n              const currentError = get(errors, parentNodeName, {});\n              currentError.type &&\n                currentError.message &&\n                (error = currentError);\n\n              if (\n                parentNodeName &&\n                (currentError ||\n                  get(formStateRef.current.errors, parentNodeName))\n              ) {\n                name = parentNodeName;\n              }\n            }\n\n            isValid = isEmptyObject(errors);\n\n            previousFormIsValid !== isValid && (shouldRender = true);\n          } else {\n            error = (\n              await validateField<TFieldValues>(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                shallowFieldsStateRef,\n              )\n            )[name];\n          }\n\n          !isBlurEvent && renderWatchedInputs(name);\n          shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n        }\n      };\n\n  function setFieldArrayDefaultValues<T extends FieldValues>(data: T): T {\n    if (!shouldUnregister) {\n      let copy = cloneObject(data);\n\n      for (const value of fieldArrayNamesRef.current) {\n        if (isKey(value) && !copy[value]) {\n          copy = {\n            ...copy,\n            [value]: [],\n          };\n        }\n      }\n\n      return copy;\n    }\n    return data;\n  }\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, shallowFieldsStateRef);\n    }\n\n    if (Array.isArray(payload)) {\n      const data = {};\n\n      for (const name of payload) {\n        set(data, name, getFieldValue(fieldsRef, name, shallowFieldsStateRef));\n      }\n\n      return data;\n    }\n\n    return setFieldArrayDefaultValues(\n      getFieldsValues(\n        fieldsRef,\n        cloneObject(shallowFieldsStateRef.current),\n        shouldUnregister,\n      ),\n    );\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const newDefaultValues = isEmptyObject(fieldsRef.current)\n        ? defaultValuesRef.current\n        : {};\n\n      const { errors } =\n        (await resolverRef.current!(\n          {\n            ...newDefaultValues,\n            ...getValues(),\n            ...values,\n          },\n          contextRef.current,\n          isValidateAllFieldCriteria,\n        )) || {};\n      const isValid = isEmptyObject(errors);\n\n      formStateRef.current.isValid !== isValid &&\n        updateFormState({\n          isValid,\n        });\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) => {\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        shallowFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      );\n\n      if (shouldUnregister) {\n        unset(validFieldsRef.current, field.ref.name);\n        unset(fieldsWithValidationRef.current, field.ref.name);\n      }\n    },\n    [shouldUnregister],\n  );\n\n  const updateWatchedValue = React.useCallback((name: string) => {\n    if (isWatchAllRef.current) {\n      updateFormState();\n    } else {\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          updateFormState();\n          break;\n        }\n      }\n\n      renderWatchedInputs(name);\n    }\n  }, []);\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field?: Field, forceDelete?: boolean) => {\n      if (field) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister && !compact(field.options || []).length) {\n          unset(formStateRef.current.errors, field.ref.name);\n          set(formStateRef.current.dirtyFields, field.ref.name, true);\n\n          updateFormState({\n            isDirty: isFormDirty(),\n          });\n\n          readFormStateRef.current.isValid &&\n            resolverRef.current &&\n            validateResolver();\n          updateWatchedValue(field.ref.name);\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    name &&\n      (Array.isArray(name) ? name : [name]).forEach((inputName) =>\n        fieldsRef.current[inputName] && isKey(inputName)\n          ? delete formStateRef.current.errors[inputName]\n          : unset(formStateRef.current.errors, inputName),\n      );\n\n    updateFormState({\n      errors: name ? formStateRef.current.errors : {},\n    });\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption) {\n    const ref = (fieldsRef.current[name] || {})!.ref;\n\n    set(formStateRef.current.errors, name, {\n      ...error,\n      ref,\n    });\n\n    updateFormState({\n      isValid: false,\n    });\n\n    error.shouldFocus && ref && ref.focus && ref.focus();\n  }\n\n  const watchInternal = React.useCallback(\n    <T>(fieldNames?: string | string[], defaultValue?: T, watchId?: string) => {\n      const watchFields = watchId\n        ? useWatchFieldsRef.current[watchId]\n        : watchFieldsRef.current;\n      let fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        cloneObject(shallowFieldsStateRef.current),\n        shouldUnregister,\n        false,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        const parentNodeName = getNodeParentName(fieldNames) || fieldNames;\n\n        if (fieldArrayNamesRef.current.has(parentNodeName)) {\n          fieldValues = {\n            ...fieldArrayValuesRef.current,\n            ...fieldValues,\n          };\n        }\n\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(get(defaultValuesRef.current, fieldNames))\n            ? defaultValue\n            : get(defaultValuesRef.current, fieldNames),\n          true,\n        );\n      }\n\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n\n      if (Array.isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      isWatchAllRef.current = isUndefined(watchId);\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name?: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[] | undefined,\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    for (const fieldName of Array.isArray(name) ? name : [name]) {\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true);\n    }\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    options: RegisterOptions | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn(\n          '📋 Field is missing `name` attribute',\n          ref,\n          `https://react-hook-form.com/api#useForm`,\n        );\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+].\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\"',\n          ref,\n          'https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...options,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    const compareRef = (currentRef: Ref) =>\n      isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? Array.isArray(field.options) &&\n          compact(field.options).find((option) => {\n            return value === option.ref.value && compareRef(option.ref);\n          })\n        : compareRef(field.ref))\n    ) {\n      fields[name] = {\n        ...field,\n        ...options,\n      };\n      return;\n    }\n\n    if (type) {\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...compact((field && field.options) || []),\n              {\n                ref,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...options,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(shallowFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : shallowFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(name as FieldName<TFieldValues>, defaultValue);\n      }\n    }\n\n    if (!isEmptyObject(options)) {\n      set(fieldsWithValidationRef.current, name, true);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          shallowFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = formStateRef.current.isValid;\n\n          isEmptyObject(error)\n            ? set(validFieldsRef.current, name, true)\n            : unset(validFieldsRef.current, name);\n\n          previousFormIsValid !== isEmptyObject(error) && updateFormState();\n        });\n      }\n    }\n\n    if (shouldUnregister && !(isFieldArray && isEmptyDefaultValue)) {\n      !isFieldArray && unset(formStateRef.current.dirtyFields, name);\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    options?: RegisterOptions,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    options?: RegisterOptions,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    options?: RegisterOptions,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrRegisterOptions?:\n      | FieldName<TFieldValues>\n      | RegisterOptions\n      | (TFieldElement & Ref)\n      | null,\n    options?: RegisterOptions,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrRegisterOptions)) {\n        registerFieldRef({ name: refOrRegisterOptions }, options);\n      } else if (\n        isObject(refOrRegisterOptions) &&\n        'name' in refOrRegisterOptions\n      ) {\n        registerFieldRef(refOrRegisterOptions, options);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrRegisterOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      onValid: SubmitHandler<TSubmitFieldValues>,\n      onInvalid?: SubmitErrorHandler<TFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues = setFieldArrayDefaultValues(\n        getFieldsValues(\n          fieldsRef,\n          cloneObject(shallowFieldsStateRef.current),\n          shouldUnregister,\n          true,\n        ),\n      );\n\n      readFormStateRef.current.isSubmitting &&\n        updateFormState({\n          isSubmitting: true,\n        });\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          formStateRef.current.errors = fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const { name } = field.ref;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                shallowFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                unset(validFieldsRef.current, name);\n              } else if (get(fieldsWithValidationRef.current, name)) {\n                unset(formStateRef.current.errors, name);\n                set(validFieldsRef.current, name, true);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(formStateRef.current.errors).every(\n            (name) => name in fieldsRef.current,\n          )\n        ) {\n          updateFormState({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          formStateRef.current.errors = {\n            ...formStateRef.current.errors,\n            ...fieldErrors,\n          };\n          onInvalid && (await onInvalid(formStateRef.current.errors, e));\n          shouldFocusError &&\n            focusOnErrorField(fieldsRef.current, formStateRef.current.errors);\n        }\n      } finally {\n        formStateRef.current.isSubmitting = false;\n        updateFormState({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\n          submitCount: formStateRef.current.submitCount + 1,\n        });\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!isValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n\n    fieldArrayDefaultValuesRef.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n\n    updateFormState({\n      submitCount: submitCount ? formStateRef.current.submitCount : 0,\n      isDirty: isDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: isSubmitted ? formStateRef.current.isSubmitted : false,\n      isValid: isValid ? formStateRef.current.isValid : false,\n      dirtyFields: dirtyFields ? formStateRef.current.dirtyFields : {},\n      touched: touched ? formStateRef.current.touched : {},\n      errors: errors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset = (\n    values?: DefaultValues<TFieldValues>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && Array.isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n    defaultValuesRef.current = { ...(values || defaultValuesRef.current) };\n    values && renderWatchedInputs('');\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    shallowFieldsStateRef.current = shouldUnregister\n      ? {}\n      : cloneObject(values || defaultValuesRef.current);\n\n    resetRefs(omitResetState);\n  };\n\n  React.useEffect(() => {\n    resolver && readFormStateRef.current.isValid && validateResolver();\n    observerRef.current =\n      observerRef.current || !isWeb\n        ? observerRef.current\n        : onDomRemove(fieldsRef, removeFieldEventListenerAndRef);\n  }, [removeFieldEventListenerAndRef, defaultValuesRef.current]);\n\n  React.useEffect(\n    () => () => {\n      observerRef.current && observerRef.current.disconnect();\n      isUnMount.current = true;\n\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n\n      Object.values(fieldsRef.current).forEach((field) =>\n        removeFieldEventListenerAndRef(field, true),\n      );\n    },\n    [],\n  );\n\n  if (!resolver && readFormStateRef.current.isValid) {\n    formState.isValid =\n      deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\n      isEmptyObject(formStateRef.current.errors);\n  }\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [setInternalValue, trigger]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (process.env.NODE_ENV !== 'production') {\n              if (prop === 'isValid' && isOnSubmit) {\n                console.warn(\n                  '📋 `formState.isValid` is applicable with `onTouched`, `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n                );\n              }\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = React.useMemo(\n    () => ({\n      isFormDirty,\n      updateWatchedValue,\n      shouldUnregister,\n      updateFormState,\n      removeFieldEventListener,\n      watchInternal,\n      mode: modeRef.current,\n      reValidateMode: {\n        isReValidateOnBlur,\n        isReValidateOnChange,\n      },\n      validateResolver: resolver ? validateResolver : undefined,\n      fieldsRef,\n      resetFieldArrayFunctionRef,\n      useWatchFieldsRef,\n      useWatchRenderFunctionsRef,\n      fieldArrayDefaultValuesRef,\n      validFieldsRef,\n      fieldsWithValidationRef,\n      fieldArrayNamesRef,\n      readFormStateRef,\n      formStateRef,\n      defaultValuesRef,\n      shallowFieldsStateRef,\n      fieldArrayValuesRef,\n      ...commonProps,\n    }),\n    [\n      defaultValuesRef.current,\n      updateWatchedValue,\n      shouldUnregister,\n      removeFieldEventListener,\n      watchInternal,\n    ],\n  );\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: formState.errors,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues, FormProviderProps } from './types';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import { UNDEFINED } from '../constants';\n\nexport default () => {\n  const d =\n    typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import isUndefined from './isUndefined';\nimport compact from './compact';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n        data,\n        (Array.isArray(index) ? index : [index]).sort((a, b) => a - b),\n      );\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\n","export default function prepend<T>(data: T[]): (T | undefined)[];\nexport default function prepend<T>(data: T[], value: T | T[]): T[];\nexport default function prepend<T>(\n  data: T[],\n  value?: T | T[],\n): (T | undefined)[] {\n  return [...(Array.isArray(value) ? value : [value || undefined]), ...data];\n}\n","export default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...(Array.isArray(value) ? value : [value || undefined]),\n    ...data.slice(index),\n  ];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import isObject from './isObject';\n\nexport default <T>(value: T) =>\n  ((Array.isArray(value) ? value : [value]) as T[]).map((data) => {\n    if (isObject(data)) {\n      const object: Record<string, boolean> = {};\n\n      for (const key in data) {\n        object[key] = true;\n      }\n\n      return object;\n    }\n\n    return true;\n  });\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport setFieldArrayDirtyFields from './logic/setFieldArrayDirtyFields';\nimport { isMatchFieldArrayName } from './logic/isNameInFieldArray';\nimport generateId from './logic/generateId';\nimport getFieldArrayParentName from './logic/getNodeParentName';\nimport get from './utils/get';\nimport set from './utils/set';\nimport removeArrayAt from './utils/remove';\nimport unset from './utils/unset';\nimport moveArrayAt from './utils/move';\nimport swapArrayAt from './utils/swap';\nimport prependAt from './utils/prepend';\nimport insertAt from './utils/insert';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport fillBooleanArray from './utils/fillBooleanArray';\nimport compact from './utils/compact';\nimport cloneObject from './utils/cloneObject';\nimport {\n  Field,\n  FieldValues,\n  UseFieldArrayOptions,\n  Control,\n  ArrayField,\n  UnpackNestedValue,\n  DeepPartial,\n  UseFieldArrayMethods,\n} from './types';\n\nconst mapIds = <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id'\n>(\n  values: Partial<TFieldArrayValues>[] = [],\n  keyName: TKeyName,\n  skipWarn?: boolean,\n): Partial<ArrayField<TFieldArrayValues, TKeyName>>[] => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!skipWarn) {\n      for (const value of values) {\n        if (typeof value === 'object') {\n          if (keyName in value) {\n            console.warn(\n              `📋 useFieldArray fieldValues contain the keyName \\`${keyName}\\` which is reserved for use by useFieldArray. https://react-hook-form.com/api#useFieldArray`,\n            );\n\n            break;\n          }\n        } else {\n          console.warn(\n            `📋 useFieldArray input's name should be in object shape instead of flat array. https://react-hook-form.com/api#useFieldArray`,\n          );\n\n          break;\n        }\n      }\n    }\n  }\n\n  return values.map((value: Partial<TFieldArrayValues>) => ({\n    [keyName]: value[keyName] || generateId(),\n    ...value,\n  }));\n};\n\nexport const useFieldArray = <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id',\n  TControl extends Control = Control\n>({\n  control,\n  name,\n  keyName = 'id' as TKeyName,\n}: UseFieldArrayOptions<TKeyName, TControl>): UseFieldArrayMethods<\n  TFieldArrayValues,\n  TKeyName\n> => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error(\n        '📋 useFieldArray is missing `control` prop. https://react-hook-form.com/api#useFieldArray',\n      );\n    }\n  }\n\n  const focusIndexRef = React.useRef(-1);\n  const isUnMount = React.useRef(false);\n  const {\n    isFormDirty,\n    updateWatchedValue,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    formStateRef,\n    shallowFieldsStateRef,\n    updateFormState,\n    readFormStateRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValuesRef,\n    validateResolver,\n    getValues,\n    shouldUnregister,\n    fieldArrayValuesRef,\n  } = control || methods.control;\n\n  const getDefaultValues = <T>(values: T) =>\n    get(shouldUnregister ? values : shallowFieldsStateRef.current, name, []);\n\n  const fieldArrayParentName = getFieldArrayParentName(name);\n  const memoizedDefaultValues = React.useRef<Partial<TFieldArrayValues>[]>([\n    ...(get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)\n      ? getDefaultValues(fieldArrayDefaultValuesRef.current)\n      : getDefaultValues(defaultValuesRef.current)),\n  ]);\n  const [fields, setFields] = React.useState<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(mapIds(memoizedDefaultValues.current, keyName));\n  set(fieldArrayValuesRef.current, name, compact(fields));\n\n  const omitKey = <T extends (Partial<TFieldArrayValues> | undefined)[]>(\n    fields: T,\n  ) => fields.map(({ [keyName]: omitted, ...rest } = {}) => rest);\n\n  fieldArrayNamesRef.current.add(name);\n\n  const getFieldArrayValue = React.useCallback(\n    () => get(fieldArrayValuesRef.current, name, []),\n    [name],\n  );\n\n  const getCurrentFieldsValues = () =>\n    mapIds<TFieldArrayValues, TKeyName>(\n      get(getValues(), name, getFieldArrayValue()).map(\n        (item: Partial<TFieldArrayValues>, index: number) => ({\n          ...getFieldArrayValue()[index],\n          ...item,\n        }),\n      ),\n      keyName,\n      true,\n    );\n\n  fieldArrayNamesRef.current.add(name);\n\n  if (\n    fieldArrayParentName &&\n    !get(fieldArrayDefaultValuesRef.current, fieldArrayParentName)\n  ) {\n    set(\n      fieldArrayDefaultValuesRef.current,\n      fieldArrayParentName,\n      cloneObject(get(defaultValuesRef.current, fieldArrayParentName)),\n    );\n  }\n\n  const setFieldAndValidState = (\n    fieldsValues: Partial<ArrayField<TFieldArrayValues, TKeyName>>[],\n  ) => {\n    setFields(fieldsValues);\n    set(fieldArrayValuesRef.current, name, fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateResolver) {\n      const values = getValues();\n      set(values, name, fieldsValues);\n      validateResolver(values);\n    }\n  };\n\n  const resetFields = () => {\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name)) {\n        removeFieldEventListener(fieldsRef.current[key] as Field, true);\n        delete fieldsRef.current[key];\n      }\n    }\n  };\n\n  const cleanup = <T>(ref: T) =>\n    !compact(get(ref, name, [])).length && unset(ref, name);\n\n  const updateDirtyFieldsWithDefaultValues = <\n    T extends (Partial<TFieldArrayValues> | undefined)[]\n  >(\n    updatedFieldArrayValues?: T,\n  ) => {\n    if (updatedFieldArrayValues) {\n      set(\n        formStateRef.current.dirtyFields,\n        name,\n        setFieldArrayDirtyFields(\n          omitKey(updatedFieldArrayValues),\n          get(defaultValuesRef.current, name, []),\n          get(formStateRef.current.dirtyFields, name, []),\n        ),\n      );\n    }\n  };\n\n  const batchStateUpdate = <\n    T extends Function,\n    K extends (Partial<TFieldArrayValues> | undefined)[]\n  >(\n    method: T,\n    args: {\n      argA?: unknown;\n      argB?: unknown;\n      argC?: unknown;\n      argD?: unknown;\n    },\n    updatedFieldValues?: K,\n    updatedFormValues: (Partial<TFieldArrayValues> | undefined)[] = [],\n    shouldSet = true,\n    shouldUpdateValid = false,\n  ) => {\n    if (get(shallowFieldsStateRef.current, name)) {\n      const output = method(\n        get(shallowFieldsStateRef.current, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSet && set(shallowFieldsStateRef.current, name, output);\n    }\n\n    if (get(fieldArrayDefaultValuesRef.current, name)) {\n      const output = method(\n        get(fieldArrayDefaultValuesRef.current, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSet && set(fieldArrayDefaultValuesRef.current, name, output);\n    }\n\n    if (Array.isArray(get(formStateRef.current.errors, name))) {\n      const output = method(\n        get(formStateRef.current.errors, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSet && set(formStateRef.current.errors, name, output);\n      cleanup(formStateRef.current.errors);\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(formStateRef.current.touched, name)\n    ) {\n      const output = method(\n        get(formStateRef.current.touched, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSet && set(formStateRef.current.touched, name, output);\n      cleanup(formStateRef.current.touched);\n    }\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(\n        formStateRef.current.dirtyFields,\n        name,\n        setFieldArrayDirtyFields(\n          omitKey(updatedFormValues),\n          get(defaultValuesRef.current, name, []),\n          get(formStateRef.current.dirtyFields, name, []),\n        ),\n      );\n      updateDirtyFieldsWithDefaultValues(updatedFieldValues);\n      cleanup(formStateRef.current.dirtyFields);\n    }\n\n    if (\n      shouldUpdateValid &&\n      readFormStateRef.current.isValid &&\n      !validateResolver\n    ) {\n      set(\n        validFieldsRef.current,\n        name,\n        method(get(validFieldsRef.current, name, []), args.argA),\n      );\n      cleanup(validFieldsRef.current);\n\n      set(\n        fieldsWithValidationRef.current,\n        name,\n        method(get(fieldsWithValidationRef.current, name, []), args.argA),\n      );\n      cleanup(fieldsWithValidationRef.current);\n    }\n\n    if (!isUnMount.current && readFormStateRef.current.isDirty) {\n      updateFormState({\n        isDirty: isFormDirty(name, omitKey(updatedFormValues)),\n      });\n    }\n  };\n\n  const append = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const appendValue = Array.isArray(value) ? value : [value];\n    const updateFormValues = [\n      ...getCurrentFieldsValues(),\n      ...mapIds(appendValue, keyName),\n    ];\n    setFieldAndValidState(updateFormValues);\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      updateDirtyFieldsWithDefaultValues(updateFormValues);\n\n      updateFormState({\n        isDirty: true,\n        dirtyFields: formStateRef.current.dirtyFields,\n      });\n    }\n\n    !shouldUnregister &&\n      set(shallowFieldsStateRef.current, name, [\n        ...(get(shallowFieldsStateRef.current, name) || []),\n        ...cloneObject(appendValue),\n      ]);\n\n    focusIndexRef.current = shouldFocus\n      ? get(fieldArrayValuesRef.current, name).length - 1\n      : -1;\n  };\n\n  const prepend = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n    const updatedFieldArrayValues = prependAt(\n      getCurrentFieldsValues(),\n      mapIds(Array.isArray(value) ? value : [value], keyName),\n    );\n\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(\n      prependAt,\n      {\n        argA: emptyArray,\n        argC: fillBooleanArray(value),\n      },\n      updatedFieldArrayValues,\n    );\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n\n  const remove = (index?: number | number[]) => {\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldValues: (\n      | Partial<TFieldArrayValues>\n      | undefined\n    )[] = removeArrayAt(fieldValues, index);\n    setFieldAndValidState(\n      updatedFieldValues as Partial<ArrayField<TFieldArrayValues, TKeyName>>[],\n    );\n    resetFields();\n    batchStateUpdate(\n      removeArrayAt,\n      {\n        argA: index,\n        argC: index,\n      },\n      updatedFieldValues,\n      removeArrayAt(fieldValues, index),\n      true,\n      true,\n    );\n  };\n\n  const insert = (\n    index: number,\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldArrayValues = insertAt(\n      fieldValues,\n      index,\n      mapIds(Array.isArray(value) ? value : [value], keyName),\n    );\n\n    setFieldAndValidState(updatedFieldArrayValues);\n    resetFields();\n    batchStateUpdate(\n      insertAt,\n      {\n        argA: index,\n        argB: emptyArray,\n        argC: index,\n        argD: fillBooleanArray(value),\n      },\n      updatedFieldArrayValues,\n      insertAt(fieldValues, index),\n    );\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n    batchStateUpdate(\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n        argC: indexA,\n        argD: indexB,\n      },\n      undefined,\n      fieldValues,\n      false,\n    );\n  };\n\n  const move = (from: number, to: number) => {\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields();\n    setFieldAndValidState([...fieldValues]);\n    batchStateUpdate(\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n        argC: from,\n        argD: to,\n      },\n      undefined,\n      fieldValues,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        console.warn(\n          '📋 useFieldArray is missing `name` attribute. https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const defaultValues = get(fieldArrayDefaultValuesRef.current, name);\n\n    if (defaultValues && fields.length < defaultValues.length) {\n      set(fieldArrayDefaultValuesRef.current, name, defaultValues.slice(1));\n    }\n\n    updateWatchedValue(name);\n\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (\n          key.startsWith(`${name}[${focusIndexRef.current}]`) &&\n          field!.ref.focus\n        ) {\n          field!.ref.focus();\n          break;\n        }\n      }\n    }\n\n    focusIndexRef.current = -1;\n  }, [fields, name]);\n\n  React.useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    const fieldArrayNames = fieldArrayNamesRef.current;\n\n    if (!getFieldArrayParentName(name)) {\n      resetFunctions[name] = <TFieldValues>(\n        data?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n      ) => {\n        resetFields();\n        !data && unset(fieldArrayDefaultValuesRef.current, name);\n        unset(shallowFieldsStateRef.current, name);\n        memoizedDefaultValues.current = get(\n          data || defaultValuesRef.current,\n          name,\n        );\n        if (!isUnMount.current) {\n          setFields(mapIds(memoizedDefaultValues.current, keyName));\n        }\n      };\n    }\n\n    return () => {\n      isUnMount.current = true;\n      shouldUnregister && remove();\n      resetFields();\n      delete resetFunctions[name];\n      unset(fieldArrayValuesRef.current, name);\n      fieldArrayNames.delete(name);\n    };\n  }, []);\n\n  return {\n    swap: React.useCallback(swap, [name]),\n    move: React.useCallback(move, [name]),\n    prepend: React.useCallback(prepend, [name]),\n    append: React.useCallback(append, [name]),\n    remove: React.useCallback(remove, [name]),\n    insert: React.useCallback(insert, [name]),\n    fields: compact(fields),\n  };\n};\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import { useFormContext } from './useFormContext';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport * as React from 'react';\nimport isFunction from './utils/isFunction';\nimport skipValidation from './logic/skipValidation';\nimport getInputValue from './logic/getInputValue';\nimport set from './utils/set';\nimport {\n  FieldValues,\n  UseControllerOptions,\n  UseControllerMethods,\n} from './types';\n\nexport function useController<TFieldValues extends FieldValues = FieldValues>({\n  name,\n  rules,\n  defaultValue,\n  control,\n  onFocus,\n}: UseControllerOptions<TFieldValues>): UseControllerMethods<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error(\n        '📋 Controller is missing `control` prop. https://react-hook-form.com/api#Controller',\n      );\n    }\n  }\n\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    formState,\n    formStateRef: {\n      current: { isSubmitted, touched, errors },\n    },\n    updateFormState,\n    readFormStateRef,\n    fieldsRef,\n    fieldArrayNamesRef,\n    shallowFieldsStateRef,\n  } = control || methods.control;\n\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(shallowFieldsStateRef.current, name)) && isNotFieldArray\n      ? get(shallowFieldsStateRef.current, name)\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const ref = React.useRef({\n    focus: () => null,\n  });\n  const onFocusRef = React.useRef(\n    onFocus ||\n      (() => {\n        if (isFunction(ref.current.focus)) {\n          ref.current.focus();\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!isFunction(ref.current.focus)) {\n            console.warn(\n              `📋 'ref' from Controller render prop must be attached to a React component or a DOM Element whose ref provides a 'focus()' method`,\n            );\n          }\n        }\n      }),\n  );\n\n  const shouldValidate = React.useCallback(\n    (isBlurEvent?: boolean) =>\n      !skipValidation({\n        isBlurEvent,\n        isReValidateOnBlur,\n        isReValidateOnChange,\n        isSubmitted,\n        isTouched: !!get(touched, name),\n        ...mode,\n      }),\n    [\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted,\n      touched,\n      name,\n      mode,\n    ],\n  );\n\n  const commonTask = React.useCallback(([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  }, []);\n\n  const registerField = React.useCallback(\n    (shouldUpdateValue?: boolean) => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!name) {\n          return console.warn(\n            '📋 Field is missing `name` prop. https://react-hook-form.com/api#Controller',\n          );\n        }\n      }\n\n      if (fieldsRef.current[name]) {\n        fieldsRef.current[name] = {\n          ref: fieldsRef.current[name]!.ref,\n          ...rules,\n        };\n      } else {\n        register(\n          Object.defineProperties(\n            {\n              name,\n              focus: onFocusRef.current,\n            },\n            {\n              value: {\n                set(data) {\n                  setInputStateValue(data);\n                  valueRef.current = data;\n                },\n                get() {\n                  return valueRef.current;\n                },\n              },\n            },\n          ),\n          rules,\n        );\n\n        shouldUpdateValue = isUndefined(get(defaultValuesRef.current, name));\n      }\n\n      shouldUpdateValue &&\n        isNotFieldArray &&\n        setInputStateValue(getInitialValue());\n    },\n    [rules, name, register],\n  );\n\n  React.useEffect(() => () => unregister(name), [name]);\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isUndefined(value)) {\n        console.warn(\n          `📋 ${name} is missing in the 'defaultValue' prop of either its Controller (https://react-hook-form.com/api#Controller) or useForm (https://react-hook-form.com/api#useForm)`,\n        );\n      }\n\n      if (!isNotFieldArray && isUndefined(defaultValue)) {\n        console.warn(\n          '📋 Controller is missing `defaultValue` prop when using `useFieldArray`. https://react-hook-form.com/api#Controller',\n        );\n      }\n    }\n\n    registerField();\n  }, [registerField]);\n\n  React.useEffect(() => {\n    !fieldsRef.current[name] && registerField(true);\n  });\n\n  const onBlur = React.useCallback(() => {\n    if (readFormStateRef.current.touched && !get(touched, name)) {\n      set(touched, name, true);\n      updateFormState({\n        touched,\n      });\n    }\n\n    shouldValidate(true) && trigger(name);\n  }, [name, updateFormState, shouldValidate, trigger, readFormStateRef]);\n\n  const onChange = React.useCallback(\n    (...event: any[]) =>\n      setValue(name, commonTask(event), {\n        shouldValidate: shouldValidate(),\n        shouldDirty: true,\n      }),\n    [setValue, name, shouldValidate],\n  );\n\n  return {\n    field: {\n      onChange,\n      onBlur,\n      name,\n      value,\n      ref,\n    },\n    meta: Object.defineProperties(\n      {\n        invalid: !!get(errors, name),\n      },\n      {\n        isDirty: {\n          get() {\n            return !!get(formState.dirtyFields, name);\n          },\n        },\n        isTouched: {\n          get() {\n            return !!get(formState.touched, name);\n          },\n        },\n      },\n    ),\n  };\n}\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport isUndefined from './utils/isUndefined';\nimport isString from './utils/isString';\nimport generateId from './logic/generateId';\nimport get from './utils/get';\nimport {\n  DeepPartial,\n  UseWatchOptions,\n  FieldValues,\n  UnpackNestedValue,\n  Control,\n} from './types';\n\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  control?: Control;\n}): undefined | UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  defaultValue: UnpackNestedValue<TWatchFieldValue>;\n  control?: Control;\n}): UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  name: string[];\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValues>({\n  control,\n  name,\n  defaultValue,\n}: UseWatchOptions): TWatchFieldValues {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error(\n        '📋 useWatch is missing `control` prop. https://react-hook-form.com/api#useWatch',\n      );\n    }\n  }\n\n  const {\n    useWatchFieldsRef,\n    useWatchRenderFunctionsRef,\n    watchInternal,\n    defaultValuesRef,\n  } = control || methods.control;\n  const updateValue = React.useState<unknown>()[1];\n  const idRef = React.useRef<string>();\n  const defaultValueRef = React.useRef(defaultValue);\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (name === '') {\n        console.warn(\n          '📋 useWatch is missing `name` attribute. https://react-hook-form.com/api#useWatch',\n        );\n      }\n    }\n\n    const id = (idRef.current = generateId());\n    const watchFieldsHookRender = useWatchRenderFunctionsRef.current;\n    const watchFieldsHook = useWatchFieldsRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = () => updateValue({});\n    watchInternal(name, defaultValueRef.current, id);\n\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [\n    name,\n    useWatchRenderFunctionsRef,\n    useWatchFieldsRef,\n    watchInternal,\n    defaultValueRef,\n  ]);\n\n  return idRef.current\n    ? watchInternal(name, defaultValueRef.current, idRef.current)\n    : isUndefined(defaultValue)\n    ? isString(name)\n      ? get(defaultValuesRef.current, name)\n      : Array.isArray(name)\n      ? name.reduce(\n          (previous, inputName) => ({\n            ...previous,\n            [inputName]: get(defaultValuesRef.current, inputName),\n          }),\n          {},\n        )\n      : defaultValuesRef.current\n    : defaultValue;\n}\n","import * as React from 'react';\nimport { useController } from './useController';\nimport { ControllerProps, FieldValues } from './types';\n\ntype NativeInputs = 'input' | 'select' | 'textarea';\n\nconst Controller = <\n  TAs extends React.ReactElement | React.ComponentType<any> | NativeInputs,\n  TFieldValues extends FieldValues = FieldValues\n>(\n  props: ControllerProps<TAs, TFieldValues>,\n) => {\n  const { rules, as, render, defaultValue, control, onFocus, ...rest } = props;\n  const { field, meta } = useController(props);\n\n  const componentProps = {\n    ...rest,\n    ...field,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, componentProps)\n      : React.createElement(as as NativeInputs, componentProps as any)\n    : render\n    ? render(field, meta)\n    : null;\n};\n\nexport { Controller };\n"],"mappings":";;;;;;;AAAA,IAAAA,aAAA,GAAe,SAAfA,cAAgBC,KAAU;EAAA,OACxBA,KAAK,YAAYC,WAAW;AAAA;ACCvB,IAAMC,MAAM,GAAG;EACpBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE;CACR;AAEM,IAAMC,eAAe,GAAmB;EAC7CC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,WAAW;EACtBC,GAAG,EAAE;CACN;AAEM,IAAMC,MAAM,GAAG,QAAQ;AAEvB,IAAMC,SAAS,GAAG,WAAW;AAE7B,IAAMC,sBAAsB,GAAG;EACpCC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;CACX;SCxBuBC,oBAAoBA,CAAAC,IAAA,EAE1CC,uBAAiC,EACjCC,YAAiD;EAAA,IAF/CC,GAAG,GAAAH,IAAA,CAAHG,GAAG;EAIL,IAAI3B,aAAa,CAAC2B,GAAG,CAAC,IAAID,YAAY,EAAE;IACtCC,GAAG,CAACC,gBAAgB,CAClBH,uBAAuB,GAAGtB,MAAM,CAACE,MAAM,GAAGF,MAAM,CAACG,KAAK,EACtDoB,YAAY,CACb;IACDC,GAAG,CAACC,gBAAgB,CAACzB,MAAM,CAACC,IAAI,EAAEsB,YAAY,CAAC;;AAEnD;AChBA,IAAAG,iBAAA,GAAe,SAAfA,kBAAgB5B,KAAc;EAAA,OAAgCA,KAAK,IAAI,IAAI;AAAA;ACEpE,IAAM6B,YAAY,GAAG,SAAfA,YAAYA,CAAI7B,KAAc;EAAA,OAAK,OAAOA,KAAK,KAAK,QAAQ;AAAA;AAEzE,IAAA8B,QAAA,GAAe,SAAfA,SAAkC9B,KAAc;EAAA,OAC9C,CAAC4B,iBAAiB,CAAC5B,KAAK,CAAC,IACzB,CAAC+B,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,IACrB6B,YAAY,CAAC7B,KAAK,CAAC,IACnB,EAAEA,KAAK,YAAYiC,IAAI,CAAC;AAAA;ACR1B,IAAAC,KAAA,GAAe,SAAfA,MAAgBlC,KAAa;EAAA,OAAK,OAAO,CAACmC,IAAI,CAACnC,KAAK,CAAC;AAAA;ACArD,IAAAoC,OAAA,GAAe,SAAfA,QAAgBpC,KAAY;EAAA,OAAKA,KAAK,CAACqC,MAAM,CAACC,OAAO,CAAC;AAAA;ACEtD,IAAAC,YAAA,GAAe,SAAfA,aAAgBC,KAAa;EAAA,OAC3BJ,OAAO,CACLI,KAAK,CACFC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CACrBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBC,KAAK,CAAC,GAAG,CAAC,CACd;AAAA;SCJqBC,GAAGA,CACzBC,MAAmB,EACnBC,IAAY,EACZ7C,KAAe;EAEf,IAAI8C,KAAK,GAAG,CAAC,CAAC;EACd,IAAMC,QAAQ,GAAGb,KAAK,CAACW,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAGN,YAAY,CAACM,IAAI,CAAC;EAC1D,IAAMG,MAAM,GAAGD,QAAQ,CAACC,MAAM;EAC9B,IAAMC,SAAS,GAAGD,MAAM,GAAG,CAAC;EAE5B,OAAO,EAAEF,KAAK,GAAGE,MAAM,EAAE;IACvB,IAAME,GAAG,GAAGH,QAAQ,CAACD,KAAK,CAAC;IAC3B,IAAIK,QAAQ,GAAGnD,KAAK;IAEpB,IAAI8C,KAAK,KAAKG,SAAS,EAAE;MACvB,IAAMG,QAAQ,GAAGR,MAAM,CAACM,GAAG,CAAC;MAC5BC,QAAQ,GACNrB,QAAQ,CAACsB,QAAQ,CAAC,IAAIrB,KAAK,CAACC,OAAO,CAACoB,QAAQ,CAAC,GACzCA,QAAQ,GACR,CAACC,KAAK,CAAC,CAACN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,GAC5B,EAAE,GACF,EAAE;;IAEVF,MAAM,CAACM,GAAG,CAAC,GAAGC,QAAQ;IACtBP,MAAM,GAAGA,MAAM,CAACM,GAAG,CAAC;;EAEtB,OAAON,MAAM;AACf;AC5BA,IAAAU,qBAAA,GAAe,SAAfA,sBAAgBC,IAAiB,EAAiC;EAAA,IAA/BvD,KAAA,GAAAwD,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAA6B,EAAE;EAChE,KAAK,IAAMN,GAAG,IAAIK,IAAI,EAAE;IACtB,CAACrB,KAAK,CAACgB,GAAG,CAAC,GAAGP,GAAG,CAAC3C,KAAK,EAAEkD,GAAG,EAAEK,IAAI,CAACL,GAAG,CAAC,CAAC,GAAIlD,KAAK,CAACkD,GAAG,CAAC,GAAGK,IAAI,CAACL,GAAG,CAAE;;EAErE,OAAOlD,KAAK;AACd,CAAC;ACTD,IAAA0D,WAAA,GAAe,SAAfA,YAAgBC,GAAY;EAAA,OAAuBA,GAAG,KAAKF,SAAS;AAAA;ACIpE,IAAAG,IAAA,GAAe,SAAfA,IAAA,EAAmE;EAAA,IAAnDC,GAAA,GAAAL,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAW,EAAE;EAAA,IAAEX,IAAY,GAAAW,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;EAAA,IAAEK,YAAsB,GAAAN,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;EACjE,IAAMM,MAAM,GAAG3B,OAAO,CAACS,IAAI,CAACH,KAAK,CAAC,WAAW,CAAC,CAAC,CAACsB,MAAM,CACpD,UAACD,MAAM,EAAEb,GAAG;IAAA,OAAMtB,iBAAiB,CAACmC,MAAM,CAAC,GAAGA,MAAM,GAAGA,MAAM,CAACb,GAAG,CAAC;EAAA,CAAC,EACnEW,GAAG,CACJ;EAED,OAAOH,WAAW,CAACK,MAAM,CAAC,IAAIA,MAAM,KAAKF,GAAG,GACxCH,WAAW,CAACG,GAAG,CAAChB,IAAI,CAAC,CAAC,GACpBiB,YAAY,GACZD,GAAG,CAAChB,IAAI,CAAC,GACXkB,MAAM;AACZ,CAAC;ACXD,IAAAE,iBAAA,GAAe,SAAfA,kBACEC,MAA+B,EAC/BC,WAAsC;EAEtC,KAAK,IAAMjB,GAAG,IAAIgB,MAAM,EAAE;IACxB,IAAIN,IAAG,CAACO,WAAW,EAAEjB,GAAG,CAAC,EAAE;MACzB,IAAMkB,KAAK,GAAGF,MAAM,CAAChB,GAAG,CAAC;MAEzB,IAAIkB,KAAK,EAAE;QACT,IAAIA,KAAK,CAAC1C,GAAG,CAAC2C,KAAK,IAAIX,WAAW,CAACU,KAAK,CAAC1C,GAAG,CAAC2C,KAAK,EAAE,CAAC,EAAE;UACrD;SACD,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;UACxBF,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC5C,GAAG,CAAC2C,KAAK,EAAE;UAE5B;;;;;AAKV,CAAC;ACnBD,IAAAE,uBAAA,GAAe,SAAfA,wBACE7C,GAAQ,EACR8C,uBAA2D;EAE3D,IAAIzE,aAAa,CAAC2B,GAAG,CAAC,IAAIA,GAAG,CAAC+C,mBAAmB,EAAE;IACjD/C,GAAG,CAAC+C,mBAAmB,CAACvE,MAAM,CAACG,KAAK,EAAEmE,uBAAuB,CAAC;IAC9D9C,GAAG,CAAC+C,mBAAmB,CAACvE,MAAM,CAACE,MAAM,EAAEoE,uBAAuB,CAAC;IAC/D9C,GAAG,CAAC+C,mBAAmB,CAACvE,MAAM,CAACC,IAAI,EAAEqE,uBAAuB,CAAC;;AAEjE,CAAC;ACND,IAAME,aAAa,GAAqB;EACtCC,OAAO,EAAE,KAAK;EACd3E,KAAK,EAAE;CACR;AAED,IAAA4E,aAAA,GAAe,SAAfA,cAAgBN,OAAiC;EAAA,OAC/CvC,KAAK,CAACC,OAAO,CAACsC,OAAO,CAAC,GAClBA,OAAO,CAACN,MAAM,CACZ,UAACa,QAAQ,EAAEC,MAAM;IAAA,OACfA,MAAM,IAAIA,MAAM,CAACpD,GAAG,CAACqD,OAAO,GACxB;MACEJ,OAAO,EAAE,IAAI;MACb3E,KAAK,EAAE8E,MAAM,CAACpD,GAAG,CAAC1B;KACnB,GACD6E,QAAQ;EAAA,GACdH,aAAa,CACd,GACDA,aAAa;AAAA;ACxBnB,IAAAM,sBAAA,GAAe,SAAfA,uBACEV,OAAoD;EAAA,OAEpDW,kBAAA,CAAIX,OAAO,EACRjC,MAAM,CAAC,UAAA6C,KAAA;IAAA,IAAGC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;IAAA,OAAgBA,QAAQ;EAAA,EAAC,CAC3CC,GAAG,CAAC,UAAAC,KAAA;IAAA,IAAGrF,KAAK,GAAAqF,KAAA,CAALrF,KAAK;IAAA,OAAeA,KAAK;EAAA,EAAC;AAAA;ACHtC,IAAAsF,YAAA,GAAe,SAAfA,aAAgBC,OAAqB;EAAA,OACnCA,OAAO,CAACC,IAAI,KAAK,OAAO;AAAA;ACD1B,IAAAC,WAAA,GAAe,SAAfA,YAAgBF,OAAqB;EAAA,OACnCA,OAAO,CAACC,IAAI,KAAK,MAAM;AAAA;ACDzB,IAAAE,eAAA,GAAe,SAAfA,gBAAgBH,OAAqB;EAAA,OACnCA,OAAO,CAACC,IAAI,KAAK,UAAU;AAAA;ACA7B,IAAAG,gBAAA,GAAe,SAAfA,iBAAgBJ,OAAqB;EAAA,OACnCA,OAAO,CAACC,IAAI,QAAAI,MAAA,CAAQhF,MAAM,cAAW;AAAA;ACIvC,IAAMiF,aAAa,GAAwB;EACzC7F,KAAK,EAAE,KAAK;EACZ2E,OAAO,EAAE;CACV;AAED,IAAMmB,WAAW,GAAG;EAAE9F,KAAK,EAAE,IAAI;EAAE2E,OAAO,EAAE;AAAI,CAAE;AAElD,IAAAoB,gBAAA,GAAe,SAAfA,iBAAgBzB,OAAiC;EAC/C,IAAIvC,KAAK,CAACC,OAAO,CAACsC,OAAO,CAAC,EAAE;IAC1B,IAAIA,OAAO,CAACtB,MAAM,GAAG,CAAC,EAAE;MACtB,IAAMgD,MAAM,GAAG1B,OAAO,CACnBjC,MAAM,CAAC,UAACyC,MAAM;QAAA,OAAKA,MAAM,IAAIA,MAAM,CAACpD,GAAG,CAACqD,OAAO;MAAA,EAAC,CAChDK,GAAG,CAAC,UAAAa,KAAA;QAAA,IAAUjG,KAAK,GAAAiG,KAAA,CAAZvE,GAAG,CAAI1B,KAAK;QAAA,OAASA,KAAK;MAAA,EAAC;MACrC,OAAO;QAAEA,KAAK,EAAEgG,MAAM;QAAErB,OAAO,EAAE,CAAC,CAACqB,MAAM,CAAChD;MAAM,CAAE;;IAGpD,IAAAkD,cAAA,GAAuC5B,OAAO,CAAC,CAAC,CAAC,CAAC5C,GAAG;MAA7CqD,OAAO,GAAAmB,cAAA,CAAPnB,OAAO;MAAE/E,KAAK,GAAAkG,cAAA,CAALlG,KAAK;MAAEmG,UAAU,GAAAD,cAAA,CAAVC,UAAU;IAElC,OAAOpB,OAAO,GACVoB,UAAU,IAAI,CAACzC,WAAW,CAAEyC,UAAkB,CAACnG,KAAK,CAAC,GACnD0D,WAAW,CAAC1D,KAAK,CAAC,IAAIA,KAAK,KAAK,EAAE,GAChC8F,WAAW,GACX;MAAE9F,KAAK,EAAEA,KAAK;MAAE2E,OAAO,EAAE;IAAI,CAAE,GACjCmB,WAAW,GACbD,aAAa;;EAGnB,OAAOA,aAAa;AACtB,CAAC;SCzBuBO,aAAaA,CACnCC,SAA0D,EAC1DC,IAAqC,EACrCC,qBAAoE,EACpEC,eAAyB,EACzBC,kBAA4B;EAE5B,IAAMrC,KAAK,GAAGiC,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAE;EAEtC,IAAIlC,KAAK,EAAE;IACT,IAAAuC,UAAA,GAMIvC,KAAK,CALP1C,GAAG;MAAI1B,KAAK,GAAA2G,UAAA,CAAL3G,KAAK;MAAE4G,QAAQ,GAAAD,UAAA,CAARC,QAAQ;MACtBlF,GAAG,GAID0C,KAAK,CAJP1C,GAAG;MACHmF,aAAa,GAGXzC,KAAK,CAHPyC,aAAa;MACbC,WAAW,GAET1C,KAAK,CAFP0C,WAAW;MACXC,UAAU,GACR3C,KAAK,CADP2C,UAAU;IAGZ,IAAIH,QAAQ,IAAIJ,eAAe,EAAE;MAC/B;;IAGF,IAAIf,WAAW,CAAC/D,GAAG,CAAC,EAAE;MACpB,OAAOA,GAAG,CAACsF,KAAK;;IAGlB,IAAI1B,YAAY,CAAC5D,GAAG,CAAC,EAAE;MACrB,OAAOkD,aAAa,CAACR,KAAK,CAACE,OAAO,CAAC,CAACtE,KAAK;;IAG3C,IAAI2F,gBAAgB,CAACjE,GAAG,CAAC,EAAE;MACzB,OAAOsD,sBAAsB,CAACtD,GAAG,CAAC4C,OAAO,CAAC;;IAG5C,IAAIoB,eAAU,CAAChE,GAAG,CAAC,EAAE;MACnB,OAAOqE,gBAAgB,CAAC3B,KAAK,CAACE,OAAO,CAAC,CAACtE,KAAK;;IAG9C,OAAOyG,kBAAkB,GACrBzG,KAAK,GACL6G,aAAa,GACb7G,KAAK,KAAK,EAAE,GACViH,GAAG,GACH,CAACjH,KAAK,GACR8G,WAAW,GACVpF,GAAwB,CAACoF,WAAW,GACrCC,UAAU,GACVA,UAAU,CAAC/G,KAAK,CAAC,GACjBA,KAAK;;EAGX,IAAIuG,qBAAqB,EAAE;IACzB,OAAO3C,IAAG,CAAC2C,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC;;AAEnD;SC/DwBY,UAAUA,CAAC3B,OAAY;EAC7C,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,IAAI;;EAGb,IACE,EAAEA,OAAO,YAAYtF,WAAW,CAAC,IACjCsF,OAAO,CAAC4B,QAAQ,KAAKC,IAAI,CAACC,aAAa,EACvC;IACA,OAAO,KAAK;;EAGd,OAAOH,UAAU,CAAC3B,OAAO,CAAC+B,UAAiB,CAAC;AAC9C;ACZA,IAAAC,aAAA,GAAe,SAAfA,cAAgBvH,KAAc;EAAA,OAC5B8B,QAAQ,CAAC9B,KAAK,CAAC,IAAI,CAACwH,MAAM,CAACC,IAAI,CAACzH,KAAK,CAAC,CAACgD,MAAM;AAAA;ACJ/C,IAAA0E,SAAA,GAAe,SAAfA,UAAgB1H,KAAc;EAAA,OAAuB,OAAOA,KAAK,KAAK,SAAS;AAAA;ACO/E,SAAS2H,OAAOA,CAAC/E,MAAW,EAAEgF,UAA+B;EAC3D,IAAM5E,MAAM,GAAG4E,UAAU,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC7E,MAAM;EAC7C,IAAIF,KAAK,GAAG,CAAC;EAEb,OAAOA,KAAK,GAAGE,MAAM,EAAE;IACrBJ,MAAM,GAAGc,WAAW,CAACd,MAAM,CAAC,GAAGE,KAAK,EAAE,GAAGF,MAAM,CAACgF,UAAU,CAAC9E,KAAK,EAAE,CAAC,CAAC;;EAGtE,OAAOF,MAAM;AACf;SAEwBkF,KAAKA,CAAClF,MAAW,EAAEC,IAAY;EACrD,IAAM+E,UAAU,GAAG1F,KAAK,CAACW,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAGN,YAAY,CAACM,IAAI,CAAC;EAC5D,IAAMkF,WAAW,GACfH,UAAU,CAAC5E,MAAM,IAAI,CAAC,GAAGJ,MAAM,GAAG+E,OAAO,CAAC/E,MAAM,EAAEgF,UAAU,CAAC;EAC/D,IAAM1E,GAAG,GAAG0E,UAAU,CAACA,UAAU,CAAC5E,MAAM,GAAG,CAAC,CAAC;EAC7C,IAAIgF,cAAc;EAElB,IAAID,WAAW,EAAE;IACf,OAAOA,WAAW,CAAC7E,GAAG,CAAC;;EAGzB,KAAK,IAAI+E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC7E,MAAM,EAAEiF,CAAC,EAAE,EAAE;IACvD,IAAInF,KAAK,GAAG,CAAC,CAAC;IACd,IAAIoF,SAAS;IACb,IAAMC,YAAY,GAAGP,UAAU,CAACC,KAAK,CAAC,CAAC,EAAE,EAAEI,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,IAAMG,kBAAkB,GAAGD,YAAY,CAACnF,MAAM,GAAG,CAAC;IAElD,IAAIiF,CAAC,GAAG,CAAC,EAAE;MACTD,cAAc,GAAGpF,MAAM;;IAGzB,OAAO,EAAEE,KAAK,GAAGqF,YAAY,CAACnF,MAAM,EAAE;MACpC,IAAMqF,IAAI,GAAGF,YAAY,CAACrF,KAAK,CAAC;MAChCoF,SAAS,GAAGA,SAAS,GAAGA,SAAS,CAACG,IAAI,CAAC,GAAGzF,MAAM,CAACyF,IAAI,CAAC;MAEtD,IACED,kBAAkB,KAAKtF,KAAK,KAC1BhB,QAAQ,CAACoG,SAAS,CAAC,IAAIX,aAAa,CAACW,SAAS,CAAC,IAC9CnG,KAAK,CAACC,OAAO,CAACkG,SAAS,CAAC,IACvB,CAACA,SAAS,CAAC7F,MAAM,CACf,UAACkB,IAAI;QAAA,OACFzB,QAAQ,CAACyB,IAAI,CAAC,IAAI,CAACgE,aAAa,CAAChE,IAAI,CAAC,IAAKmE,SAAS,CAACnE,IAAI,CAAC;MAAA,EAC9D,CAACP,MAAO,CAAC,EACd;QACAgF,cAAc,GAAG,OAAOA,cAAc,CAACK,IAAI,CAAC,GAAG,OAAOzF,MAAM,CAACyF,IAAI,CAAC;;MAGpEL,cAAc,GAAGE,SAAS;;;EAI9B,OAAOtF,MAAM;AACf;AChDA,IAAM0F,SAAS,GAAG,SAAZA,SAASA,CAAIC,UAAiB,EAAE7G,GAAQ;EAAA,OAC5C6G,UAAU,IAAIA,UAAU,CAAC7G,GAAG,KAAKA,GAAG;AAAA;SAEd8G,iCAAiCA,CAGvDnC,SAA0D,EAC1D5E,YAAkE,EAClE2C,KAAY,EACZmC,qBAA0D,EAC1DkC,gBAA0B,EAC1BC,WAAqB;EAErB,IACEhH,GAAG,GAED0C,KAAK,CAFP1C,GAAG;IACI4E,IAAI,GACTlC,KAAK,CADP1C,GAAG,CAAI4E,IAAI;EAEb,IAAMqC,QAAQ,GAAGtC,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAU;EAEjD,IAAI,CAACmC,gBAAgB,EAAE;IACrB,IAAMzI,KAAK,GAAGoG,aAAa,CAACC,SAAS,EAAEC,IAAI,EAAEC,qBAAqB,CAAC;IAEnE,CAAC7C,WAAW,CAAC1D,KAAK,CAAC,IAAI2C,GAAG,CAAC4D,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,EAAEtG,KAAK,CAAC;;EAGxE,IAAI,CAAC0B,GAAG,CAAC8D,IAAI,IAAI,CAACmD,QAAQ,EAAE;IAC1B,OAAOtC,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC;IAC9B;;EAGF,IAAIhB,YAAY,CAAC5D,GAAG,CAAC,IAAIgE,eAAe,CAAChE,GAAG,CAAC,EAAE;IAC7C,IAAIK,KAAK,CAACC,OAAO,CAAC2G,QAAQ,CAACrE,OAAO,CAAC,IAAIqE,QAAQ,CAACrE,OAAO,CAACtB,MAAM,EAAE;MAC9DZ,OAAO,CAACuG,QAAQ,CAACrE,OAAO,CAAC,CAACsE,OAAO,CAAC,YAAmB;QAAA,IAAlB9D,MAAM,GAAAtB,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,EAAE;QAAA,IAAEV,KAAK,GAAAU,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;QACnD,IACGyD,UAAU,CAACpC,MAAM,CAACpD,GAAG,CAAC,IAAI4G,SAAS,CAACxD,MAAM,EAAEA,MAAM,CAACpD,GAAG,CAAC,IACxDgH,WAAW,EACX;UACAnE,uBAAuB,CAACO,MAAM,CAACpD,GAAG,EAAED,YAAY,CAAC;UACjDqG,KAAK,CAACa,QAAQ,CAACrE,OAAO,MAAAsB,MAAA,CAAM9C,KAAK,OAAI;;OAExC,CAAC;MAEF,IAAI6F,QAAQ,CAACrE,OAAO,IAAI,CAAClC,OAAO,CAACuG,QAAQ,CAACrE,OAAO,CAAC,CAACtB,MAAM,EAAE;QACzD,OAAOqD,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC;;KAEjC,MAAM;MACL,OAAOD,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC;;GAEjC,MAAM,IAAKY,UAAU,CAACxF,GAAG,CAAC,IAAI4G,SAAS,CAACK,QAAQ,EAAEjH,GAAG,CAAC,IAAKgH,WAAW,EAAE;IACvEnE,uBAAuB,CAAC7C,GAAG,EAAED,YAAY,CAAC;IAE1C,OAAO4E,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC;;AAElC;AC7DA,IAAAuC,WAAA,GAAe,SAAfA,YAAgB7I,KAAc;EAAA,OAC5B4B,iBAAiB,CAAC5B,KAAK,CAAC,IAAI,CAAC6B,YAAY,CAAC7B,KAAK,CAAC;AAAA;SCFlC8I,SAASA,CAGvBC,MAAS,EAAEC,MAAS;EACpB,IAAIH,WAAW,CAACE,MAAM,CAAC,IAAIF,WAAW,CAACG,MAAM,CAAC,EAAE;IAC9C,OAAOA,MAAM;;EAGf,KAAK,IAAM9F,GAAG,IAAI8F,MAAM,EAAE;IACxB,IAAMC,WAAW,GAAGF,MAAM,CAAC7F,GAAG,CAAC;IAC/B,IAAMgG,WAAW,GAAGF,MAAM,CAAC9F,GAAG,CAAC;IAE/B,IAAI;MACF6F,MAAM,CAAC7F,GAAG,CAAC,GACRpB,QAAQ,CAACmH,WAAW,CAAC,IAAInH,QAAQ,CAACoH,WAAW,CAAC,IAC9CnH,KAAK,CAACC,OAAO,CAACiH,WAAW,CAAC,IAAIlH,KAAK,CAACC,OAAO,CAACkH,WAAW,CAAE,GACtDJ,SAAS,CAACG,WAAW,EAAEC,WAAW,CAAC,GACnCA,WAAW;KAClB,CAAC,OAAAC,EAAA,EAAM;;EAGV,OAAOJ,MAAM;AACf;SCrBwBK,SAASA,CAC/BC,OAAY,EACZC,OAAY,EACZC,aAAuB;EAEvB,IACEV,WAAW,CAACQ,OAAO,CAAC,IACpBR,WAAW,CAACS,OAAO,CAAC,IACpBD,OAAO,YAAYpH,IAAI,IACvBqH,OAAO,YAAYrH,IAAI,EACvB;IACA,OAAOoH,OAAO,KAAKC,OAAO;;EAG5B,IAAI,CAACE,cAAoB,CAACH,OAAO,CAAC,EAAE;IAClC,IAAMI,KAAK,GAAGjC,MAAM,CAACC,IAAI,CAAC4B,OAAO,CAAC;IAClC,IAAMK,KAAK,GAAGlC,MAAM,CAACC,IAAI,CAAC6B,OAAO,CAAC;IAElC,IAAIG,KAAK,CAACzG,MAAM,KAAK0G,KAAK,CAAC1G,MAAM,EAAE;MACjC,OAAO,KAAK;;IAGd,SAAA2G,EAAA,MAAAC,KAAA,GAAkBH,KAAK,EAAAE,EAAA,GAAAC,KAAA,CAAA5G,MAAA,EAAA2G,EAAA,IAAE;MAApB,IAAMzG,GAAG,GAAA0G,KAAA,CAAAD,EAAA;MACZ,IAAME,IAAI,GAAGR,OAAO,CAACnG,GAAG,CAAC;MAEzB,IAAI,EAAEqG,aAAa,IAAIrG,GAAG,KAAK,KAAK,CAAC,EAAE;QACrC,IAAM4G,IAAI,GAAGR,OAAO,CAACpG,GAAG,CAAC;QAEzB,IACE,CAACpB,QAAQ,CAAC+H,IAAI,CAAC,IAAI9H,KAAK,CAACC,OAAO,CAAC6H,IAAI,CAAC,MACrC/H,QAAQ,CAACgI,IAAI,CAAC,IAAI/H,KAAK,CAACC,OAAO,CAAC8H,IAAI,CAAC,CAAC,GACnC,CAACV,SAAS,CAACS,IAAI,EAAEC,IAAI,EAAEP,aAAa,CAAC,GACrCM,IAAI,KAAKC,IAAI,EACjB;UACA,OAAO,KAAK;;;;;EAMpB,OAAO,IAAI;AACb;ACxCA,SAASC,cAAcA,CAKrB/D,MAAS,EACTgE,aAAgB,EAChBC,WAA2C,EAC3C3C,UAAc,EACd4C,UAAoB;EAEpB,IAAIpH,KAAK,GAAG,CAAC,CAAC;EAEd,OAAO,EAAEA,KAAK,GAAGkD,MAAM,CAAChD,MAAM,EAAE;IAC9B,KAAK,IAAME,GAAG,IAAI8C,MAAM,CAAClD,KAAK,CAAC,EAAE;MAC/B,IAAIf,KAAK,CAACC,OAAO,CAACgE,MAAM,CAAClD,KAAK,CAAC,CAACI,GAAG,CAAC,CAAC,EAAE;QACrC,CAAC+G,WAAW,CAACnH,KAAK,CAAC,KAAKmH,WAAW,CAACnH,KAAK,CAAC,GAAG,EAAE,CAAC;QAChDmH,WAAW,CAACnH,KAAK,CAAC,CAACI,GAAG,CAAC,GAAG,EAAE;QAC5B6G,cAAc,CACZ/D,MAAM,CAAClD,KAAK,CAAC,CAACI,GAAG,CAAM,EACvBU,IAAG,CAACoG,aAAa,CAAClH,KAAK,CAAC,IAAI,EAAE,EAAEI,GAAG,EAAE,EAAE,CAAC,EACxC+G,WAAW,CAACnH,KAAK,CAAC,CAACI,GAAG,CAAO,EAC7B+G,WAAW,CAACnH,KAAK,CAAC,EAClBI,GAAG,CACJ;OACF,MAAM;QACLkG,SAAS,CAACxF,IAAG,CAACoG,aAAa,CAAClH,KAAK,CAAC,IAAI,EAAE,EAAEI,GAAG,CAAC,EAAE8C,MAAM,CAAClD,KAAK,CAAC,CAACI,GAAG,CAAC,CAAC,GAC/DP,GAAG,CAACsH,WAAW,CAACnH,KAAK,CAAC,IAAI,EAAE,EAAEI,GAAG,CAAC,GACjC+G,WAAW,CAACnH,KAAK,CAAC,GAAA0E,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACdF,WAAW,CAACnH,KAAK,CAAC,GAAAsH,eAAA,KACpBlH,GAAG,EAAG,IAAI,EACX;;;IAIVoE,UAAU,IACR,CAAC2C,WAAW,CAACjH,MAAM,IACnB,OAAOsE,UAAU,CAAC4C,UAAqB,CAAC;;EAG5C,OAAOD,WAAW;AACpB;AAEA,IAAAI,wBAAA,GAAe,SAAfA,yBACErE,MAAS,EACTgE,aAAgB,EAChBC,WAA2C;EAAA,OAE3CnB,SAAS,CACPiB,cAAc,CAAC/D,MAAM,EAAEgE,aAAa,EAAEC,WAAW,CAACpC,KAAK,CAAC,CAAC,EAAE7B,MAAM,CAAChD,MAAM,CAAC,CAAC,EAC1E+G,cAAc,CAACC,aAAa,EAAEhE,MAAM,EAAEiE,WAAW,CAACpC,KAAK,CAAC,CAAC,EAAE7B,MAAM,CAAChD,MAAM,CAAC,CAAC,CAC3E;AAAA;ACxDH,IAAAsH,QAAA,GAAe,SAAfA,SAAgBtK,KAAc;EAAA,OAAsB,OAAOA,KAAK,KAAK,QAAQ;AAAA;ACQ7E,IAAAuK,eAAA,GAAe,SAAfA,gBACElE,SAA0D,EAC1DmE,kBAAuC,EACvC/B,gBAAyB,EACzBjC,eAAyB,EACzBiE,MAGqB;EAErB,IAAMC,MAAM,GAAG,EAAkB;EAAC,IAAAC,KAAA,YAAAA,MAAArE,IAAA,EAEI;IACpC,IACE5C,WAAW,CAAC+G,MAAM,CAAC,KAClBH,QAAQ,CAACG,MAAM,CAAC,GACbnE,IAAI,CAACsE,UAAU,CAACH,MAAM,CAAC,GACvB1I,KAAK,CAACC,OAAO,CAACyI,MAAM,CAAC,IAAIA,MAAM,CAACI,IAAI,CAAC,UAACtH,IAAI;MAAA,OAAK+C,IAAI,CAACsE,UAAU,CAACrH,IAAI,CAAC;IAAA,EAAC,CAAC,EAC1E;MACAmH,MAAM,CAACpE,IAAuC,CAAC,GAAGF,aAAa,CAC7DC,SAAS,EACTC,IAAI,EACJ7C,SAAS,EACT+C,eAAe,CAChB;;GAEJ;EAdD,KAAK,IAAMF,IAAI,IAAID,SAAS,CAACK,OAAO;IAAAiE,KAAA,CAAArE,IAAA;EAAA;EAgBpC,OAAOmC,gBAAgB,GACnBnF,qBAAqB,CAACoH,MAAM,CAAC,GAC7B5B,SAAS,CAAC0B,kBAAkB,EAAElH,qBAAqB,CAACoH,MAAM,CAAC,CAAC;AAClE,CAAC;AC5BD,IAAAI,mBAAA,GAAe,SAAfA,oBAAAC,KAAA,EAYC;EAAA,IAXCC,MAAM,GAAAD,KAAA,CAANC,MAAM;IACN1E,IAAI,GAAAyE,KAAA,CAAJzE,IAAI;IACJ2E,KAAK,GAAAF,KAAA,CAALE,KAAK;IACLC,WAAW,GAAAH,KAAA,CAAXG,WAAW;IACXC,oBAAoB,GAAAJ,KAAA,CAApBI,oBAAoB;EAQpB,IAAMxG,OAAO,GAAGjB,WAAW,CAACuH,KAAK,CAAC;EAClC,IAAMG,aAAa,GAAGxH,IAAG,CAACoH,MAAM,EAAE1E,IAAI,CAAC;EAEvC,OACG3B,OAAO,IAAI,CAAC,CAACyG,aAAa,IAC1B,CAACzG,OAAO,IAAI,CAACyE,SAAS,CAACgC,aAAa,EAAEH,KAAK,EAAE,IAAI,CAAE,IACnDtG,OAAO,IAAIf,IAAG,CAACuH,oBAAoB,EAAE7E,IAAI,CAAC,IAAI,CAAC1C,IAAG,CAACsH,WAAW,EAAE5E,IAAI,CAAE;AAE3E,CAAC;AChCD,IAAA+E,OAAA,GAAe,SAAfA,QAAgBrL,KAAc;EAAA,OAAsBA,KAAK,YAAYsL,MAAM;AAAA;ACI3E,IAAAC,kBAAA,GAAe,SAAfA,mBAAgBC,cAA+B;EAAA,OAC7C1J,QAAQ,CAAC0J,cAAc,CAAC,IAAI,CAACH,OAAO,CAACG,cAAc,CAAC,GAChDA,cAAc,GACd;IACExL,KAAK,EAAEwL,cAAc;IACrBC,OAAO,EAAE;GACV;AAAA;ACVP,IAAAC,UAAA,GAAe,SAAfA,WAAgB1L,KAAc;EAAA,OAC5B,OAAOA,KAAK,KAAK,UAAU;AAAA;ACG7B,IAAA2L,SAAA,GAAe,SAAfA,UAAgB3L,KAAc;EAAA,OAC5BsK,QAAQ,CAACtK,KAAK,CAAC,IAAIwJ,cAAoB,CAACxJ,KAAoB,CAAC;AAAA;SCDvC4L,gBAAgBA,CACtC7H,MAAsB,EACtBrC,GAAQ,EACS;EAAA,IAAjB8D,IAAI,GAAAhC,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,UAAU;EAEjB,IAAImI,SAAS,CAAC5H,MAAM,CAAC,IAAK2D,SAAS,CAAC3D,MAAM,CAAC,IAAI,CAACA,MAAO,EAAE;IACvD,OAAO;MACLyB,IAAI,EAAJA,IAAI;MACJiG,OAAO,EAAEE,SAAS,CAAC5H,MAAM,CAAC,GAAGA,MAAM,GAAG,EAAE;MACxCrC,GAAG,EAAHA;KACD;;AAEL;ACVA,IAAAmK,YAAA,GAAe,SAAfA,aACEvF,IAAqC,EACrCwF,wBAAiC,EACjCd,MAAyC,EACzCxF,IAAY,EACZiG,OAAuB;EAAA,OAEvBK,wBAAwB,G,gCAEfd,MAAM,CAAC1E,IAAI,CAAC;IACfyF,KAAK,EAAAvE,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACCa,MAAM,CAAC1E,IAAI,CAAC,IAAI0E,MAAM,CAAC1E,IAAI,CAAE,CAACyF,KAAK,GAAGf,MAAM,CAAC1E,IAAI,CAAE,CAACyF,KAAK,GAAG,EAAE,GAAA3B,eAAA,KACjE5E,IAAI,EAAGiG,OAAO,IAAI,IAAI;EAAA,KAG3B,EAAE;AAAA;ACOR,IAAAO,aAAA;EAAA,IAAAC,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAe,SAAAC,QACbhG,SAA0D,EAC1DyF,wBAAiC,EAAAQ,KAAA,EAajC/F,qBAAkE;IAAA,IAAA7E,GAAA,EAAA1B,KAAA,EAAAsE,OAAA,EAAAlD,QAAA,EAAAH,SAAA,EAAAC,SAAA,EAAAF,GAAA,EAAAD,GAAA,EAAAI,OAAA,EAAAE,QAAA,EAAAiF,IAAA,EAAA2E,KAAA,EAAAsB,OAAA,EAAAC,UAAA,EAAAC,iBAAA,EAAAC,OAAA,EAAAC,iBAAA,EAAAC,gBAAA,EAAAC,KAAA,EAAAC,MAAA,EAAArB,OAAA,EAAAsB,SAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,WAAA,EAAAC,SAAA,EAAAC,eAAA,EAAAC,eAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,mBAAA,EAAAC,YAAA,EAAAC,QAAA,EAAApF,UAAA,EAAAqF,WAAA,EAAA7J,MAAA,EAAA8J,aAAA,EAAAC,gBAAA,EAAAC,GAAA,EAAAC,eAAA,EAAAC,kBAAA,EAAA/K,GAAA,EAAAgL,gBAAA,EAAAC,cAAA,EAAAC,cAAA;IAAA,OAAAjC,mBAAA,GAAAkC,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAXhE/M,GAAG,GAAA4K,KAAA,CAAH5K,GAAG,EACI1B,KAAK,GAAAsM,KAAA,CAAZ5K,GAAG,CAAI1B,KAAK,EACZsE,OAAO,GAAAgI,KAAA,CAAPhI,OAAO,EACPlD,QAAQ,GAAAkL,KAAA,CAARlL,QAAQ,EACRH,SAAS,GAAAqL,KAAA,CAATrL,SAAS,EACTC,SAAS,GAAAoL,KAAA,CAATpL,SAAS,EACTF,GAAG,GAAAsL,KAAA,CAAHtL,GAAG,EACHD,GAAG,GAAAuL,KAAA,CAAHvL,GAAG,EACHI,OAAO,GAAAmL,KAAA,CAAPnL,OAAO,EACPE,QAAQ,GAAAiL,KAAA,CAARjL,QAAQ;UAIJiF,IAAI,GAAoC5E,GAAG,CAAC4E,IAAI;UAChD2E,KAAK,GAAsC,EAAE;UAC7CsB,OAAO,GAAGjH,YAAY,CAAC5D,GAAG,CAAC;UAC3B8K,UAAU,GAAG9G,eAAe,CAAChE,GAAG,CAAC;UACjC+K,iBAAiB,GAAGF,OAAO,IAAIC,UAAU;UACzCE,OAAO,GAAG1M,KAAK,KAAK,EAAE;UACtB2M,iBAAiB,GAAGd,YAAY,CAAC6C,IAAI,CACzC,IAAI,EACJpI,IAAI,EACJwF,wBAAwB,EACxBb,KAAK,CACN;UACK2B,gBAAgB,GAAG,SAAnBA,gBAAgBA,CACpBG,SAAkB,EAClB4B,gBAAyB,EACzBC,gBAAyB,EAEiB;YAAA,IAD1CC,OAAO,GAAArL,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG1C,sBAAsB,CAACG,SAAS;YAAA,IAC1C6N,OAAO,GAAAtL,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG1C,sBAAsB,CAACI,SAAS;YAE1C,IAAMuK,OAAO,GAAGsB,SAAS,GAAG4B,gBAAgB,GAAGC,gBAAgB;YAC/D3D,KAAK,CAAC3E,IAAI,CAAC,GAAAkB,MAAA,CAAA2C,MAAA;cACT3E,IAAI,EAAEuH,SAAS,GAAG8B,OAAO,GAAGC,OAAO;cACnCrD,OAAO,EAAPA,OAAO;cACP/J,GAAG,EAAHA;YAAG,GACCqL,SAAS,GACTJ,iBAAiB,CAACkC,OAAO,EAAEpD,OAAO,CAAC,GACnCkB,iBAAiB,CAACmC,OAAO,EAAErD,OAAO,CAAC,CACxC;WACF;UAAA,MAGCrK,QAAQ,KACN,CAACmL,OAAO,IAAI,CAACC,UAAU,KAAKE,OAAO,IAAI9K,iBAAiB,CAAC5B,KAAK,CAAC,CAAC,IAC/D0H,SAAS,CAAC1H,KAAK,CAAC,IAAI,CAACA,KAAM,IAC3BwM,UAAU,IAAI,CAACzG,gBAAgB,CAACzB,OAAO,CAAC,CAACK,OAAQ,IACjD4H,OAAO,IAAI,CAAC3H,aAAa,CAACN,OAAO,CAAC,CAACK,OAAQ,CAAC;YAAA4J,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA5B,KAAA,GAEpBlB,SAAS,CAACvK,QAAQ,CAAC,GAC1C;YAAEpB,KAAK,EAAE,CAAC,CAACoB,QAAQ;YAAEqK,OAAO,EAAErK;UAAQ,CAAE,GACxCmK,kBAAkB,CAACnK,QAAQ,CAAC,EAFxBpB,MAAK,GAAA6M,KAAA,CAAL7M,KAAK,EAAEyL,OAAO,GAAAoB,KAAA,CAAPpB,OAAO;UAAA,KAIlBzL,MAAK;YAAAuO,QAAA,CAAAE,IAAA;YAAA;UAAA;UACPxD,KAAK,CAAC3E,IAAI,CAAC,GAAAkB,MAAA,CAAA2C,MAAA;YACT3E,IAAI,EAAE1E,sBAAsB,CAACM,QAAQ;YACrCqK,OAAO,EAAPA,OAAO;YACP/J,GAAG,EAAE+K,iBAAiB,GAClB,CAAC,CAAEpG,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAW,CAAChC,OAAO,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE5C,GAAG,GACjEA;UAAG,GACJiL,iBAAiB,CAAC7L,sBAAsB,CAACM,QAAQ,EAAEqK,OAAO,CAAC,CAC/D;UAAC,IACGK,wBAAwB;YAAAyC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAQ,MAAA,WACpB9D,KAAK;QAAA;UAAA,MAKd,CAAC,CAACrJ,iBAAiB,CAACZ,GAAG,CAAC,IAAI,CAACY,iBAAiB,CAACb,GAAG,CAAC,KAAKf,KAAK,KAAK,EAAE;YAAAuO,QAAA,CAAAE,IAAA;YAAA;UAAA;UAGhExB,SAAS,GAAG1B,kBAAkB,CAACxK,GAAG,CAAC;UACnCmM,SAAS,GAAG3B,kBAAkB,CAACvK,GAAG,CAAC;UAEzC,IAAI,CAACqC,KAAK,CAACrD,KAAK,CAAC,EAAE;YACXmN,WAAW,GACdzL,GAAwB,CAACmF,aAAa,IAAImI,UAAU,CAAChP,KAAK,CAAC;YAC9D,IAAI,CAAC4B,iBAAiB,CAACqL,SAAS,CAACjN,KAAK,CAAC,EAAE;cACvC+M,SAAS,GAAGI,WAAW,GAAGF,SAAS,CAACjN,KAAK;;YAE3C,IAAI,CAAC4B,iBAAiB,CAACsL,SAAS,CAAClN,KAAK,CAAC,EAAE;cACvCgN,SAAS,GAAGG,WAAW,GAAGD,SAAS,CAAClN,KAAK;;WAE5C,MAAM;YACCoN,SAAS,GACZ1L,GAAwB,CAACoF,WAAW,IAAI,IAAI7E,IAAI,CAACjC,KAAK,CAAC;YAC1D,IAAIsK,QAAQ,CAAC2C,SAAS,CAACjN,KAAK,CAAC,EAAE;cAC7B+M,SAAS,GAAGK,SAAS,GAAG,IAAInL,IAAI,CAACgL,SAAS,CAACjN,KAAK,CAAC;;YAEnD,IAAIsK,QAAQ,CAAC4C,SAAS,CAAClN,KAAK,CAAC,EAAE;cAC7BgN,SAAS,GAAGI,SAAS,GAAG,IAAInL,IAAI,CAACiL,SAAS,CAAClN,KAAK,CAAC;;;UAEpD,MAEG+M,SAAS,IAAIC,SAAS;YAAAuB,QAAA,CAAAE,IAAA;YAAA;UAAA;UACxB7B,gBAAgB,CACd,CAAC,CAACG,SAAS,EACXE,SAAS,CAACxB,OAAO,EACjByB,SAAS,CAACzB,OAAO,EACjB3K,sBAAsB,CAACC,GAAG,EAC1BD,sBAAsB,CAACE,GAAG,CAC3B;UAAC,IACG8K,wBAAwB;YAAAyC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAQ,MAAA,WACpB9D,KAAK;QAAA;UAAA,MAKdX,QAAQ,CAACtK,KAAK,CAAC,IAAI,CAAC0M,OAAO,KAAKzL,SAAS,IAAIC,SAAS,CAAC;YAAAqN,QAAA,CAAAE,IAAA;YAAA;UAAA;UACnDpB,eAAe,GAAG9B,kBAAkB,CAACtK,SAAS,CAAC;UAC/CqM,eAAe,GAAG/B,kBAAkB,CAACrK,SAAS,CAAC;UAC/C6L,UAAS,GACb,CAACnL,iBAAiB,CAACyL,eAAe,CAACrN,KAAK,CAAC,IACzCA,KAAK,CAACgD,MAAM,GAAGqK,eAAe,CAACrN,KAAK;UAChCgN,UAAS,GACb,CAACpL,iBAAiB,CAAC0L,eAAe,CAACtN,KAAK,CAAC,IACzCA,KAAK,CAACgD,MAAM,GAAGsK,eAAe,CAACtN,KAAK;UAAA,MAElC+M,UAAS,IAAIC,UAAS;YAAAuB,QAAA,CAAAE,IAAA;YAAA;UAAA;UACxB7B,gBAAgB,CACdG,UAAS,EACTM,eAAe,CAAC5B,OAAO,EACvB6B,eAAe,CAAC7B,OAAO,CACxB;UAAC,IACGK,wBAAwB;YAAAyC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAQ,MAAA,WACpB9D,KAAK;QAAA;UAAA,MAKdX,QAAQ,CAACtK,KAAK,CAAC,IAAImB,OAAO,IAAI,CAACuL,OAAO;YAAA6B,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAhB,mBAAA,GACClC,kBAAkB,CAACpK,OAAO,CAAC,EAArDuM,YAAY,GAAAD,mBAAA,CAAnBzN,KAAK,EAAgByL,QAAO,GAAAgC,mBAAA,CAAPhC,OAAO;UAAA,MAEhCJ,OAAO,CAACqC,YAAY,CAAC,IAAI,CAACA,YAAY,CAACvL,IAAI,CAACnC,KAAK,CAAC;YAAAuO,QAAA,CAAAE,IAAA;YAAA;UAAA;UACpDxD,KAAK,CAAC3E,IAAI,CAAC,GAAAkB,MAAA,CAAA2C,MAAA;YACT3E,IAAI,EAAE1E,sBAAsB,CAACK,OAAO;YACpCsK,OAAO,EAAPA,QAAO;YACP/J,GAAG,EAAHA;UAAG,GACAiL,iBAAiB,CAAC7L,sBAAsB,CAACK,OAAO,EAAEsK,QAAO,CAAC,CAC9D;UAAC,IACGK,wBAAwB;YAAAyC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAQ,MAAA,WACpB9D,KAAK;QAAA;UAAA,KAKd5J,QAAQ;YAAAkN,QAAA,CAAAE,IAAA;YAAA;UAAA;UACJlG,UAAU,GAAGnC,aAAc,CAC/BC,SAAS,EACTC,IAAI,EACJC,qBAAqB,EACrB,KAAK,EACL,IAAI,CACL;UACKqH,WAAW,GAAGnB,iBAAiB,IAAInI,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,CAAC5C,GAAG,GAAGA,GAAG;UAAA,KAEnEgK,UAAU,CAACrK,QAAQ,CAAC;YAAAkN,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OACDpN,QAAQ,CAACkH,UAAU,CAAC;QAAA;UAAnCxE,MAAM,GAAAwK,QAAA,CAAAU,IAAA;UACNpB,aAAa,GAAGjC,gBAAgB,CAAC7H,MAAM,EAAE6J,WAAW,CAAC;UAAA,KAEvDC,aAAa;YAAAU,QAAA,CAAAE,IAAA;YAAA;UAAA;UACfxD,KAAK,CAAC3E,IAAI,CAAC,GAAAkB,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACN0D,aAAa,GACblB,iBAAiB,CAClB7L,sBAAsB,CAACO,QAAQ,EAC/BwM,aAAa,CAACpC,OAAO,CACtB,CACF;UAAC,IACGK,wBAAwB;YAAAyC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAQ,MAAA,WACpB9D,KAAK;QAAA;UAAAsD,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAA,KAGP3M,QAAQ,CAACT,QAAQ,CAAC;YAAAkN,QAAA,CAAAE,IAAA;YAAA;UAAA;UACvBX,gBAAgB,GAAG,EAAgB;UAAAC,GAAA,MAAAC,eAAA,GACDxG,MAAM,CAAC0H,OAAO,CAAC7N,QAAQ,CAAC;QAAA;UAAA,MAAA0M,GAAA,GAAAC,eAAA,CAAAhL,MAAA;YAAAuL,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAR,kBAAA,GAAAkB,cAAA,CAAAnB,eAAA,CAAAD,GAAA,OAAlD7K,GAAG,GAAA+K,kBAAA,KAAEC,gBAAgB,GAAAD,kBAAA;UAAA,MAC3B,CAAC1G,aAAa,CAACuG,gBAAgB,CAAC,IAAI,CAAChC,wBAAwB;YAAAyC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAQ,MAAA;QAAA;UAAAR,QAAA,CAAAE,IAAA;UAAA,OAIpCP,gBAAgB,CAAC3F,UAAU,CAAC;QAAA;UAAnD4F,cAAc,GAAAI,QAAA,CAAAU,IAAA;UACdpB,cAAa,GAAGjC,gBAAgB,CACpCuC,cAAc,EACdP,WAAW,EACX1K,GAAG,CACJ;UAED,IAAI2K,cAAa,EAAE;YACjBC,gBAAgB,GAAAtG,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACX0D,cAAa,GACblB,iBAAiB,CAACzJ,GAAG,EAAE2K,cAAa,CAACpC,OAAO,CAAC,CACjD;YAED,IAAIK,wBAAwB,EAAE;cAC5Bb,KAAK,CAAC3E,IAAI,CAAC,GAAGwH,gBAAgB;;;QAEjC;UAAAC,GAAA;UAAAQ,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAA,IAGElH,aAAa,CAACuG,gBAAgB,CAAC;YAAAS,QAAA,CAAAE,IAAA;YAAA;UAAA;UAClCxD,KAAK,CAAC3E,IAAI,CAAC,GAAAkB,MAAA,CAAA2C,MAAA;YACTzI,GAAG,EAAEkM;UAAW,GACbE,gBAAgB,CACpB;UAAC,IACGhC,wBAAwB;YAAAyC,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,OAAAF,QAAA,CAAAQ,MAAA,WACpB9D,KAAK;QAAA;UAAA,OAAAsD,QAAA,CAAAQ,MAAA,WAMb9D,KAAK;QAAA;QAAA;UAAA,OAAAsD,QAAA,CAAAa,IAAA;MAAA;IAAA,GAAA/C,OAAA;EAAA,CACb;EAAA,gBAxNDL,cAAAqD,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAvD,KAAA,CAAAwD,KAAA,OAAAjM,SAAA;EAAA;AAAA,GAwNC;AChPM,IAAMkM,OAAO,GAAG,SAAVA,OAAOA,CAClBC,QAAiC,EACjC3J,MAAW,EAC0B;EAAA,IAArC4J,KAAA,GAAApM,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAmC,EAAE;EAErC,KAAK,IAAMqM,QAAQ,IAAI7J,MAAM,EAAE;IAC7B,IAAM8J,QAAQ,GAAIH,QAAQ,IACvB7N,QAAQ,CAACkE,MAAM,CAAC,OAAAJ,MAAA,CACTiK,QAAQ,QAAAjK,MAAA,CACRiK,QAAQ,MAAG,CAA6B;IAElDhH,WAAW,CAAC7C,MAAM,CAAC6J,QAAQ,CAAC,CAAC,GACzBD,KAAK,CAACG,IAAI,CAACD,QAAQ,CAAC,GACpBJ,OAAO,CAACI,QAAQ,EAAE9J,MAAM,CAAC6J,QAAQ,CAAC,EAAED,KAAK,CAAC;;EAGhD,OAAOA,KAAK;AACd,CAAC;ACRD,IAAAI,iBAAA,GAAe,SAAfA,kBACEC,WAAyB,EACzBC,SAA0C,EAC1CC,WAAiD,EACjDC,UAAwD,EACxDC,aAAuB;EAKvB,IAAIrQ,KAAK,GAAGyD,SAAS;EAErB0M,WAAW,CAACG,GAAG,CAACJ,SAAS,CAAC;EAE1B,IAAI,CAAC3I,aAAa,CAAC0I,WAAW,CAAC,EAAE;IAC/BjQ,KAAK,GAAG4D,IAAG,CAACqM,WAAW,EAAEC,SAAS,CAAC;IAEnC,IAAIpO,QAAQ,CAAC9B,KAAK,CAAC,IAAI+B,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,EAAE;MAC3C0P,OAAO,CAACQ,SAAS,EAAElQ,KAAK,CAAC,CAAC4I,OAAO,CAAC,UAACtC,IAAI;QAAA,OAAK6J,WAAW,CAACG,GAAG,CAAChK,IAAI,CAAC;MAAA,EAAC;;;EAItE,OAAO5C,WAAW,CAAC1D,KAAK,CAAC,GACrBqQ,aAAa,GACXD,UAAU,GACVxM,IAAG,CAACwM,UAAU,EAAEF,SAAS,CAAC,GAC5BlQ,KAAK;AACX,CAAC;ACxCD,IAAAuQ,cAAA,GAAe,SAAfA,eAAAC,KAAA,EAoBC;EAAA,IAnBCC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;IACRC,UAAU,GAAAF,KAAA,CAAVE,UAAU;IACVC,SAAS,GAAAH,KAAA,CAATG,SAAS;IACTC,SAAS,GAAAJ,KAAA,CAATI,SAAS;IACTC,kBAAkB,GAAAL,KAAA,CAAlBK,kBAAkB;IAClBC,oBAAoB,GAAAN,KAAA,CAApBM,oBAAoB;IACpBC,WAAW,GAAAP,KAAA,CAAXO,WAAW;IACXC,WAAW,GAAAR,KAAA,CAAXQ,WAAW;IACXC,OAAO,GAAAT,KAAA,CAAPS,OAAO;EAYP,IAAIA,OAAO,EAAE;IACX,OAAO,KAAK;GACb,MAAM,IAAI,CAACD,WAAW,IAAIL,SAAS,EAAE;IACpC,OAAO,EAAEC,SAAS,IAAIG,WAAW,CAAC;GACnC,MAAM,IAAIC,WAAW,GAAGH,kBAAkB,GAAGJ,QAAQ,EAAE;IACtD,OAAO,CAACM,WAAW;GACpB,MAAM,IAAIC,WAAW,GAAGF,oBAAoB,GAAGJ,UAAU,EAAE;IAC1D,OAAOK,WAAW;;EAEpB,OAAO,IAAI;AACb,CAAC;AC/BD,IAAAG,uBAAA,GAAe,SAAfA,wBAAgB5K,IAAY;EAAA,OAAKA,IAAI,CAAC6K,SAAS,CAAC,CAAC,EAAE7K,IAAI,CAAC8K,OAAO,CAAC,GAAG,CAAC,CAAC;AAAA;ACE9D,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAI/K,IAAY,EAAEgL,UAAkB;EAAA,OACpEhG,MAAM,CACJ,IAAA1F,MAAA,CAAI0L,UAAU,eAAY7O,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACtE,CAACN,IAAI,CAACmE,IAAI,CAAC;AAAA;AAEd,IAAAiL,kBAAA,GAAe,SAAfA,mBACEC,KAA0C,EAC1ClL,IAAoC;EAAA,OACjCrB,kBAAA,CAAIuM,KAAK,EAAEC,IAAI,CAAC,UAAC/K,OAAO;IAAA,OAAK2K,qBAAqB,CAAC/K,IAAI,EAAEI,OAAO,CAAC;EAAA,EAAC;AAAA;ACPvE,IAAAgL,aAAA,GAAe,SAAfA,cAAgBnM,OAAqB;EAAA,OACnCA,OAAO,CAACC,IAAI,QAAAI,MAAA,CAAQhF,MAAM,SAAM;AAAA;SCAV+Q,WAAWA,CACjCtL,SAA0D,EAC1DuL,8BAGS;EAET,IAAMC,QAAQ,GAAG,IAAIC,gBAAgB,CAAC;IACpC,SAAAC,GAAA,MAAAC,cAAA,GAAoBxK,MAAM,CAACxB,MAAM,CAACK,SAAS,CAACK,OAAO,CAAC,EAAAqL,GAAA,GAAAC,cAAA,CAAAhP,MAAA,EAAA+O,GAAA,IAAE;MAAjD,IAAM3N,KAAK,GAAA4N,cAAA,CAAAD,GAAA;MACd,IAAI3N,KAAK,IAAIA,KAAK,CAACE,OAAO,EAAE;QAAA,IAAA2N,SAAA,GAAAC,0BAAA,CACL9N,KAAK,CAACE,OAAO;UAAA6N,KAAA;QAAA;UAAlC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAoC;YAAA,IAAzBxN,MAAM,GAAAqN,KAAA,CAAAnS,KAAA;YACf,IAAI8E,MAAM,IAAIA,MAAM,CAACpD,GAAG,IAAIwF,UAAU,CAACpC,MAAM,CAACpD,GAAG,CAAC,EAAE;cAClDkQ,8BAA8B,CAACxN,KAAK,CAAC;;;QAExC,SAAAmO,GAAA;UAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;QAAA;UAAAN,SAAA,CAAAQ,CAAA;QAAA;OACF,MAAM,IAAIrO,KAAK,IAAI8C,UAAU,CAAC9C,KAAK,CAAC1C,GAAG,CAAC,EAAE;QACzCkQ,8BAA8B,CAACxN,KAAK,CAAC;;;GAG1C,CAAC;EAEFyN,QAAQ,CAACa,OAAO,CAACC,MAAM,CAACC,QAAQ,EAAE;IAChCC,SAAS,EAAE,IAAI;IACfC,OAAO,EAAE;GACV,CAAC;EAEF,OAAOjB,QAAQ;AACjB;AC7BA,IAAAkB,KAAA,GAAe,OAAOJ,MAAM,KAAK9R,SAAS,IAAI,OAAO+R,QAAQ,KAAK/R,SAAS;SCEnDmS,WAAWA,CAAoBzP,IAAO;;EAC5D,IAAI0P,IAAS;EAEb,IACEpK,WAAW,CAACtF,IAAI,CAAC,IAChBwP,KAAK,KAAKxP,IAAI,YAAY2P,IAAI,IAAInT,aAAa,CAACwD,IAAI,CAAC,CAAE,EACxD;IACA,OAAOA,IAAI;;EAGb,IACE,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC4P,QAAQ,EAAAhK,EAAA,GAChD5F,IAAe,CAAC6P,WAAW,cAAAjK,EAAA,uBAAAA,EAAA,CAAE7C,IAAI,CACnC,EACD;IACA,OAAO/C,IAAI;;EAGb,IAAIA,IAAI,YAAYtB,IAAI,EAAE;IACxBgR,IAAI,GAAG,IAAIhR,IAAI,CAACsB,IAAI,CAAC8P,OAAO,EAAE,CAAC;IAC/B,OAAOJ,IAAI;;EAGb,IAAI1P,IAAI,YAAY+P,GAAG,EAAE;IACvBL,IAAI,GAAG,IAAIK,GAAG,EAAE;IAAC,IAAAC,UAAA,GAAArB,0BAAA,CACE3O,IAAI;MAAAiQ,MAAA;IAAA;MAAvB,KAAAD,UAAA,CAAAnB,CAAA,MAAAoB,MAAA,GAAAD,UAAA,CAAAlB,CAAA,IAAAC,IAAA,GAAyB;QAAA,IAAdjK,IAAI,GAAAmL,MAAA,CAAAxT,KAAA;QACbiT,IAAI,CAAC3C,GAAG,CAACjI,IAAI,CAAC;;IACf,SAAAkK,GAAA;MAAAgB,UAAA,CAAAf,CAAA,CAAAD,GAAA;IAAA;MAAAgB,UAAA,CAAAd,CAAA;IAAA;IACD,OAAOQ,IAAI;;EAGb,IAAI1P,IAAI,YAAYkQ,GAAG,EAAE;IACvBR,IAAI,GAAG,IAAIQ,GAAG,EAAE;IAAC,IAAAC,UAAA,GAAAxB,0BAAA,CACC3O,IAAI,CAACkE,IAAI,EAAE;MAAAkM,MAAA;IAAA;MAA7B,KAAAD,UAAA,CAAAtB,CAAA,MAAAuB,MAAA,GAAAD,UAAA,CAAArB,CAAA,IAAAC,IAAA,GAA+B;QAAA,IAApBpP,GAAG,GAAAyQ,MAAA,CAAA3T,KAAA;QACZiT,IAAI,CAACtQ,GAAG,CAACO,GAAG,EAAE8P,WAAW,CAACzP,IAAI,CAACK,GAAG,CAACV,GAAG,CAAC,CAAC,CAAC;;IAC1C,SAAAqP,GAAA;MAAAmB,UAAA,CAAAlB,CAAA,CAAAD,GAAA;IAAA;MAAAmB,UAAA,CAAAjB,CAAA;IAAA;IACD,OAAOQ,IAAI;;EAGbA,IAAI,GAAGlR,KAAK,CAACC,OAAO,CAACuB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;EAEpC,KAAK,IAAML,IAAG,IAAIK,IAAI,EAAE;IACtB0P,IAAI,CAAC/P,IAAG,CAAC,GAAG8P,WAAW,CAACzP,IAAI,CAACL,IAAG,CAAC,CAAC;;EAGpC,OAAO+P,IAAI;AACb;AC/CA,IAAAW,WAAA,GAAe,SAAfA,YACEC,IAAW;EAAA,OAOP;IACJC,UAAU,EAAE,CAACD,IAAI,IAAIA,IAAI,KAAKvT,eAAe,CAACG,QAAQ;IACtDgQ,QAAQ,EAAEoD,IAAI,KAAKvT,eAAe,CAACC,MAAM;IACzCmQ,UAAU,EAAEmD,IAAI,KAAKvT,eAAe,CAACE,QAAQ;IAC7CyQ,OAAO,EAAE4C,IAAI,KAAKvT,eAAe,CAACK,GAAG;IACrCgQ,SAAS,EAAEkD,IAAI,KAAKvT,eAAe,CAACI;GACrC;AAAA,CAAC;ACbF,IAAAqT,yBAAA,GAAe,SAAfA,0BAAgBrS,GAAiB;EAAA,OAC/B4D,YAAY,CAAC5D,GAAG,CAAC,IAAIgE,eAAe,CAAChE,GAAG,CAAC;AAAA;ACuE3C,IAAMsS,iBAAiB,GAAG,OAAOrB,MAAM,KAAK9R,SAAS;AACrD,IAAMoT,cAAc,GAAGlB,KAAK,GAAG,OAAO,IAAIJ,MAAM,GAAG,OAAOuB,KAAK,KAAKrT,SAAS;SAE7DsT,OAAOA,CAAA,EAYuB;EAAA,IAAAC,MAAA,GAAA5Q,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAF,EAAE;IAAA6Q,WAAA,GAAAD,MAAA,CAR5CP,IAAI;IAAJA,IAAI,GAAAQ,WAAA,cAAG/T,eAAe,CAACG,QAAQ,GAAA4T,WAAA;IAAAC,qBAAA,GAAAF,MAAA,CAC/BG,cAAc;IAAdA,cAAc,GAAAD,qBAAA,cAAGhU,eAAe,CAACE,QAAQ,GAAA8T,qBAAA;IACzCE,QAAQ,GAAAJ,MAAA,CAARI,QAAQ;IACRC,OAAO,GAAAL,MAAA,CAAPK,OAAO;IAAAC,oBAAA,GAAAN,MAAA,CACPpK,aAAa;IAAbA,aAAa,GAAA0K,oBAAA,cAAG,EAAiC,GAAAA,oBAAA;IAAAC,qBAAA,GAAAP,MAAA,CACjDQ,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IAAAE,qBAAA,GAAAT,MAAA,CACvB3L,gBAAgB;IAAhBA,gBAAgB,GAAAoM,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IACvBC,YAAY,GAAAV,MAAA,CAAZU,YAAY;EAEZ,IAAMzO,SAAS,GAAG0O,MAAY,CAA0B,EAAE,CAAC;EAC3D,IAAMC,0BAA0B,GAAGD,MAAY,CAA0B,EAAE,CAAC;EAC5E,IAAME,mBAAmB,GAAGF,MAAY,CAA0B,EAAE,CAAC;EACrE,IAAMG,cAAc,GAAGH,MAAY,CAAgC,IAAIzB,GAAG,EAAE,CAAC;EAC7E,IAAM6B,iBAAiB,GAAGJ,MAAY,CACpC,EAAE,CACH;EACD,IAAMK,0BAA0B,GAAGL,MAAY,CAA0B,EAAE,CAAC;EAC5E,IAAMM,uBAAuB,GAAGN,MAAY,CAE1C,EAAE,CAAC;EACL,IAAMO,cAAc,GAAGP,MAAY,CACjC,EAAE,CACH;EACD,IAAMQ,gBAAgB,GAAGR,MAAY,CACnC/K,aAAa,CACd;EACD,IAAMwL,SAAS,GAAGT,MAAY,CAAC,KAAK,CAAC;EACrC,IAAMU,aAAa,GAAGV,MAAY,CAAC,KAAK,CAAC;EACzC,IAAMW,eAAe,GAAGX,MAAY,EAAgB;EACpD,IAAMxO,qBAAqB,GAAGwO,MAAY,CAAC,EAAE,CAAC;EAC9C,IAAMY,0BAA0B,GAAGZ,MAAY,CAE7C,EAAE,CAAC;EACL,IAAMa,UAAU,GAAGb,MAAY,CAACN,OAAO,CAAC;EACxC,IAAMoB,WAAW,GAAGd,MAAY,CAACP,QAAQ,CAAC;EAC1C,IAAMsB,kBAAkB,GAAGf,MAAY,CACrC,IAAIzB,GAAG,EAAE,CACV;EACD,IAAMyC,OAAO,GAAGhB,MAAY,CAACnB,WAAW,CAACC,IAAI,CAAC,CAAC;EAC/C,IAAAmC,gBAAA,GAAkCD,OAAO,CAACrP,OAAO;IAAzCoN,UAAU,GAAAkC,gBAAA,CAAVlC,UAAU;IAAEnD,SAAS,GAAAqF,gBAAA,CAATrF,SAAS;EAC7B,IAAMsF,0BAA0B,GAAGnB,YAAY,KAAKxU,eAAe,CAACK,GAAG;EACvE,IAAAuV,SAAA,GAAkCC,QAAc,CAA0B;MACxEC,OAAO,EAAE,KAAK;MACdC,YAAY,EAAE,KAAK;MACnBpM,WAAW,EAAE,EAAE;MACf+G,WAAW,EAAE,KAAK;MAClBsF,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE,KAAK;MACzB9R,OAAO,EAAE,CAACmP,UAAU;MACpB9I,MAAM,EAAE;KACT,CAAC;IAAA0L,UAAA,GAAAvH,cAAA,CAAA+G,SAAA;IAXKS,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAY9B,IAAMG,gBAAgB,GAAG9B,MAAY,CAAgB;IACnDqB,OAAO,EAAE,CAACnC,cAAc;IACxBhK,WAAW,EAAE,CAACgK,cAAc;IAC5BsC,OAAO,EAAE,CAACtC,cAAc,IAAItD,SAAS;IACrC0F,YAAY,EAAE,CAACpC,cAAc;IAC7BuC,YAAY,EAAE,CAACvC,cAAc;IAC7BtP,OAAO,EAAE,CAACsP;GACX,CAAC;EACF,IAAM6C,YAAY,GAAG/B,MAAY,CAAC4B,SAAS,CAAC;EAC5C,IAAMI,WAAW,GAAGhC,MAAY,EAAgC;EAChE,IAAAiC,eAAA,GAGIjC,MAAY,CAACnB,WAAW,CAACW,cAAc,CAAC,CAAC,CAAC7N,OAAO;IAFzCmK,kBAAkB,GAAAmG,eAAA,CAA5BvG,QAAQ;IACIK,oBAAoB,GAAAkG,eAAA,CAAhCtG,UAAU;EAGZkF,UAAU,CAAClP,OAAO,GAAG+N,OAAO;EAC5BoB,WAAW,CAACnP,OAAO,GAAG8N,QAAQ;EAC9BsC,YAAY,CAACpQ,OAAO,GAAGiQ,SAAS;EAChCpQ,qBAAqB,CAACG,OAAO,GAAG+B,gBAAgB,GAC5C,EAAE,GACFlB,aAAa,CAAChB,qBAAqB,CAACG,OAAO,CAAC,GAC5CsM,WAAW,CAAChJ,aAAa,CAAC,GAC1BzD,qBAAqB,CAACG,OAAO;EAEjC,IAAMuQ,eAAe,GAAGC,WAAiB,CACvC,YAA6C;IAAA,IAA5CC,KAAA,GAAA3T,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAA0C,EAAE;IAC3C,IAAI,CAACgS,SAAS,CAAC9O,OAAO,EAAE;MACtBoQ,YAAY,CAACpQ,OAAO,GAAAc,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACf2M,YAAY,CAACpQ,OAAO,GACpByQ,KAAK,CACT;MACDP,YAAY,CAACE,YAAY,CAACpQ,OAAO,CAAC;;GAErC,EACD,EAAE,CACH;EAED,IAAM0Q,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA;IAAA,OACtBP,gBAAgB,CAACnQ,OAAO,CAAC2P,YAAY,IACrCY,eAAe,CAAC;MACdZ,YAAY,EAAE;KACf,CAAC;EAAA;EAEJ,IAAMgB,uBAAuB,GAAGH,WAAiB,CAC/C,UACE5Q,IAAqC,EACrC2E,KAA6B,EAOZ;IAAA,IANjBqM,YAAA,GAAA9T,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAA+B,KAAK;IAAA,IACpC2T,KAAA,GAAA3T,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAII,EAAE;IAAA,IACNmB,OAAiB,GAAAnB,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;IAEjB,IAAI8T,cAAc,GAChBD,YAAY,IACZxM,mBAAmB,CAAe;MAChCE,MAAM,EAAE8L,YAAY,CAACpQ,OAAO,CAACsE,MAAM;MACnCC,KAAK,EAALA,KAAK;MACL3E,IAAI,EAAJA,IAAI;MACJ4E,WAAW,EAAEoK,cAAc,CAAC5O,OAAO;MACnCyE,oBAAoB,EAAEkK,uBAAuB,CAAC3O;KAC/C,CAAC;IACJ,IAAM0E,aAAa,GAAGxH,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,CAAC;IAE5D,IAAI2E,KAAK,EAAE;MACTnD,KAAK,CAACwN,cAAc,CAAC5O,OAAO,EAAEJ,IAAI,CAAC;MACnCiR,cAAc,GACZA,cAAc,IACd,CAACnM,aAAa,IACd,CAAChC,SAAS,CAACgC,aAAa,EAAEH,KAAK,EAAE,IAAI,CAAC;MACxCtI,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,EAAE2E,KAAK,CAAC;KAC9C,MAAM;MACL,IAAIrH,IAAG,CAACyR,uBAAuB,CAAC3O,OAAO,EAAEJ,IAAI,CAAC,IAAIuP,WAAW,CAACnP,OAAO,EAAE;QACrE/D,GAAG,CAAC2S,cAAc,CAAC5O,OAAO,EAAEJ,IAAI,EAAE,IAAI,CAAC;QACvCiR,cAAc,GAAGA,cAAc,IAAInM,aAAa;;MAGlDtD,KAAK,CAACgP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,CAAC;;IAG1C,IACGiR,cAAc,IAAI,CAAC3V,iBAAiB,CAAC0V,YAAY,CAAC,IACnD,CAAC/P,aAAa,CAAC4P,KAAK,CAAC,IACrBN,gBAAgB,CAACnQ,OAAO,CAAC2P,YAAY,EACrC;MACAY,eAAe,CAAAzP,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACVgN,KAAK,GACJtB,WAAW,CAACnP,OAAO,GAAG;QAAE/B,OAAO,EAAE,CAAC,CAACA;MAAO,CAAE,GAAG,EAAE;QACrD0R,YAAY,EAAE;MAAK,GACnB;;GAEL,EACD,EAAE,CACH;EAED,IAAMmB,aAAa,GAAGN,WAAiB,CACrC,UAAC5Q,IAA6B,EAAEmR,QAAqC;IACnE,IAAAC,qBAAA,GAAyBrR,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAU;MAAjD5E,GAAG,GAAAgW,qBAAA,CAAHhW,GAAG;MAAE4C,OAAO,GAAAoT,qBAAA,CAAPpT,OAAO;IACpB,IAAMtE,KAAK,GACT+S,KAAK,IAAIhT,aAAa,CAAC2B,GAAG,CAAC,IAAIE,iBAAiB,CAAC6V,QAAQ,CAAC,GACtD,EAAE,GACFA,QAAQ;IAEd,IAAInS,YAAY,CAAC5D,GAAG,CAAC,EAAE;MACrB,CAAC4C,OAAO,IAAI,EAAE,EAAEsE,OAAO,CACrB,UAAA+O,MAAA;QAAA,IAAQC,QAAQ,GAAAD,MAAA,CAAbjW,GAAG;QAAA,OACHkW,QAAQ,CAAC7S,OAAO,GAAG6S,QAAQ,CAAC5X,KAAK,KAAKA,KAAK;MAAA,CAAC,CAChD;KACF,MAAM,IAAIyF,WAAW,CAAC/D,GAAG,CAAC,IAAI,CAAC4I,QAAQ,CAACtK,KAAK,CAAC,EAAE;MAC/C0B,GAAG,CAACsF,KAAK,GAAGhH,KAAiB;KAC9B,MAAM,IAAI2F,gBAAgB,CAACjE,GAAG,CAAC,EAAE;MAChCuD,kBAAA,CAAIvD,GAAG,CAAC4C,OAAO,EAAEsE,OAAO,CACtB,UAACiP,SAAS;QAAA,OACPA,SAAS,CAAC1S,QAAQ,GAAInF,KAAkB,CAACmT,QAAQ,CAChD0E,SAAS,CAAC7X,KAAK,CAChB;MAAA,CAAC,CACL;KACF,MAAM,IAAI0F,eAAe,CAAChE,GAAG,CAAC,IAAI4C,OAAO,EAAE;MAC1CA,OAAO,CAACtB,MAAM,GAAG,CAAC,GACdsB,OAAO,CAACsE,OAAO,CACb,UAAAkP,MAAA;QAAA,IAAQC,WAAW,GAAAD,MAAA,CAAhBpW,GAAG;QAAA,OACHqW,WAAW,CAAChT,OAAO,GAAGhD,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GACvC,CAAC,CAAEA,KAAY,CAAC6K,IAAI,CAClB,UAACtH,IAAY;UAAA,OAAKA,IAAI,KAAKwU,WAAW,CAAC/X,KAAK;QAAA,EAC7C,GACDA,KAAK,KAAK+X,WAAW,CAAC/X,KAAK;MAAA,CAAC,CACnC,GACAsE,OAAO,CAAC,CAAC,CAAC,CAAC5C,GAAG,CAACqD,OAAO,GAAG,CAAC,CAAC/E,KAAM;KACvC,MAAM;MACL0B,GAAG,CAAC1B,KAAK,GAAGA,KAAK;;GAEpB,EACD,EAAE,CACH;EAED,IAAMgY,WAAW,GAAGd,WAAiB,CACnC,UAAC5Q,IAAa,EAAE/C,IAAgB;IAC9B,IAAIsT,gBAAgB,CAACnQ,OAAO,CAAC0P,OAAO,EAAE;MACpC,IAAM6B,UAAU,GAAGC,SAAS,EAAE;MAE9B5R,IAAI,IAAI/C,IAAI,IAAIZ,GAAG,CAACsV,UAAU,EAAE3R,IAAI,EAAE/C,IAAI,CAAC;MAE3C,OAAO,CAAC6F,SAAS,CAAC6O,UAAU,EAAE1C,gBAAgB,CAAC7O,OAAO,CAAC;;IAGzD,OAAO,KAAK;GACb,EACD,EAAE,CACH;EAED,IAAMyR,sBAAsB,GAAGjB,WAAiB,CAC9C,UACE5Q,IAAqC,EAClB;IAAA,IAAnBgR,YAAY,GAAA9T,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;IAInB,IACEqT,gBAAgB,CAACnQ,OAAO,CAAC0P,OAAO,IAChCS,gBAAgB,CAACnQ,OAAO,CAACuD,WAAW,EACpC;MACA,IAAMmO,YAAY,GAAG,CAAChP,SAAS,CAC7BxF,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEJ,IAAI,CAAC,EACnCF,aAAa,CAACC,SAAS,EAAEC,IAAI,EAAEC,qBAAqB,CAAC,CACtD;MACD,IAAM8R,iBAAiB,GAAGzU,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,CAAC;MACrE,IAAMgS,eAAe,GAAGxB,YAAY,CAACpQ,OAAO,CAAC0P,OAAO;MAEpDgC,YAAY,GACRzV,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,EAAE,IAAI,CAAC,GACjDwB,KAAK,CAACgP,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,CAAC;MAEjD,IAAM6Q,KAAK,GAAG;QACZf,OAAO,EAAE4B,WAAW,EAAE;QACtB/N,WAAW,EAAE6M,YAAY,CAACpQ,OAAO,CAACuD;OACnC;MAED,IAAMsO,SAAS,GACZ1B,gBAAgB,CAACnQ,OAAO,CAAC0P,OAAO,IAC/BkC,eAAe,KAAKnB,KAAK,CAACf,OAAO,IAClCS,gBAAgB,CAACnQ,OAAO,CAACuD,WAAW,IACnCoO,iBAAiB,KAAKzU,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,CAAE;MAEtEiS,SAAS,IAAIjB,YAAY,IAAIL,eAAe,CAACE,KAAK,CAAC;MAEnD,OAAOoB,SAAS,GAAGpB,KAAK,GAAG,EAAE;;IAG/B,OAAO,EAAE;GACV,EACD,EAAE,CACH;EAED,IAAMqB,iBAAiB,GAAGtB,WAAiB;IAAA,IAAAuB,MAAA,GAAAvM,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACzC,SAAAsM,SACEpS,IAAqC,EACrCqS,YAA6B;MAAA,IAAA1N,KAAA;MAAA,OAAAkB,mBAAA,GAAAkC,IAAA,UAAAuK,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAArK,IAAA,GAAAqK,SAAA,CAAApK,IAAA;UAAA;YAAA,MAEzBqK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY;cAAAH,SAAA,CAAApK,IAAA;cAAA;YAAA;YAAA,IAClCpI,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC;cAAAuS,SAAA,CAAApK,IAAA;cAAA;YAAA;YAC1BwK,OAAO,CAACC,IAAI,CAAC,6CAA6C,EAAE5S,IAAI,CAAC;YAAC,OAAAuS,SAAA,CAAA9J,MAAA,WAC3D,KAAK;UAAA;YAAA8J,SAAA,CAAApK,IAAA;YAAA,OAKRzC,aAAa,CACjB3F,SAAS,EACT4P,0BAA0B,EAC1B5P,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAU,EAChCC,qBAAqB,CACtB;UAAA;YAAAsS,SAAA,CAAAM,EAAA,GACD7S,IAAI;YAPA2E,KAAK,GAAA4N,SAAA,CAAA5J,IAAA,CAAA4J,SAAA,CAAAM,EAAA;YASX9B,uBAAuB,CAAC/Q,IAAI,EAAE2E,KAAK,EAAE0N,YAAY,CAAC;YAAC,OAAAE,SAAA,CAAA9J,MAAA,WAE5CrL,WAAW,CAACuH,KAAK,CAAC;UAAA;UAAA;YAAA,OAAA4N,SAAA,CAAAzJ,IAAA;QAAA;MAAA,GAAAsJ,QAAA;IAAA,CAC1B;IAAA,iBAAAU,GAAA,EAAAC,GAAA;MAAA,OAAAZ,MAAA,CAAAhJ,KAAA,OAAAjM,SAAA;IAAA;EAAA,KACD,CAAC6T,uBAAuB,EAAEpB,0BAA0B,CAAC,CACtD;EAED,IAAMqD,iCAAiC,GAAGpC,WAAiB;IAAA,IAAAqC,MAAA,GAAArN,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACzD,SAAAoN,SACEhI,KAEqC;MAAA,IAAAiI,qBAAA,EAAAzO,MAAA,EAAA0O,mBAAA,EAAAC,aAAA,EAAAC,MAAA;MAAA,OAAAzN,mBAAA,GAAAkC,IAAA,UAAAwL,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAtL,IAAA,GAAAsL,SAAA,CAAArL,IAAA;UAAA;YAAAqL,SAAA,CAAArL,IAAA;YAAA,OAEZoH,WAAW,CAACnP,OAAQ,CAC3CwR,SAAS,EAAE,EACXtC,UAAU,CAAClP,OAAO,EAClBuP,0BAA0B,CAC3B;UAAA;YAAAwD,qBAAA,GAAAK,SAAA,CAAA7K,IAAA;YAJOjE,MAAM,GAAAyO,qBAAA,CAANzO,MAAM;YAKR0O,mBAAmB,GAAG5C,YAAY,CAACpQ,OAAO,CAAC/B,OAAO;YAAA,KAEpD5C,KAAK,CAACC,OAAO,CAACwP,KAAK,CAAC;cAAAsI,SAAA,CAAArL,IAAA;cAAA;YAAA;YAChBkL,aAAa,GAAGnI,KAAK,CACxBpM,GAAG,CAAC,UAACkB,IAAI;cACR,IAAM2E,KAAK,GAAGrH,IAAG,CAACoH,MAAM,EAAE1E,IAAI,CAAC;cAE/B2E,KAAK,GACDtI,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,EAAE2E,KAAK,CAAC,GAC7CnD,KAAK,CAACgP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,CAAC;cAE5C,OAAO,CAAC2E,KAAK;aACd,CAAC,CACD8O,KAAK,CAACzX,OAAO,CAAC;YAEjB2U,eAAe,CAAC;cACdtS,OAAO,EAAE4C,aAAa,CAACyD,MAAM,CAAC;cAC9BqL,YAAY,EAAE;aACf,CAAC;YAAC,OAAAyD,SAAA,CAAA/K,MAAA,WAEI4K,aAAa;UAAA;YAEd1O,MAAK,GAAGrH,IAAG,CAACoH,MAAM,EAAEwG,KAAK,CAAC;YAEhC6F,uBAAuB,CACrB7F,KAAK,EACLvG,MAAK,EACLyO,mBAAmB,KAAKnS,aAAa,CAACyD,MAAM,CAAC,EAC7C,EAAE,EACFzD,aAAa,CAACyD,MAAM,CAAC,CACtB;YAAC,OAAA8O,SAAA,CAAA/K,MAAA,WAEK,CAAC9D,MAAK;UAAA;UAAA;YAAA,OAAA6O,SAAA,CAAA1K,IAAA;QAAA;MAAA,GAAAoK,QAAA;IAAA,CAEhB;IAAA,iBAAAQ,GAAA;MAAA,OAAAT,MAAA,CAAA9J,KAAA,OAAAjM,SAAA;IAAA;EAAA,KACD,CAAC6T,uBAAuB,EAAEpB,0BAA0B,CAAC,CACtD;EAED,IAAMgE,OAAO,GAAG/C,WAAiB;IAAA,IAAAgD,MAAA,GAAAhO,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAC/B,SAAA+N,SACE7T,IAA0D;MAAA,IAAApC,MAAA,EAAAH,MAAA;MAAA,OAAAoI,mBAAA,GAAAkC,IAAA,UAAA+L,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA7L,IAAA,GAAA6L,SAAA,CAAA5L,IAAA;UAAA;YAEpDvK,MAAM,GAAGoC,IAAI,IAAIkB,MAAM,CAACC,IAAI,CAACpB,SAAS,CAACK,OAAO,CAAC;YAErD0Q,kBAAkB,EAAE;YAAC,KAEjBvB,WAAW,CAACnP,OAAO;cAAA2T,SAAA,CAAA5L,IAAA;cAAA;YAAA;YAAA,OAAA4L,SAAA,CAAAtL,MAAA,WACduK,iCAAiC,CAACpV,MAAM,CAAC;UAAA;YAAA,KAG9CnC,KAAK,CAACC,OAAO,CAACkC,MAAM,CAAC;cAAAmW,SAAA,CAAA5L,IAAA;cAAA;YAAA;YACvB,CAACnI,IAAI,KAAKwQ,YAAY,CAACpQ,OAAO,CAACsE,MAAM,GAAG,EAAE,CAAC;YAACqP,SAAA,CAAA5L,IAAA;YAAA,OACvB6L,OAAO,CAAC3Z,GAAG,CAC9BuD,MAAM,CAACkB,GAAG;cAAA,IAAAmV,MAAA,GAAArO,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAoO,SAAOjX,IAAI;gBAAA,OAAA4I,mBAAA,GAAAkC,IAAA,UAAAoM,UAAAC,SAAA;kBAAA,kBAAAA,SAAA,CAAAlM,IAAA,GAAAkM,SAAA,CAAAjM,IAAA;oBAAA;sBAAAiM,SAAA,CAAAjM,IAAA;sBAAA,OAAW+J,iBAAiB,CAACjV,IAAI,EAAE,IAAI,CAAC;oBAAA;sBAAA,OAAAmX,SAAA,CAAA3L,MAAA,WAAA2L,SAAA,CAAAzL,IAAA;oBAAA;oBAAA;sBAAA,OAAAyL,SAAA,CAAAtL,IAAA;kBAAA;gBAAA,GAAAoL,QAAA;cAAA;cAAA,iBAAAG,GAAA;gBAAA,OAAAJ,MAAA,CAAA9K,KAAA,OAAAjM,SAAA;cAAA;YAAA,IAAC,CAChE;UAAA;YAFKO,MAAM,GAAAsW,SAAA,CAAApL,IAAA;YAGZgI,eAAe,CAAC;cACdZ,YAAY,EAAE;aACf,CAAC;YAAC,OAAAgE,SAAA,CAAAtL,MAAA,WACIhL,MAAM,CAACgW,KAAK,CAACzX,OAAO,CAAC;UAAA;YAAA+X,SAAA,CAAA5L,IAAA;YAAA,OAGjB+J,iBAAiB,CAACtU,MAAM,CAAC;UAAA;YAAA,OAAAmW,SAAA,CAAAtL,MAAA,WAAAsL,SAAA,CAAApL,IAAA;UAAA;UAAA;YAAA,OAAAoL,SAAA,CAAAjL,IAAA;QAAA;MAAA,GAAA+K,QAAA;IAAA,CACvC;IAAA,iBAAAS,GAAA;MAAA,OAAAV,MAAA,CAAAzK,KAAA,OAAAjM,SAAA;IAAA;EAAA,KACD,CAAC8V,iCAAiC,EAAEd,iBAAiB,CAAC,CACvD;EAED,IAAMqC,iBAAiB,GAAG3D,WAAiB,CACzC,UACE5Q,IAA6B,EAC7BtG,KAAkC,EAAA8a,MAAA,EACa;IAAA,IAA7CC,WAAW,GAAAD,MAAA,CAAXC,WAAW;MAAEC,cAAc,GAAAF,MAAA,CAAdE,cAAc;IAE7B,IAAMzX,IAAI,GAAG,EAAE;IACfZ,GAAG,CAACY,IAAI,EAAE+C,IAAI,EAAEtG,KAAK,CAAC;IAAC,IAAAib,UAAA,GAAA/I,0BAAA,CAECxC,OAAO,CAACpJ,IAAI,EAAEtG,KAAK,CAAC;MAAAkb,MAAA;IAAA;MAA5C,KAAAD,UAAA,CAAA7I,CAAA,MAAA8I,MAAA,GAAAD,UAAA,CAAA5I,CAAA,IAAAC,IAAA,GAA8C;QAAA,IAAnCpC,SAAS,GAAAgL,MAAA,CAAAlb,KAAA;QAClB,IAAIqG,SAAS,CAACK,OAAO,CAACwJ,SAAS,CAAC,EAAE;UAChCsH,aAAa,CAACtH,SAAS,EAAEtM,IAAG,CAACL,IAAI,EAAE2M,SAAS,CAAC,CAAC;UAC9C6K,WAAW,IAAI5C,sBAAsB,CAACjI,SAAS,CAAC;UAChD8K,cAAc,IAAIf,OAAO,CAAC/J,SAAoC,CAAC;;;IAElE,SAAAqC,GAAA;MAAA0I,UAAA,CAAAzI,CAAA,CAAAD,GAAA;IAAA;MAAA0I,UAAA,CAAAxI,CAAA;IAAA;GACF,EACD,CAACwH,OAAO,EAAEzC,aAAa,EAAEW,sBAAsB,CAAC,CACjD;EAED,IAAMgD,gBAAgB,GAAGjE,WAAiB,CACxC,UACE5Q,IAA6B,EAC7BtG,KAAkC,EAClCob,MAAsB;IAEtB,CAAC3S,gBAAgB,IACf,CAACI,WAAW,CAAC7I,KAAK,CAAC,IACnB2C,GAAG,CACD4D,qBAAqB,CAACG,OAAO,EAC7BJ,IAAI,EACJvE,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAAiF,kBAAA,CAAOjF,KAAK,IAACwH,MAAA,CAAA2C,MAAA,KAAQnK,KAAK,CAAE,CACjD;IAEH,IAAIqG,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC,EAAE;MAC3BkR,aAAa,CAAClR,IAAI,EAAEtG,KAAK,CAAC;MAC1Bob,MAAM,CAACL,WAAW,IAAI5C,sBAAsB,CAAC7R,IAAI,CAAC;MAClD8U,MAAM,CAACJ,cAAc,IAAIf,OAAO,CAAC3T,IAAW,CAAC;KAC9C,MAAM,IAAI,CAACuC,WAAW,CAAC7I,KAAK,CAAC,EAAE;MAC9B6a,iBAAiB,CAACvU,IAAI,EAAEtG,KAAK,EAAEob,MAAM,CAAC;MAEtC,IAAItF,kBAAkB,CAACpP,OAAO,CAAC2U,GAAG,CAAC/U,IAAI,CAAC,EAAE;QACxC,IAAM4D,UAAU,GAAGgH,uBAAiB,CAAC5K,IAAI,CAAC,IAAIA,IAAI;QAClD3D,GAAG,CAACqS,0BAA0B,CAACtO,OAAO,EAAEJ,IAAI,EAAEtG,KAAK,CAAC;QAEpD2V,0BAA0B,CAACjP,OAAO,CAACwD,UAAU,CAAC,CAAAE,eAAA,KAC3CF,UAAU,EAAGtG,IAAG,CAACoR,0BAA0B,CAACtO,OAAO,EAAEwD,UAAU,CAAC,EACjB;QAElD,IACE,CAAC2M,gBAAgB,CAACnQ,OAAO,CAAC0P,OAAO,IAC/BS,gBAAgB,CAACnQ,OAAO,CAACuD,WAAW,KACtCmR,MAAM,CAACL,WAAW,EAClB;UACApY,GAAG,CACDmU,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAChC3D,IAAI,EACJ+D,wBAAwB,CACtBrK,KAAK,EACL4D,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEJ,IAAI,EAAE,EAAE,CAAC,EACvC1C,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,EAAE,EAAE,CAAC,CAChD,CACF;UAED2Q,eAAe,CAAC;YACdb,OAAO,EAAE,CAAChN,SAAS,CAAA5B,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACZ+N,SAAS,EAAE,GAAA9N,eAAA,KAAG9D,IAAI,EAAGtG,KAAK,IAC/BuV,gBAAgB,CAAC7O,OAAO;WAE3B,CAAC;;;;IAKR,CAAC+B,gBAAgB,IAAI9F,GAAG,CAAC4D,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,EAAEtG,KAAK,CAAC;GACrE,EACD,CAACmY,sBAAsB,EAAEX,aAAa,EAAEqD,iBAAiB,CAAC,CAC3D;EAED,IAAMS,cAAc,GAAG,SAAjBA,cAAcA,CAAuChV,IAAO;IAAA,OAChEmP,aAAa,CAAC/O,OAAO,IACrBwO,cAAc,CAACxO,OAAO,CAAC2U,GAAG,CAAC/U,IAAI,CAAC,IAChC4O,cAAc,CAACxO,OAAO,CAAC2U,GAAG,CAAC,CAAC/U,IAAI,CAACiV,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EAAA;EAE1D,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CACvBlV,IAAO;IAEP,IAAImV,KAAK,GAAG,IAAI;IAEhB,IAAI,CAAClU,aAAa,CAAC4N,iBAAiB,CAACzO,OAAO,CAAC,EAAE;MAC7C,KAAK,IAAMxD,GAAG,IAAIiS,iBAAiB,CAACzO,OAAO,EAAE;QAC3C,IACE,CAACJ,IAAI,IACL,CAAC6O,iBAAiB,CAACzO,OAAO,CAACxD,GAAG,CAAC,CAACwY,IAAI,IACpCvG,iBAAiB,CAACzO,OAAO,CAACxD,GAAG,CAAC,CAACmY,GAAG,CAAC/U,IAAI,CAAC,IACxC6O,iBAAiB,CAACzO,OAAO,CAACxD,GAAG,CAAC,CAACmY,GAAG,CAACnK,uBAAiB,CAAC5K,IAAI,CAAC,CAAC,EAC3D;UACA8O,0BAA0B,CAAC1O,OAAO,CAACxD,GAAG,CAAC,EAAE;UACzCuY,KAAK,GAAG,KAAK;;;;IAKnB,OAAOA,KAAK;GACb;EAED,SAASE,QAAQA,CACfrV,IAA6B,EAC7BtG,KAAkC,EAClCob,MAAuB;IAEvBD,gBAAgB,CAAC7U,IAAI,EAAEtG,KAAK,EAAEob,MAAM,IAAI,EAAE,CAAC;IAC3CE,cAAc,CAAChV,IAAI,CAAC,IAAI2Q,eAAe,EAAE;IACzCuE,mBAAmB,CAAClV,IAAI,CAAC;;EAG3BoP,eAAe,CAAChP,OAAO,GAAGgP,eAAe,CAAChP,OAAO,GAC7CgP,eAAe,CAAChP,OAAO;IAAA,IAAAkV,MAAA,GAAA1P,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACvB,SAAAyP,SAAAC,MAAA;MAAA,IAAAtW,IAAA,EAAAuD,MAAA,EAAAzC,IAAA,EAAAlC,KAAA,EAAA6G,KAAA,EAAAtG,OAAA,EAAAoM,WAAA,EAAAgL,oBAAA,EAAA5E,KAAA,EAAAG,YAAA,EAAA0E,sBAAA,EAAAhR,MAAA,EAAA0O,mBAAA,EAAAuC,cAAA,EAAAC,YAAA;MAAA,OAAA/P,mBAAA,GAAAkC,IAAA,UAAA8N,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAA5N,IAAA,GAAA4N,SAAA,CAAA3N,IAAA;UAAA;YAASjJ,IAAI,GAAAsW,MAAA,CAAJtW,IAAI,EAAEuD,MAAM,GAAA+S,MAAA,CAAN/S,MAAM;YACfzC,IAAI,GAAIyC,MAAe,CAACzC,IAAI;YAC1BlC,KAAK,GAAGiC,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC;YAAA,KAIjClC,KAAK;cAAAgY,SAAA,CAAA3N,IAAA;cAAA;YAAA;YACDsC,WAAW,GAAGvL,IAAI,KAAKtF,MAAM,CAACC,IAAI;YAClC4b,oBAAoB,GAAGxL,cAAc,CAAA/I,MAAA,CAAA2C,MAAA;cACzC4G,WAAW,EAAXA,WAAW;cACXD,oBAAoB,EAApBA,oBAAoB;cACpBD,kBAAkB,EAAlBA,kBAAkB;cAClBD,SAAS,EAAE,CAAC,CAAChN,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,EAAEjQ,IAAI,CAAC;cACpD0K,WAAW,EAAE8F,YAAY,CAACpQ,OAAO,CAACsK;YAAW,GAC1C+E,OAAO,CAACrP,OAAO,EAClB;YACEyQ,KAAK,GAAGgB,sBAAsB,CAAC7R,IAAI,EAAE,KAAK,CAAC;YAC3CgR,YAAY,GACd,CAAC/P,aAAa,CAAC4P,KAAK,CAAC,IACpB,CAACpG,WAAW,IAAIuK,cAAc,CAAChV,IAA+B,CAAE;YAEnE,IACEyK,WAAW,IACX,CAACnN,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,EAAEjQ,IAAI,CAAC,IACxCuQ,gBAAgB,CAACnQ,OAAO,CAAC6P,OAAO,EAChC;cACA5T,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,EAAEjQ,IAAI,EAAE,IAAI,CAAC;cAC7C6Q,KAAK,GAAA3P,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACAgN,KAAK;gBACRZ,OAAO,EAAEO,YAAY,CAACpQ,OAAO,CAAC6P;cAAO,EACtC;;YAGH,IAAI,CAAC9N,gBAAgB,IAAI/C,eAAe,CAACqD,MAAa,CAAC,EAAE;cACvDpG,GAAG,CACD4D,qBAAqB,CAACG,OAAO,EAC7BJ,IAAI,EACJF,aAAa,CAACC,SAAS,EAAEC,IAAI,CAAC,CAC/B;;YACF,KAEGyV,oBAAoB;cAAAK,SAAA,CAAA3N,IAAA;cAAA;YAAA;YACtB,CAACsC,WAAW,IAAIyK,mBAAmB,CAAClV,IAAI,CAAC;YAAC,OAAA8V,SAAA,CAAArN,MAAA,WAExC,CAAC,CAACxH,aAAa,CAAC4P,KAAK,CAAC,IACnBG,YAAY,IAAI/P,aAAa,CAAC4P,KAAK,CAAE,KACxCF,eAAe,CAACE,KAAK,CAAC;UAAA;YAI1BC,kBAAkB,EAAE;YAAC,KAEjBvB,WAAW,CAACnP,OAAO;cAAA0V,SAAA,CAAA3N,IAAA;cAAA;YAAA;YAAA2N,SAAA,CAAA3N,IAAA;YAAA,OACIoH,WAAW,CAACnP,OAAO,CAC1CwR,SAAS,EAAE,EACXtC,UAAU,CAAClP,OAAO,EAClBuP,0BAA0B,CAC3B;UAAA;YAAA+F,sBAAA,GAAAI,SAAA,CAAAnN,IAAA;YAJOjE,MAAM,GAAAgR,sBAAA,CAANhR,MAAM;YAKR0O,mBAAmB,GAAG5C,YAAY,CAACpQ,OAAO,CAAC/B,OAAO;YACxDsG,KAAK,GAAGrH,IAAG,CAACoH,MAAM,EAAE1E,IAAI,CAAC;YAEzB,IACEZ,eAAe,CAACqD,MAAa,CAAC,IAC9B,CAACkC,KAAK,IACN4K,WAAW,CAACnP,OAAO,EACnB;cACMuV,cAAc,GAAG/K,uBAAiB,CAAC5K,IAAI,CAAC;cACxC4V,YAAY,GAAGtY,IAAG,CAACoH,MAAM,EAAEiR,cAAc,EAAE,EAAE,CAAC;cACpDC,YAAY,CAAC1W,IAAI,IACf0W,YAAY,CAACzQ,OAAO,KACnBR,KAAK,GAAGiR,YAAY,CAAC;cAExB,IACED,cAAc,KACbC,YAAY,IACXtY,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAEiR,cAAc,CAAC,CAAC,EACnD;gBACA3V,IAAI,GAAG2V,cAAc;;;YAIzBtX,OAAO,GAAG4C,aAAa,CAACyD,MAAM,CAAC;YAE/B0O,mBAAmB,KAAK/U,OAAO,KAAK2S,YAAY,GAAG,IAAI,CAAC;YAAC8E,SAAA,CAAA3N,IAAA;YAAA;UAAA;YAAA2N,SAAA,CAAA3N,IAAA;YAAA,OAGjDzC,aAAa,CACjB3F,SAAS,EACT4P,0BAA0B,EAC1B7R,KAAK,EACLmC,qBAAqB,CACtB;UAAA;YAAA6V,SAAA,CAAAjD,EAAA,GACD7S,IAAI;YAPN2E,KAAK,GAAAmR,SAAA,CAAAnN,IAAA,CAAAmN,SAAA,CAAAjD,EAAA;UAAA;YAUP,CAACpI,WAAW,IAAIyK,mBAAmB,CAAClV,IAAI,CAAC;YACzC+Q,uBAAuB,CAAC/Q,IAAI,EAAE2E,KAAK,EAAEqM,YAAY,EAAEH,KAAK,EAAExS,OAAO,CAAC;UAAC;UAAA;YAAA,OAAAyX,SAAA,CAAAhN,IAAA;QAAA;MAAA,GAAAyM,QAAA;IAAA,CAEtE;IAAA,iBAAAQ,IAAA;MAAA,OAAAT,MAAA,CAAAnM,KAAA,OAAAjM,SAAA;IAAA;EAAA;EAEL,SAAS8Y,0BAA0BA,CAAwB/Y,IAAO;IAChE,IAAI,CAACkF,gBAAgB,EAAE;MACrB,IAAIwK,IAAI,GAAGD,WAAW,CAACzP,IAAI,CAAC;MAAC,IAAAgZ,UAAA,GAAArK,0BAAA,CAET4D,kBAAkB,CAACpP,OAAO;QAAA8V,MAAA;MAAA;QAA9C,KAAAD,UAAA,CAAAnK,CAAA,MAAAoK,MAAA,GAAAD,UAAA,CAAAlK,CAAA,IAAAC,IAAA,GAAgD;UAAA,IAArCtS,KAAK,GAAAwc,MAAA,CAAAxc,KAAA;UACd,IAAIkC,KAAK,CAAClC,KAAK,CAAC,IAAI,CAACiT,IAAI,CAACjT,KAAK,CAAC,EAAE;YAChCiT,IAAI,GAAAzL,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACC8I,IAAI,GAAA7I,eAAA,KACNpK,KAAK,EAAG,EAAE,EACZ;;;MAEJ,SAAAuS,GAAA;QAAAgK,UAAA,CAAA/J,CAAA,CAAAD,GAAA;MAAA;QAAAgK,UAAA,CAAA9J,CAAA;MAAA;MAED,OAAOQ,IAAI;;IAEb,OAAO1P,IAAI;;EAYb,SAAS2U,SAASA,CAACuE,OAA2B;IAC5C,IAAInS,QAAQ,CAACmS,OAAO,CAAC,EAAE;MACrB,OAAOrW,aAAa,CAACC,SAAS,EAAEoW,OAAO,EAAElW,qBAAqB,CAAC;;IAGjE,IAAIxE,KAAK,CAACC,OAAO,CAACya,OAAO,CAAC,EAAE;MAC1B,IAAMlZ,IAAI,GAAG,EAAE;MAAC,IAAAmZ,UAAA,GAAAxK,0BAAA,CAEGuK,OAAO;QAAAE,MAAA;MAAA;QAA1B,KAAAD,UAAA,CAAAtK,CAAA,MAAAuK,MAAA,GAAAD,UAAA,CAAArK,CAAA,IAAAC,IAAA,GAA4B;UAAA,IAAjBhM,KAAI,GAAAqW,MAAA,CAAA3c,KAAA;UACb2C,GAAG,CAACY,IAAI,EAAE+C,KAAI,EAAEF,aAAa,CAACC,SAAS,EAAEC,KAAI,EAAEC,qBAAqB,CAAC,CAAC;;MACvE,SAAAgM,GAAA;QAAAmK,UAAA,CAAAlK,CAAA,CAAAD,GAAA;MAAA;QAAAmK,UAAA,CAAAjK,CAAA;MAAA;MAED,OAAOlP,IAAI;;IAGb,OAAO+Y,0BAA0B,CAC/B/R,eAAe,CACblE,SAAS,EACT2M,WAAW,CAACzM,qBAAqB,CAACG,OAAO,CAAC,EAC1C+B,gBAAgB,CACjB,CACF;;EAGH,IAAMmU,gBAAgB,GAAG1F,WAAiB,eAAAhL,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACxC,SAAAyQ,SAAA;IAAA,IAAA7W,MAAA;MAAA8W,gBAAA;MAAAC,MAAA;MAAA/R,MAAA;MAAArG,OAAA;MAAAqY,MAAA,GAAAxZ,SAAA;IAAA,OAAA2I,mBAAA,GAAAkC,IAAA,UAAA4O,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA1O,IAAA,GAAA0O,SAAA,CAAAzO,IAAA;QAAA;UAAOzI,MAAM,GAAAgX,MAAA,CAAAha,MAAA,QAAAga,MAAA,QAAAvZ,SAAA,GAAAuZ,MAAA,MAAG,EAAE;UACVF,gBAAgB,GAAGvV,aAAa,CAAClB,SAAS,CAACK,OAAO,CAAC,GACrD6O,gBAAgB,CAAC7O,OAAO,GACxB,EAAE;UAAAwW,SAAA,CAAAzO,IAAA;UAAA,OAGGoH,WAAW,CAACnP,OAAQ,CAAAc,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KAEpB2S,gBAAgB,GAChB5E,SAAS,EAAE,GACXlS,MAAM,GAEX4P,UAAU,CAAClP,OAAO,EAClBuP,0BAA0B,CAC3B;QAAA;UAAAiH,SAAA,CAAA/D,EAAA,GAAA+D,SAAA,CAAAjO,IAAA;UAAA,IAAAiO,SAAA,CAAA/D,EAAA;YAAA+D,SAAA,CAAAzO,IAAA;YAAA;UAAA;UAAAyO,SAAA,CAAA/D,EAAA,GAAK,EAAE;QAAA;UAAA4D,MAAA,GAAAG,SAAA,CAAA/D,EAAA;UATFnO,MAAM,GAAA+R,MAAA,CAAN/R,MAAM;UAURrG,OAAO,GAAG4C,aAAa,CAACyD,MAAM,CAAC;UAErC8L,YAAY,CAACpQ,OAAO,CAAC/B,OAAO,KAAKA,OAAO,IACtCsS,eAAe,CAAC;YACdtS,OAAO,EAAPA;WACD,CAAC;QAAC;QAAA;UAAA,OAAAuY,SAAA,CAAA9N,IAAA;MAAA;IAAA,GAAAyN,QAAA;EAAA,CACN,IACD,CAAC5G,0BAA0B,CAAC,CAC7B;EAED,IAAMkH,wBAAwB,GAAGjG,WAAiB,CAChD,UAAC9S,KAAY,EAAEsE,WAAqB;IAClCF,iCAAiC,CAC/BnC,SAAS,EACTqP,eAAe,CAAChP,OAAQ,EACxBtC,KAAK,EACLmC,qBAAqB,EACrBkC,gBAAgB,EAChBC,WAAW,CACZ;IAED,IAAID,gBAAgB,EAAE;MACpBX,KAAK,CAACwN,cAAc,CAAC5O,OAAO,EAAEtC,KAAK,CAAC1C,GAAG,CAAC4E,IAAI,CAAC;MAC7CwB,KAAK,CAACuN,uBAAuB,CAAC3O,OAAO,EAAEtC,KAAK,CAAC1C,GAAG,CAAC4E,IAAI,CAAC;;GAEzD,EACD,CAACmC,gBAAgB,CAAC,CACnB;EAED,IAAM2U,kBAAkB,GAAGlG,WAAiB,CAAC,UAAC5Q,IAAY;IACxD,IAAImP,aAAa,CAAC/O,OAAO,EAAE;MACzBuQ,eAAe,EAAE;KAClB,MAAM;MAAA,IAAAoG,UAAA,GAAAnL,0BAAA,CACoBgD,cAAc,CAACxO,OAAO;QAAA4W,MAAA;MAAA;QAA/C,KAAAD,UAAA,CAAAjL,CAAA,MAAAkL,MAAA,GAAAD,UAAA,CAAAhL,CAAA,IAAAC,IAAA,GAAiD;UAAA,IAAtCiL,UAAU,GAAAD,MAAA,CAAAtd,KAAA;UACnB,IAAIud,UAAU,CAAC3S,UAAU,CAACtE,IAAI,CAAC,EAAE;YAC/B2Q,eAAe,EAAE;YACjB;;;MAEH,SAAA1E,GAAA;QAAA8K,UAAA,CAAA7K,CAAA,CAAAD,GAAA;MAAA;QAAA8K,UAAA,CAAA5K,CAAA;MAAA;MAED+I,mBAAmB,CAAClV,IAAI,CAAC;;GAE5B,EAAE,EAAE,CAAC;EAEN,IAAMsL,8BAA8B,GAAGsF,WAAiB,CACtD,UAAC9S,KAAa,EAAEsE,WAAqB;IACnC,IAAItE,KAAK,EAAE;MACT+Y,wBAAwB,CAAC/Y,KAAK,EAAEsE,WAAW,CAAC;MAE5C,IAAID,gBAAgB,IAAI,CAACrG,OAAO,CAACgC,KAAK,CAACE,OAAO,IAAI,EAAE,CAAC,CAACtB,MAAM,EAAE;QAC5D8E,KAAK,CAACgP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE5G,KAAK,CAAC1C,GAAG,CAAC4E,IAAI,CAAC;QAClD3D,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE7F,KAAK,CAAC1C,GAAG,CAAC4E,IAAI,EAAE,IAAI,CAAC;QAE3D2Q,eAAe,CAAC;UACdb,OAAO,EAAE4B,WAAW;SACrB,CAAC;QAEFnB,gBAAgB,CAACnQ,OAAO,CAAC/B,OAAO,IAC9BkR,WAAW,CAACnP,OAAO,IACnBkW,gBAAgB,EAAE;QACpBQ,kBAAkB,CAAChZ,KAAK,CAAC1C,GAAG,CAAC4E,IAAI,CAAC;;;GAGvC,EACD,CAACsW,gBAAgB,EAAEO,wBAAwB,CAAC,CAC7C;EAED,SAASK,WAAWA,CAClBlX,IAA0D;IAE1DA,IAAI,IACF,CAACvE,KAAK,CAACC,OAAO,CAACsE,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC,EAAEsC,OAAO,CAAC,UAAC6U,SAAS;MAAA,OACtDpX,SAAS,CAACK,OAAO,CAAC+W,SAAS,CAAC,IAAIvb,KAAK,CAACub,SAAS,CAAC,GAC5C,OAAO3G,YAAY,CAACpQ,OAAO,CAACsE,MAAM,CAACyS,SAAS,CAAC,GAC7C3V,KAAK,CAACgP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAEyS,SAAS,CAAC;IAAA,EAClD;IAEHxG,eAAe,CAAC;MACdjM,MAAM,EAAE1E,IAAI,GAAGwQ,YAAY,CAACpQ,OAAO,CAACsE,MAAM,GAAG;KAC9C,CAAC;;EAGJ,SAAS0S,QAAQA,CAACpX,IAA6B,EAAE2E,KAAkB;IACjE,IAAMvJ,GAAG,GAAG,CAAC2E,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC,IAAI,EAAE,EAAG5E,GAAG;IAEhDiB,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,EAAAkB,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KAChCc,KAAK;MACRvJ,GAAG,EAAHA;IAAG,GACH;IAEFuV,eAAe,CAAC;MACdtS,OAAO,EAAE;KACV,CAAC;IAEFsG,KAAK,CAAC0S,WAAW,IAAIjc,GAAG,IAAIA,GAAG,CAAC2C,KAAK,IAAI3C,GAAG,CAAC2C,KAAK,EAAE;;EAGtD,IAAMuZ,aAAa,GAAG1G,WAAiB,CACrC,UAAI2G,UAA8B,EAAE/Z,YAAgB,EAAEga,OAAgB;IACpE,IAAM3N,WAAW,GAAG2N,OAAO,GACvB3I,iBAAiB,CAACzO,OAAO,CAACoX,OAAO,CAAC,GAClC5I,cAAc,CAACxO,OAAO;IAC1B,IAAIuJ,WAAW,GAAG1F,eAAe,CAC/BlE,SAAS,EACT2M,WAAW,CAACzM,qBAAqB,CAACG,OAAO,CAAC,EAC1C+B,gBAAgB,EAChB,KAAK,EACLoV,UAAU,CACX;IAED,IAAIvT,QAAQ,CAACuT,UAAU,CAAC,EAAE;MACxB,IAAM5B,cAAc,GAAG/K,uBAAiB,CAAC2M,UAAU,CAAC,IAAIA,UAAU;MAElE,IAAI/H,kBAAkB,CAACpP,OAAO,CAAC2U,GAAG,CAACY,cAAc,CAAC,EAAE;QAClDhM,WAAW,GAAAzI,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACN8K,mBAAmB,CAACvO,OAAO,GAC3BuJ,WAAW,CACf;;MAGH,OAAOD,iBAAiB,CACtBC,WAAW,EACX4N,UAAU,EACV1N,WAAW,EACXzM,WAAW,CAACE,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEmX,UAAU,CAAC,CAAC,GAClD/Z,YAAY,GACZF,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEmX,UAAU,CAAC,EAC7C,IAAI,CACL;;IAGH,IAAME,qBAAqB,GAAGra,WAAW,CAACI,YAAY,CAAC,GACnDyR,gBAAgB,CAAC7O,OAAO,GACxB5C,YAAY;IAEhB,IAAI/B,KAAK,CAACC,OAAO,CAAC6b,UAAU,CAAC,EAAE;MAC7B,OAAOA,UAAU,CAAC7Z,MAAM,CACtB,UAACa,QAAQ,EAAEyB,IAAI;QAAA,OAAAkB,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACVtF,QAAQ,GAAAuF,eAAA,KACV9D,IAAI,EAAG0J,iBAAiB,CACvBC,WAAW,EACX3J,IAAI,EACJ6J,WAAW,EACX4N,qBAEC,CACF;MAAA,CACD,EACF,EAAE,CACH;;IAGHtI,aAAa,CAAC/O,OAAO,GAAGhD,WAAW,CAACoa,OAAO,CAAC;IAE5C,OAAOxa,qBAAqB,CACzB,CAACiE,aAAa,CAAC0I,WAAW,CAAC,IAAIA,WAAW,IACxC8N,qBAAqC,CACzC;GACF,EACD,EAAE,CACH;EAoBD,SAASC,KAAKA,CACZH,UAA0C,EAC1C/Z,YAAsB;IAEtB,OAAO8Z,aAAa,CAACC,UAAU,EAAE/Z,YAAY,CAAC;;EAGhD,SAASma,UAAUA,CACjB3X,IAAyD;IAAA,IAAA4X,UAAA,GAAAhM,0BAAA,CAEjCnQ,KAAK,CAACC,OAAO,CAACsE,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;MAAA6X,MAAA;IAAA;MAA3D,KAAAD,UAAA,CAAA9L,CAAA,MAAA+L,MAAA,GAAAD,UAAA,CAAA7L,CAAA,IAAAC,IAAA,GAA6D;QAAA,IAAlDpC,SAAS,GAAAiO,MAAA,CAAAne,KAAA;QAClB4R,8BAA8B,CAACvL,SAAS,CAACK,OAAO,CAACwJ,SAAS,CAAC,EAAE,IAAI,CAAC;;IACnE,SAAAqC,GAAA;MAAA2L,UAAA,CAAA1L,CAAA,CAAAD,GAAA;IAAA;MAAA2L,UAAA,CAAAzL,CAAA;IAAA;;EAGH,SAAS2L,gBAAgBA,CACvB1c,GAAwB,EACY;IAAA,IAApC4C,OAAA,GAAAd,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAkC,EAAE;IAEpC,IAAIsV,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI,CAACtX,GAAG,CAAC4E,IAAI,EAAE;QACb,OAAO2S,OAAO,CAACC,IAAI,CACjB,sCAAsC,EACtCxX,GAAG,4CAEJ;;MAGH,IACEoU,kBAAkB,CAACpP,OAAO,CAAC2U,GAAG,CAAC3Z,GAAG,CAAC4E,IAAI,CAAC5D,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAC7D,CAAC4I,MAAM,CACL,IAAA1F,MAAA,CAAIlE,GAAG,CAAC4E,IAAI,CAAC5D,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,iBAC9BD,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACrBA,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CACzB,CAACN,IAAI,CAACT,GAAG,CAAC4E,IAAI,CAAC,EAChB;QACA,OAAO2S,OAAO,CAACC,IAAI,CACjB,mEAAmE,EACnExX,GAAG,EACH,+CAA+C,CAChD;;;IAIL,IAAQ4E,IAAI,GAAkB5E,GAAG,CAAzB4E,IAAI;MAAEd,IAAI,GAAY9D,GAAG,CAAnB8D,IAAI;MAAExF,KAAK,GAAK0B,GAAG,CAAb1B,KAAK;IACzB,IAAMqe,4BAA4B,GAAA7W,MAAA,CAAA2C,MAAA;MAChCzI,GAAG,EAAHA;IAAG,GACA4C,OAAO,CACX;IACD,IAAMJ,MAAM,GAAGmC,SAAS,CAACK,OAAO;IAChC,IAAM+F,iBAAiB,GAAGsH,yBAAyB,CAACrS,GAAG,CAAC;IACxD,IAAM4c,YAAY,GAAG/M,kBAAkB,CAACuE,kBAAkB,CAACpP,OAAO,EAAEJ,IAAI,CAAC;IACzE,IAAMiY,UAAU,GAAG,SAAbA,UAAUA,CAAIC,UAAe;MAAA,OACjCzL,KAAK,KAAK,CAAChT,aAAa,CAAC2B,GAAG,CAAC,IAAI8c,UAAU,KAAK9c,GAAG,CAAC;IAAA;IACtD,IAAI0C,KAAK,GAAGF,MAAM,CAACoC,IAAI,CAAU;IACjC,IAAImY,mBAAmB,GAAG,IAAI;IAC9B,IAAI3a,YAAY;IAEhB,IACEM,KAAK,KACJqI,iBAAiB,GACd1K,KAAK,CAACC,OAAO,CAACoC,KAAK,CAACE,OAAO,CAAC,IAC5BlC,OAAO,CAACgC,KAAK,CAACE,OAAO,CAAC,CAACuG,IAAI,CAAC,UAAC/F,MAAM;MACjC,OAAO9E,KAAK,KAAK8E,MAAM,CAACpD,GAAG,CAAC1B,KAAK,IAAIue,UAAU,CAACzZ,MAAM,CAACpD,GAAG,CAAC;KAC5D,CAAC,GACF6c,UAAU,CAACna,KAAK,CAAC1C,GAAG,CAAC,CAAC,EAC1B;MACAwC,MAAM,CAACoC,IAAI,CAAC,GAAAkB,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACP/F,KAAK,GACLE,OAAO,CACX;MACD;;IAGF,IAAIkB,IAAI,EAAE;MACRpB,KAAK,GAAGqI,iBAAiB,G;QAEnBnI,OAAO,KAAAsB,MAAA,CAAAX,kBAAA,CACF7C,OAAO,CAAEgC,KAAK,IAAIA,KAAK,CAACE,OAAO,IAAK,EAAE,CAAC,IAC1C;UACE5C,GAAG,EAAHA;SACwB,EAC3B;QACDA,GAAG,EAAE;UAAE8D,IAAI,EAAJA,IAAI;UAAEc,IAAI,EAAJA;QAAI;MAAE,GAChBhC,OAAO,IAAAkD,MAAA,CAAA2C,MAAA,KAGPkU,4BAA4B,CAChC;KACN,MAAM;MACLja,KAAK,GAAGia,4BAA4B;;IAGtCna,MAAM,CAACoC,IAAI,CAAC,GAAGlC,KAAK;IAEpB,IAAMsa,oBAAoB,GAAGhb,WAAW,CACtCE,IAAG,CAAC2C,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC,CACzC;IAED,IAAI,CAACiB,aAAa,CAACgO,gBAAgB,CAAC7O,OAAO,CAAC,IAAI,CAACgY,oBAAoB,EAAE;MACrE5a,YAAY,GAAGF,IAAG,CAChB8a,oBAAoB,GAChBnJ,gBAAgB,CAAC7O,OAAO,GACxBH,qBAAqB,CAACG,OAAO,EACjCJ,IAAI,CACL;MACDmY,mBAAmB,GAAG/a,WAAW,CAACI,YAAY,CAAC;MAE/C,IAAI,CAAC2a,mBAAmB,IAAI,CAACH,YAAY,EAAE;QACzC9G,aAAa,CAAClR,IAA+B,EAAExC,YAAY,CAAC;;;IAIhE,IAAI,CAACyD,aAAa,CAACjD,OAAO,CAAC,EAAE;MAC3B3B,GAAG,CAAC0S,uBAAuB,CAAC3O,OAAO,EAAEJ,IAAI,EAAE,IAAI,CAAC;MAEhD,IAAI,CAACwN,UAAU,IAAI+C,gBAAgB,CAACnQ,OAAO,CAAC/B,OAAO,EAAE;QACnDqH,aAAa,CACX3F,SAAS,EACT4P,0BAA0B,EAC1B7R,KAAK,EACLmC,qBAAqB,CACtB,CAACoY,IAAI,CAAC,UAAC1T,KAAkB;UACxB,IAAMyO,mBAAmB,GAAG5C,YAAY,CAACpQ,OAAO,CAAC/B,OAAO;UAExD4C,aAAa,CAAC0D,KAAK,CAAC,GAChBtI,GAAG,CAAC2S,cAAc,CAAC5O,OAAO,EAAEJ,IAAI,EAAE,IAAI,CAAC,GACvCwB,KAAK,CAACwN,cAAc,CAAC5O,OAAO,EAAEJ,IAAI,CAAC;UAEvCoT,mBAAmB,KAAKnS,aAAa,CAAC0D,KAAK,CAAC,IAAIgM,eAAe,EAAE;SAClE,CAAC;;;IAIN,IAAIxO,gBAAgB,IAAI,EAAE6V,YAAY,IAAIG,mBAAmB,CAAC,EAAE;MAC9D,CAACH,YAAY,IAAIxW,KAAK,CAACgP,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,CAAC;;IAGhE,IAAId,IAAI,EAAE;MACRlE,oBAAoB,CAClBmL,iBAAiB,IAAIrI,KAAK,CAACE,OAAO,GAC9BF,KAAK,CAACE,OAAO,CAACF,KAAK,CAACE,OAAO,CAACtB,MAAM,GAAG,CAAC,CAAC,GACvCoB,KAAK,EACTqI,iBAAiB,IAAIiF,aAAa,CAAChQ,GAAG,CAAC,EACvCgU,eAAe,CAAChP,OAAO,CACxB;;;EAeL,SAASkY,QAAQA,CACfC,oBAIQ,EACRva,OAAyB;IAEzB,IAAI,CAAC0P,iBAAiB,EAAE;MACtB,IAAI1J,QAAQ,CAACuU,oBAAoB,CAAC,EAAE;QAClCT,gBAAgB,CAAC;UAAE9X,IAAI,EAAEuY;QAAoB,CAAE,EAAEva,OAAO,CAAC;OAC1D,MAAM,IACLxC,QAAQ,CAAC+c,oBAAoB,CAAC,IAC9B,MAAM,IAAIA,oBAAoB,EAC9B;QACAT,gBAAgB,CAACS,oBAAoB,EAAEva,OAAO,CAAC;OAChD,MAAM;QACL,OAAO,UAAC5C,GAAiC;UAAA,OACvCA,GAAG,IAAI0c,gBAAgB,CAAC1c,GAAG,EAAEmd,oBAAoB,CAAC;QAAA;;;;EAK1D,IAAMC,YAAY,GAAG5H,WAAiB,CACpC,UACE6H,OAA0C,EAC1CC,SAA4C;IAAA;MAAA,IAAAC,MAAA,GAAA/S,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACzC,SAAA8S,SAAO1M,CAA4B;QAAA,IAAArO,WAAA,EAAA8L,WAAA,EAAAkP,sBAAA,EAAAnU,MAAA,EAAAhF,MAAA,EAAAoZ,GAAA,EAAAC,eAAA,EAAAjb,KAAA,EAAAkb,MAAA,EAAAC,UAAA;QAAA,OAAApT,mBAAA,GAAAkC,IAAA,UAAAmR,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAjR,IAAA,GAAAiR,SAAA,CAAAhR,IAAA;YAAA;cACtC,IAAI+D,CAAC,IAAIA,CAAC,CAACkN,cAAc,EAAE;gBACzBlN,CAAC,CAACkN,cAAc,EAAE;gBAClBlN,CAAC,CAACmN,OAAO,EAAE;;cAETxb,WAAW,GAA8B,EAAE;cAC3C8L,WAAW,GAAGqM,0BAA0B,CAC1C/R,eAAe,CACblE,SAAS,EACT2M,WAAW,CAACzM,qBAAqB,CAACG,OAAO,CAAC,EAC1C+B,gBAAgB,EAChB,IAAI,CACL,CACF;cAEDoO,gBAAgB,CAACnQ,OAAO,CAAC8P,YAAY,IACnCS,eAAe,CAAC;gBACdT,YAAY,EAAE;eACf,CAAC;cAACiJ,SAAA,CAAAjR,IAAA;cAAA,KAGCqH,WAAW,CAACnP,OAAO;gBAAA+Y,SAAA,CAAAhR,IAAA;gBAAA;cAAA;cAAAgR,SAAA,CAAAhR,IAAA;cAAA,OACYoH,WAAW,CAACnP,OAAO,CAClDuJ,WAAW,EACX2F,UAAU,CAAClP,OAAO,EAClBuP,0BAA0B,CAC3B;YAAA;cAAAkJ,sBAAA,GAAAM,SAAA,CAAAxQ,IAAA;cAJOjE,MAAM,GAAAmU,sBAAA,CAANnU,MAAM;cAAEhF,MAAM,GAAAmZ,sBAAA,CAANnZ,MAAM;cAKtB8Q,YAAY,CAACpQ,OAAO,CAACsE,MAAM,GAAG7G,WAAW,GAAG6G,MAAM;cAClDiF,WAAW,GAAGjK,MAAM;cAACyZ,SAAA,CAAAhR,IAAA;cAAA;YAAA;cAAA2Q,GAAA,MAAAC,eAAA,GAED7X,MAAM,CAACxB,MAAM,CAACK,SAAS,CAACK,OAAO,CAAC;YAAA;cAAA,MAAA0Y,GAAA,GAAAC,eAAA,CAAArc,MAAA;gBAAAyc,SAAA,CAAAhR,IAAA;gBAAA;cAAA;cAAzCrK,KAAK,GAAAib,eAAA,CAAAD,GAAA;cAAA,KACVhb,KAAK;gBAAAqb,SAAA,CAAAhR,IAAA;gBAAA;cAAA;cACCnI,MAAI,GAAKlC,KAAK,CAAC1C,GAAG,CAAlB4E,IAAI;cAAAmZ,SAAA,CAAAhR,IAAA;cAAA,OAEazC,aAAa,CACpC3F,SAAS,EACT4P,0BAA0B,EAC1B7R,KAAK,EACLmC,qBAAqB,CACtB;YAAA;cALKgZ,UAAU,GAAAE,SAAA,CAAAxQ,IAAA;cAOhB,IAAIsQ,UAAU,CAACjZ,MAAI,CAAC,EAAE;gBACpB3D,GAAG,CAACwB,WAAW,EAAEmC,MAAI,EAAEiZ,UAAU,CAACjZ,MAAI,CAAC,CAAC;gBACxCwB,KAAK,CAACwN,cAAc,CAAC5O,OAAO,EAAEJ,MAAI,CAAC;eACpC,MAAM,IAAI1C,IAAG,CAACyR,uBAAuB,CAAC3O,OAAO,EAAEJ,MAAI,CAAC,EAAE;gBACrDwB,KAAK,CAACgP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,MAAI,CAAC;gBACxC3D,GAAG,CAAC2S,cAAc,CAAC5O,OAAO,EAAEJ,MAAI,EAAE,IAAI,CAAC;;YACxC;cAAA8Y,GAAA;cAAAK,SAAA,CAAAhR,IAAA;cAAA;YAAA;cAAA,MAMLlH,aAAa,CAACpD,WAAW,CAAC,IAC1BqD,MAAM,CAACC,IAAI,CAACqP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,CAAC,CAAC+O,KAAK,CAC5C,UAACzT,IAAI;gBAAA,OAAKA,IAAI,IAAID,SAAS,CAACK,OAAO;cAAA,EACpC;gBAAA+Y,SAAA,CAAAhR,IAAA;gBAAA;cAAA;cAEDwI,eAAe,CAAC;gBACdjM,MAAM,EAAE,EAAE;gBACVwL,YAAY,EAAE;eACf,CAAC;cAACiJ,SAAA,CAAAhR,IAAA;cAAA,OACGsQ,OAAO,CAAC9O,WAAW,EAAEuC,CAAC,CAAC;YAAA;cAAAiN,SAAA,CAAAhR,IAAA;cAAA;YAAA;cAE7BqI,YAAY,CAACpQ,OAAO,CAACsE,MAAM,GAAAxD,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACtB2M,YAAY,CAACpQ,OAAO,CAACsE,MAAM,GAC3B7G,WAAW,CACf;cAACsb,SAAA,CAAAtG,EAAA,GACF6F,SAAS;cAAA,KAAAS,SAAA,CAAAtG,EAAA;gBAAAsG,SAAA,CAAAhR,IAAA;gBAAA;cAAA;cAAAgR,SAAA,CAAAhR,IAAA;cAAA,OAAWuQ,SAAS,CAAClI,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAEwH,CAAC,CAAC;YAAA;cAC7DoC,gBAAgB,IACd3Q,iBAAiB,CAACoC,SAAS,CAACK,OAAO,EAAEoQ,YAAY,CAACpQ,OAAO,CAACsE,MAAM,CAAC;YAAC;cAAAyU,SAAA,CAAAjR,IAAA;cAGtEsI,YAAY,CAACpQ,OAAO,CAAC8P,YAAY,GAAG,KAAK;cACzCS,eAAe,CAAC;gBACdjG,WAAW,EAAE,IAAI;gBACjBwF,YAAY,EAAE,KAAK;gBACnBC,kBAAkB,EAAElP,aAAa,CAACuP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,CAAC;gBAC9DsL,WAAW,EAAEQ,YAAY,CAACpQ,OAAO,CAAC4P,WAAW,GAAG;eACjD,CAAC;cAAC,OAAAmJ,SAAA,CAAAG,MAAA;YAAA;YAAA;cAAA,OAAAH,SAAA,CAAArQ,IAAA;UAAA;QAAA,GAAA8P,QAAA;MAAA,CAEN;MAAA,iBAAAW,IAAA;QAAA,OAAAZ,MAAA,CAAAxP,KAAA,OAAAjM,SAAA;MAAA;IAAA;EAAA,GACD,CAACoR,gBAAgB,EAAEqB,0BAA0B,CAAC,CAC/C;EAED,IAAM6J,SAAS,GAAG,SAAZA,SAASA,CAAAC,MAAA,EAQE;IAAA,IAPf/U,MAAM,GAAA+U,MAAA,CAAN/U,MAAM;MACNoL,OAAO,GAAA2J,MAAA,CAAP3J,OAAO;MACPpF,WAAW,GAAA+O,MAAA,CAAX/O,WAAW;MACXuF,OAAO,GAAAwJ,MAAA,CAAPxJ,OAAO;MACP5R,OAAO,GAAAob,MAAA,CAAPpb,OAAO;MACP2R,WAAW,GAAAyJ,MAAA,CAAXzJ,WAAW;MACXrM,WAAW,GAAA8V,MAAA,CAAX9V,WAAW;IAEX,IAAI,CAACtF,OAAO,EAAE;MACZ2Q,cAAc,CAAC5O,OAAO,GAAG,EAAE;MAC3B2O,uBAAuB,CAAC3O,OAAO,GAAG,EAAE;;IAGtCsO,0BAA0B,CAACtO,OAAO,GAAG,EAAE;IACvCwO,cAAc,CAACxO,OAAO,GAAG,IAAI4M,GAAG,EAAE;IAClCmC,aAAa,CAAC/O,OAAO,GAAG,KAAK;IAE7BuQ,eAAe,CAAC;MACdX,WAAW,EAAEA,WAAW,GAAGQ,YAAY,CAACpQ,OAAO,CAAC4P,WAAW,GAAG,CAAC;MAC/DF,OAAO,EAAEA,OAAO,GAAGU,YAAY,CAACpQ,OAAO,CAAC0P,OAAO,GAAG,KAAK;MACvDpF,WAAW,EAAEA,WAAW,GAAG8F,YAAY,CAACpQ,OAAO,CAACsK,WAAW,GAAG,KAAK;MACnErM,OAAO,EAAEA,OAAO,GAAGmS,YAAY,CAACpQ,OAAO,CAAC/B,OAAO,GAAG,KAAK;MACvDsF,WAAW,EAAEA,WAAW,GAAG6M,YAAY,CAACpQ,OAAO,CAACuD,WAAW,GAAG,EAAE;MAChEsM,OAAO,EAAEA,OAAO,GAAGO,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,GAAG,EAAE;MACpDvL,MAAM,EAAEA,MAAM,GAAG8L,YAAY,CAACpQ,OAAO,CAACsE,MAAM,GAAG,EAAE;MACjDwL,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE;KACrB,CAAC;GACH;EAED,IAAMuJ,KAAK,GAAG,SAARA,KAAKA,CACTha,MAAoC,EACD;IAAA,IAAnCia,cAAA,GAAAzc,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAiC,EAAE;IAEnC,IAAIuP,KAAK,EAAE;MACT,SAAAmN,GAAA,MAAAC,eAAA,GAAoB3Y,MAAM,CAACxB,MAAM,CAACK,SAAS,CAACK,OAAO,CAAC,EAAAwZ,GAAA,GAAAC,eAAA,CAAAnd,MAAA,EAAAkd,GAAA,IAAE;QAAjD,IAAM9b,KAAK,GAAA+b,eAAA,CAAAD,GAAA;QACd,IAAI9b,KAAK,EAAE;UACT,IAAQ1C,MAAG,GAAc0C,KAAK,CAAtB1C,GAAG;YAAE4C,OAAO,GAAKF,KAAK,CAAjBE,OAAO;UACpB,IAAM8b,QAAQ,GACZrM,yBAAyB,CAACrS,MAAG,CAAC,IAAIK,KAAK,CAACC,OAAO,CAACsC,OAAO,CAAC,GACpDA,OAAO,CAAC,CAAC,CAAC,CAAC5C,GAAG,GACdA,MAAG;UAET,IAAI3B,aAAa,CAACqgB,QAAQ,CAAC,EAAE;YAC3B,IAAI;cACFA,QAAQ,CAACC,OAAO,CAAC,MAAM,CAAE,CAACL,KAAK,EAAE;cACjC;aACD,CAAC,OAAA7W,EAAA,EAAM;;;;;IAMhB9C,SAAS,CAACK,OAAO,GAAG,EAAE;IACtB6O,gBAAgB,CAAC7O,OAAO,GAAAc,MAAA,CAAA2C,MAAA,KAASnE,MAAM,IAAIuP,gBAAgB,CAAC7O,OAAO,CAAG;IACtEV,MAAM,IAAIwV,mBAAmB,CAAC,EAAE,CAAC;IAEjChU,MAAM,CAACxB,MAAM,CAAC2P,0BAA0B,CAACjP,OAAO,CAAC,CAACkC,OAAO,CACvD,UAAC0X,eAAe;MAAA,OAAK5U,UAAU,CAAC4U,eAAe,CAAC,IAAIA,eAAe,EAAE;IAAA,EACtE;IAED/Z,qBAAqB,CAACG,OAAO,GAAG+B,gBAAgB,GAC5C,EAAE,GACFuK,WAAW,CAAChN,MAAM,IAAIuP,gBAAgB,CAAC7O,OAAO,CAAC;IAEnDoZ,SAAS,CAACG,cAAc,CAAC;GAC1B;EAEDM,SAAe,CAAC;IACd/L,QAAQ,IAAIqC,gBAAgB,CAACnQ,OAAO,CAAC/B,OAAO,IAAIiY,gBAAgB,EAAE;IAClE7F,WAAW,CAACrQ,OAAO,GACjBqQ,WAAW,CAACrQ,OAAO,IAAI,CAACqM,KAAK,GACzBgE,WAAW,CAACrQ,OAAO,GACnBiL,WAAW,CAACtL,SAAS,EAAEuL,8BAA8B,CAAC;GAC7D,EAAE,CAACA,8BAA8B,EAAE2D,gBAAgB,CAAC7O,OAAO,CAAC,CAAC;EAE9D6Z,SAAe,CACb;IAAA,OAAM;MACJxJ,WAAW,CAACrQ,OAAO,IAAIqQ,WAAW,CAACrQ,OAAO,CAAC8Z,UAAU,EAAE;MACvDhL,SAAS,CAAC9O,OAAO,GAAG,IAAI;MAExB,IAAIoS,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;QACzC;;MAGFxR,MAAM,CAACxB,MAAM,CAACK,SAAS,CAACK,OAAO,CAAC,CAACkC,OAAO,CAAC,UAACxE,KAAK;QAAA,OAC7CwN,8BAA8B,CAACxN,KAAK,EAAE,IAAI,CAAC;MAAA,EAC5C;KACF;EAAA,GACD,EAAE,CACH;EAED,IAAI,CAACoQ,QAAQ,IAAIqC,gBAAgB,CAACnQ,OAAO,CAAC/B,OAAO,EAAE;IACjDgS,SAAS,CAAChS,OAAO,GACfyE,SAAS,CAACkM,cAAc,CAAC5O,OAAO,EAAE2O,uBAAuB,CAAC3O,OAAO,CAAC,IAClEa,aAAa,CAACuP,YAAY,CAACpQ,OAAO,CAACsE,MAAM,CAAC;;EAG9C,IAAMyV,WAAW,GAAG;IAClBxG,OAAO,EAAPA,OAAO;IACP0B,QAAQ,EAAEzE,WAAiB,CAACyE,QAAQ,EAAE,CAACR,gBAAgB,EAAElB,OAAO,CAAC,CAAC;IAClE/B,SAAS,EAAEhB,WAAiB,CAACgB,SAAS,EAAE,EAAE,CAAC;IAC3C0G,QAAQ,EAAE1H,WAAiB,CAAC0H,QAAQ,EAAE,CAACrJ,gBAAgB,CAAC7O,OAAO,CAAC,CAAC;IACjEuX,UAAU,EAAE/G,WAAiB,CAAC+G,UAAU,EAAE,EAAE,CAAC;IAC7CtH,SAAS,EAAE1C,cAAc,GACrB,IAAIC,KAAK,CAACyC,SAAS,EAAE;MACnB/S,GAAG,EAAE,SAAAA,IAACC,GAAG,EAAE6c,IAA0B;QACnC,IAAI5H,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;UACzC,IAAI0H,IAAI,KAAK,SAAS,IAAI5M,UAAU,EAAE;YACpCmF,OAAO,CAACC,IAAI,CACV,+HAA+H,CAChI;;;QAIL,IAAIwH,IAAI,IAAI7c,GAAG,EAAE;UACfgT,gBAAgB,CAACnQ,OAAO,CAACga,IAAI,CAAC,GAAG,IAAI;UACrC,OAAO7c,GAAG,CAAC6c,IAAI,CAAC;;QAGlB,OAAOjd,SAAS;;KAEnB,CAAC,GACFkT;GACL;EAED,IAAMgK,OAAO,GAAGC,OAAa,CAC3B;IAAA,OAAApZ,MAAA,CAAA2C,MAAA;MACE6N,WAAW,EAAXA,WAAW;MACXoF,kBAAkB,EAAlBA,kBAAkB;MAClB3U,gBAAgB,EAAhBA,gBAAgB;MAChBwO,eAAe,EAAfA,eAAe;MACfkG,wBAAwB,EAAxBA,wBAAwB;MACxBS,aAAa,EAAbA,aAAa;MACb/J,IAAI,EAAEkC,OAAO,CAACrP,OAAO;MACrB6N,cAAc,EAAE;QACd1D,kBAAkB,EAAlBA,kBAAkB;QAClBC,oBAAoB,EAApBA;OACD;MACD8L,gBAAgB,EAAEpI,QAAQ,GAAGoI,gBAAgB,GAAGnZ,SAAS;MACzD4C,SAAS,EAATA,SAAS;MACTsP,0BAA0B,EAA1BA,0BAA0B;MAC1BR,iBAAiB,EAAjBA,iBAAiB;MACjBC,0BAA0B,EAA1BA,0BAA0B;MAC1BJ,0BAA0B,EAA1BA,0BAA0B;MAC1BM,cAAc,EAAdA,cAAc;MACdD,uBAAuB,EAAvBA,uBAAuB;MACvBS,kBAAkB,EAAlBA,kBAAkB;MAClBe,gBAAgB,EAAhBA,gBAAgB;MAChBC,YAAY,EAAZA,YAAY;MACZvB,gBAAgB,EAAhBA,gBAAgB;MAChBhP,qBAAqB,EAArBA,qBAAqB;MACrB0O,mBAAmB,EAAnBA;IAAmB,GAChBwL,WAAW;EAAA,CACd,EACF,CACElL,gBAAgB,CAAC7O,OAAO,EACxB0W,kBAAkB,EAClB3U,gBAAgB,EAChB0U,wBAAwB,EACxBS,aAAa,CACd,CACF;EAED,OAAApW,MAAA,CAAA2C,MAAA;IACE6T,KAAK,EAALA,KAAK;IACL2C,OAAO,EAAPA,OAAO;IACP7B,YAAY,EAAZA,YAAY;IACZkB,KAAK,EAAE9I,WAAiB,CAAC8I,KAAK,EAAE,EAAE,CAAC;IACnCxC,WAAW,EAAEtG,WAAiB,CAACsG,WAAW,EAAE,EAAE,CAAC;IAC/CE,QAAQ,EAAExG,WAAiB,CAACwG,QAAQ,EAAE,EAAE,CAAC;IACzC1S,MAAM,EAAE2L,SAAS,CAAC3L;EAAM,GACrByV,WAAW;AAElB;;;;;;;;;;;;;;;;;;;;;;;;;ACj0CA,IAAMI,WAAW,GAAGC,aAAmB,CAAwB,IAAI,CAAC;AAEpED,WAAW,CAACE,WAAW,GAAG,YAAY;IAEzBC,cAAc,GAAG,SAAjBA,cAAcA,CAAA;EAAA,OAGzBC,UAAgB,CAACJ,WAAW;AAAA;IAEjBK,YAAY,GAAG,SAAfA,YAAYA,CAAsC/X,EAG7B;EAH6B,IAC7DgY,QAAQ,GAAAhY,EAEwB,CAFhCgY,QAAQ;IACLC,KAAK,GAAAC,MAAA,CAAAlY,EAAA,EAFqD,YAG9D,CADS;EAC6B,OACrCmY,aAAA,CAACT,WAAW,CAACU,QAAQ;IAACvhB,KAAK,EAAEwH,MAAA,CAAA2C,MAAA,KAAKiX,KAAK;EAAoB,GACxDD,QAAQ,CACY;;AChBzB,IAAAK,UAAA,GAAe,SAAfA,WAAA,EAAe;EACb,IAAMC,CAAC,GACL,OAAOC,WAAW,KAAK7gB,SAAS,GAAGoB,IAAI,CAAC0f,GAAG,EAAE,GAAGD,WAAW,CAACC,GAAG,EAAE,GAAG,IAAI;EAE1E,OAAO,sCAAsC,CAAClf,OAAO,CAAC,OAAO,EAAE,UAACmf,CAAC;IAC/D,IAAMC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,GAAGN,CAAC,IAAI,EAAE,GAAG,CAAC;IAE3C,OAAO,CAACG,CAAC,IAAI,GAAG,GAAGC,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAI,GAAG,EAAEG,QAAQ,CAAC,EAAE,CAAC;GACrD,CAAC;AACJ,CAAC;ACRD,SAASC,eAAeA,CAAI1e,IAAS,EAAE2e,OAAiB;EACtD,IAAIC,CAAC,GAAG,CAAC;EACT,IAAMC,IAAI,GAAAnd,kBAAA,CAAO1B,IAAI,CAAC;EAAC,IAAA8e,UAAA,GAAAnQ,0BAAA,CAEHgQ,OAAO;IAAAI,MAAA;EAAA;IAA3B,KAAAD,UAAA,CAAAjQ,CAAA,MAAAkQ,MAAA,GAAAD,UAAA,CAAAhQ,CAAA,IAAAC,IAAA,GAA6B;MAAA,IAAlBxP,KAAK,GAAAwf,MAAA,CAAAtiB,KAAA;MACdoiB,IAAI,CAACG,MAAM,CAACzf,KAAK,GAAGqf,CAAC,EAAE,CAAC,CAAC;MACzBA,CAAC,EAAE;;EACJ,SAAA5P,GAAA;IAAA8P,UAAA,CAAA7P,CAAA,CAAAD,GAAA;EAAA;IAAA8P,UAAA,CAAA5P,CAAA;EAAA;EAED,OAAOrQ,OAAO,CAACggB,IAAI,CAAC,CAACpf,MAAM,GAAGof,IAAI,GAAG,EAAE;AACzC;AAEA,IAAAI,aAAA,GAAe,SAAfA,cAAmBjf,IAAS,EAAET,KAAyB;EAAA,OACrDY,WAAW,CAACZ,KAAK,CAAC,GACd,EAAE,GACFmf,eAAe,CACb1e,IAAI,EACJ,CAACxB,KAAK,CAACC,OAAO,CAACc,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAE2f,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,GAAGC,CAAC;EAAA,EAAC,CAC/D;AAAA;ACnBP,IAAAC,WAAA,GAAe,SAAfA,YACErf,IAAuB,EACvBsf,IAAY,EACZC,EAAU;EAEV,IAAI/gB,KAAK,CAACC,OAAO,CAACuB,IAAI,CAAC,EAAE;IACvB,IAAIG,WAAW,CAACH,IAAI,CAACuf,EAAE,CAAC,CAAC,EAAE;MACzBvf,IAAI,CAACuf,EAAE,CAAC,GAAGrf,SAAS;;IAEtBF,IAAI,CAACgf,MAAM,CAACO,EAAE,EAAE,CAAC,EAAEvf,IAAI,CAACgf,MAAM,CAACM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,OAAOtf,IAAI;;EAGb,OAAO,EAAE;AACX,CAAC;AChBD,IAAAwf,WAAA,GAAe,SAAfA,YAAmBxf,IAAS,EAAEyf,MAAc,EAAEC,MAAc;EAC1D,IAAMb,IAAI,GAAG,CAAC7e,IAAI,CAAC0f,MAAM,CAAC,EAAE1f,IAAI,CAACyf,MAAM,CAAC,CAAC;EACzCzf,IAAI,CAACyf,MAAM,CAAC,GAAGZ,IAAI,CAAC,CAAC,CAAC;EACtB7e,IAAI,CAAC0f,MAAM,CAAC,GAAGb,IAAI,CAAC,CAAC,CAAC;AACxB,CAAC;SCFuBc,OAAOA,CAC7B3f,IAAS,EACTvD,KAAe;EAEf,UAAA4F,MAAA,CAAAX,kBAAA,CAAYlD,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,IAAIyD,SAAS,CAAC,GAAAwB,kBAAA,CAAM1B,IAAI;AAC3E;SCDwB4f,MAAMA,CAC5B5f,IAAS,EACTT,KAAa,EACb9C,KAAe;EAEf,UAAA4F,MAAA,CAAAX,kBAAA,CACK1B,IAAI,CAACsE,KAAK,CAAC,CAAC,EAAE/E,KAAK,CAAC,GAAAmC,kBAAA,CACnBlD,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,IAAIyD,SAAS,CAAC,GAAAwB,kBAAA,CACpD1B,IAAI,CAACsE,KAAK,CAAC/E,KAAK,CAAC;AAExB;AChBA,IAAAsgB,cAAA,GAAe,SAAfA,eAAmBpjB,KAAc;EAAA,OAC/B+B,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAG+B,KAAK,CAAC/B,KAAK,CAACgD,MAAM,CAAC,CAACqgB,IAAI,CAAC5f,SAAS,CAAC,GAAGA,SAAS;AAAA;ACCxE,IAAA6f,gBAAA,GAAe,SAAfA,iBAAmBtjB,KAAQ;EAAA,OACxB,CAAC+B,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAUoF,GAAG,CAAC,UAAC7B,IAAI;IACzD,IAAIzB,QAAQ,CAACyB,IAAI,CAAC,EAAE;MAClB,IAAMX,MAAM,GAA4B,EAAE;MAE1C,KAAK,IAAMM,GAAG,IAAIK,IAAI,EAAE;QACtBX,MAAM,CAACM,GAAG,CAAC,GAAG,IAAI;;MAGpB,OAAON,MAAM;;IAGf,OAAO,IAAI;EACb,CAAC,CAAC;AAAA;ACcJ,IAAM2gB,MAAM,GAAG,SAATA,MAAMA,CAAA,EAMQ;EAAA,IAFlBvd,MAAA,GAAAxC,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAuC,EAAE;EAAA,IACzCggB,OAAiB,GAAAhgB,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;EAAA,IACjBggB,QAAkB,GAAAjgB,SAAA,CAAAR,MAAA,OAAAQ,SAAA,MAAAC,SAAA;EAElB,IAAIqV,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAACyK,QAAQ,EAAE;MAAA,IAAAC,WAAA,GAAAxR,0BAAA,CACOlM,MAAM;QAAA2d,OAAA;MAAA;QAA1B,KAAAD,WAAA,CAAAtR,CAAA,MAAAuR,OAAA,GAAAD,WAAA,CAAArR,CAAA,IAAAC,IAAA,GAA4B;UAAA,IAAjBtS,KAAK,GAAA2jB,OAAA,CAAA3jB,KAAA;UACd,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAIwjB,OAAO,IAAIxjB,KAAK,EAAE;cACpBiZ,OAAO,CAACC,IAAI,gEAAAtT,MAAA,CAC4C4d,OAAO,iGAC9D;cAED;;WAEH,MAAM;YACLvK,OAAO,CAACC,IAAI,0IAEX;YAED;;;MAEH,SAAA3G,GAAA;QAAAmR,WAAA,CAAAlR,CAAA,CAAAD,GAAA;MAAA;QAAAmR,WAAA,CAAAjR,CAAA;MAAA;;;EAIL,OAAOzM,MAAM,CAACZ,GAAG,CAAC,UAACpF,KAAiC;IAAA,OAAAwH,MAAA,CAAA2C,MAAA,CAAAC,eAAA,KACjDoZ,OAAO,EAAGxjB,KAAK,CAACwjB,OAAO,CAAC,IAAIhC,UAAU,EAAE,GACtCxhB,KAAK;EAAA,CACR,CAAC;AACL,CAAC;IAEY4jB,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,MAAA,EAQiB;EAAA,IAHzClD,OAAO,GAAAkD,MAAA,CAAPlD,OAAO;IACPra,IAAI,GAAAud,MAAA,CAAJvd,IAAI;IAAAwd,cAAA,GAAAD,MAAA,CACJL,OAAO;IAAPA,OAAO,GAAAM,cAAA,cAAG,IAAgB,GAAAA,cAAA;EAK1B,IAAMC,OAAO,GAAG/C,cAAc,EAAE;EAEhC,IAAIlI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAAC2H,OAAO,IAAI,CAACoD,OAAO,EAAE;MACxB,MAAM,IAAIC,KAAK,CACb,2FAA2F,CAC5F;;;EAIL,IAAMC,aAAa,GAAGlP,MAAY,CAAC,CAAC,CAAC,CAAC;EACtC,IAAMS,SAAS,GAAGT,MAAY,CAAC,KAAK,CAAC;EACrC,IAAAmP,MAAA,GAmBIvD,OAAO,IAAIoD,OAAO,CAACpD,OAAO;IAlB5B3I,WAAW,GAAAkM,MAAA,CAAXlM,WAAW;IACXoF,kBAAkB,GAAA8G,MAAA,CAAlB9G,kBAAkB;IAClBzH,0BAA0B,GAAAuO,MAAA,CAA1BvO,0BAA0B;IAC1BG,kBAAkB,GAAAoO,MAAA,CAAlBpO,kBAAkB;IAClBzP,SAAS,GAAA6d,MAAA,CAAT7d,SAAS;IACTkP,gBAAgB,GAAA2O,MAAA,CAAhB3O,gBAAgB;IAChB4H,wBAAwB,GAAA+G,MAAA,CAAxB/G,wBAAwB;IACxBrG,YAAY,GAAAoN,MAAA,CAAZpN,YAAY;IACZvQ,qBAAqB,GAAA2d,MAAA,CAArB3d,qBAAqB;IACrB0Q,eAAe,GAAAiN,MAAA,CAAfjN,eAAe;IACfJ,gBAAgB,GAAAqN,MAAA,CAAhBrN,gBAAgB;IAChBvB,cAAc,GAAA4O,MAAA,CAAd5O,cAAc;IACdD,uBAAuB,GAAA6O,MAAA,CAAvB7O,uBAAuB;IACvBL,0BAA0B,GAAAkP,MAAA,CAA1BlP,0BAA0B;IAC1B4H,gBAAgB,GAAAsH,MAAA,CAAhBtH,gBAAgB;IAChB1E,SAAS,GAAAgM,MAAA,CAAThM,SAAS;IACTzP,gBAAgB,GAAAyb,MAAA,CAAhBzb,gBAAgB;IAChBwM,mBAAmB,GAAAiP,MAAA,CAAnBjP,mBAAmB;EAGrB,IAAMkP,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAOne,MAAS;IAAA,OACpCpC,IAAG,CAAC6E,gBAAgB,GAAGzC,MAAM,GAAGO,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,EAAE,EAAE,CAAC;EAAA;EAE1E,IAAM8d,oBAAoB,GAAGlT,uBAAuB,CAAC5K,IAAI,CAAC;EAC1D,IAAM+d,qBAAqB,GAAGtP,MAAY,CAAA9P,kBAAA,CACpCrB,IAAG,CAACoR,0BAA0B,CAACtO,OAAO,EAAE0d,oBAAoB,CAAC,GAC7DD,gBAAgB,CAACnP,0BAA0B,CAACtO,OAAO,CAAC,GACpDyd,gBAAgB,CAAC5O,gBAAgB,CAAC7O,OAAO,CAAC,EAC9C;EACF,IAAA4d,UAAA,GAA4BnO,QAAc,CAExCoN,MAAM,CAACc,qBAAqB,CAAC3d,OAAO,EAAE8c,OAAO,CAAC,CAAC;IAAAe,UAAA,GAAApV,cAAA,CAAAmV,UAAA;IAF1CpgB,MAAM,GAAAqgB,UAAA;IAAEC,SAAS,GAAAD,UAAA;EAGxB5hB,GAAG,CAACsS,mBAAmB,CAACvO,OAAO,EAAEJ,IAAI,EAAElE,OAAO,CAAC8B,MAAM,CAAC,CAAC;EAEvD,IAAMugB,OAAO,GAAG,SAAVA,OAAOA,CACXvgB,MAAS;IAAA,OACNA,MAAM,CAACkB,GAAG,CAAC,YAAqC;MAAA,IAApC+D,EAAA,GAAA3F,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAkC,EAAE;UAAlCkhB,EAAA,GAAClB,OAAQ;QAAEmB,OAAO,GAAAxb,EAAA,CAAAub,EAAA;QAAKE,IAAI,GAAAvD,MAAA,CAAAlY,EAAA,EAA7B,QAAAub,EAAA,gBAAAA,EAAA,GAAAA,EAAA,MAA+B,CAAF;MAAY,OAAAE,IAAI;KAAA,CAAC;EAAA;EAE/D9O,kBAAkB,CAACpP,OAAO,CAAC4J,GAAG,CAAChK,IAAI,CAAC;EAEpC,IAAMue,kBAAkB,GAAG3N,WAAiB,CAC1C;IAAA,OAAMtT,IAAG,CAACqR,mBAAmB,CAACvO,OAAO,EAAEJ,IAAI,EAAE,EAAE,CAAC;EAAA,GAChD,CAACA,IAAI,CAAC,CACP;EAED,IAAMwe,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA;IAAA,OAC1BvB,MAAM,CACJ3f,IAAG,CAACsU,SAAS,EAAE,EAAE5R,IAAI,EAAEue,kBAAkB,EAAE,CAAC,CAACzf,GAAG,CAC9C,UAACiD,IAAgC,EAAEvF,KAAa;MAAA,OAAA0E,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KAC3C0a,kBAAkB,EAAE,CAAC/hB,KAAK,CAAC,GAC3BuF,IAAI;IAAA,CACP,CACH,EACDmb,OAAO,EACP,IAAI,CACL;EAAA;EAEH1N,kBAAkB,CAACpP,OAAO,CAAC4J,GAAG,CAAChK,IAAI,CAAC;EAEpC,IACE8d,oBAAoB,IACpB,CAACxgB,IAAG,CAACoR,0BAA0B,CAACtO,OAAO,EAAE0d,oBAAoB,CAAC,EAC9D;IACAzhB,GAAG,CACDqS,0BAA0B,CAACtO,OAAO,EAClC0d,oBAAoB,EACpBpR,WAAW,CAACpP,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAE0d,oBAAoB,CAAC,CAAC,CACjE;;EAGH,IAAMW,qBAAqB,GAAG,SAAxBA,qBAAqBA,CACzBC,YAAgE;IAEhER,SAAS,CAACQ,YAAY,CAAC;IACvBriB,GAAG,CAACsS,mBAAmB,CAACvO,OAAO,EAAEJ,IAAI,EAAE0e,YAAY,CAAC;IAEpD,IAAInO,gBAAgB,CAACnQ,OAAO,CAAC/B,OAAO,IAAIiY,gBAAgB,EAAE;MACxD,IAAM5W,MAAM,GAAGkS,SAAS,EAAE;MAC1BvV,GAAG,CAACqD,MAAM,EAAEM,IAAI,EAAE0e,YAAY,CAAC;MAC/BpI,gBAAgB,CAAC5W,MAAM,CAAC;;GAE3B;EAED,IAAMif,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAG;IAClB,KAAK,IAAM/hB,GAAG,IAAImD,SAAS,CAACK,OAAO,EAAE;MACnC,IAAI2K,qBAAqB,CAACnO,GAAG,EAAEoD,IAAI,CAAC,EAAE;QACpC6W,wBAAwB,CAAC9W,SAAS,CAACK,OAAO,CAACxD,GAAG,CAAU,EAAE,IAAI,CAAC;QAC/D,OAAOmD,SAAS,CAACK,OAAO,CAACxD,GAAG,CAAC;;;GAGlC;EAED,IAAMgiB,OAAO,GAAG,SAAVA,OAAOA,CAAOxjB,GAAM;IAAA,OACxB,CAACU,OAAO,CAACwB,IAAG,CAAClC,GAAG,EAAE4E,IAAI,EAAE,EAAE,CAAC,CAAC,CAACtD,MAAM,IAAI8E,KAAK,CAACpG,GAAG,EAAE4E,IAAI,CAAC;EAAA;EAEzD,IAAM6e,kCAAkC,GAAG,SAArCA,kCAAkCA,CAGtCC,uBAA2B;IAE3B,IAAIA,uBAAuB,EAAE;MAC3BziB,GAAG,CACDmU,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAChC3D,IAAI,EACJ+D,wBAAwB,CACtBoa,OAAO,CAACW,uBAAuB,CAAC,EAChCxhB,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEJ,IAAI,EAAE,EAAE,CAAC,EACvC1C,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,EAAE,EAAE,CAAC,CAChD,CACF;;GAEJ;EAED,IAAM+e,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAIpBC,MAAS,EACTC,IAKC,EACDC,kBAAsB,EAGG;IAAA,IAFzBC,iBAAA,GAAAjiB,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAgE,EAAE;IAAA,IAClEkiB,SAAS,GAAAliB,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;IAAA,IAChBmiB,iBAAiB,GAAAniB,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;IAEzB,IAAII,IAAG,CAAC2C,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC,EAAE;MAC5C,IAAMoE,MAAM,GAAG4a,MAAM,CACnB1hB,IAAG,CAAC2C,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC,EACxCif,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,IAAI,CACV;MACDH,SAAS,IAAI/iB,GAAG,CAAC4D,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,EAAEoE,MAAM,CAAC;;IAG/D,IAAI9G,IAAG,CAACoR,0BAA0B,CAACtO,OAAO,EAAEJ,IAAI,CAAC,EAAE;MACjD,IAAMoE,OAAM,GAAG4a,MAAM,CACnB1hB,IAAG,CAACoR,0BAA0B,CAACtO,OAAO,EAAEJ,IAAI,CAAC,EAC7Cif,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,IAAI,CACV;MACDH,SAAS,IAAI/iB,GAAG,CAACqS,0BAA0B,CAACtO,OAAO,EAAEJ,IAAI,EAAEoE,OAAM,CAAC;;IAGpE,IAAI3I,KAAK,CAACC,OAAO,CAAC4B,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,CAAC,CAAC,EAAE;MACzD,IAAMoE,QAAM,GAAG4a,MAAM,CACnB1hB,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,CAAC,EACtCif,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,IAAI,CACV;MACDH,SAAS,IAAI/iB,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAACsE,MAAM,EAAE1E,IAAI,EAAEoE,QAAM,CAAC;MAC3Dwa,OAAO,CAACpO,YAAY,CAACpQ,OAAO,CAACsE,MAAM,CAAC;;IAGtC,IACE6L,gBAAgB,CAACnQ,OAAO,CAAC6P,OAAO,IAChC3S,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,EAAEjQ,IAAI,CAAC,EACvC;MACA,IAAMoE,QAAM,GAAG4a,MAAM,CACnB1hB,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,EAAEjQ,IAAI,CAAC,EACvCif,IAAI,CAACK,IAAI,EACTL,IAAI,CAACM,IAAI,CACV;MACDH,SAAS,IAAI/iB,GAAG,CAACmU,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,EAAEjQ,IAAI,EAAEoE,QAAM,CAAC;MAC5Dwa,OAAO,CAACpO,YAAY,CAACpQ,OAAO,CAAC6P,OAAO,CAAC;;IAGvC,IACEM,gBAAgB,CAACnQ,OAAO,CAACuD,WAAW,IACpC4M,gBAAgB,CAACnQ,OAAO,CAAC0P,OAAO,EAChC;MACAzT,GAAG,CACDmU,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAChC3D,IAAI,EACJ+D,wBAAwB,CACtBoa,OAAO,CAACgB,iBAAiB,CAAC,EAC1B7hB,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEJ,IAAI,EAAE,EAAE,CAAC,EACvC1C,IAAG,CAACkT,YAAY,CAACpQ,OAAO,CAACuD,WAAW,EAAE3D,IAAI,EAAE,EAAE,CAAC,CAChD,CACF;MACD6e,kCAAkC,CAACK,kBAAkB,CAAC;MACtDN,OAAO,CAACpO,YAAY,CAACpQ,OAAO,CAACuD,WAAW,CAAC;;IAG3C,IACE0b,iBAAiB,IACjB9O,gBAAgB,CAACnQ,OAAO,CAAC/B,OAAO,IAChC,CAACiY,gBAAgB,EACjB;MACAja,GAAG,CACD2S,cAAc,CAAC5O,OAAO,EACtBJ,IAAI,EACJgf,MAAM,CAAC1hB,IAAG,CAAC0R,cAAc,CAAC5O,OAAO,EAAEJ,IAAI,EAAE,EAAE,CAAC,EAAEif,IAAI,CAACK,IAAI,CAAC,CACzD;MACDV,OAAO,CAAC5P,cAAc,CAAC5O,OAAO,CAAC;MAE/B/D,GAAG,CACD0S,uBAAuB,CAAC3O,OAAO,EAC/BJ,IAAI,EACJgf,MAAM,CAAC1hB,IAAG,CAACyR,uBAAuB,CAAC3O,OAAO,EAAEJ,IAAI,EAAE,EAAE,CAAC,EAAEif,IAAI,CAACK,IAAI,CAAC,CAClE;MACDV,OAAO,CAAC7P,uBAAuB,CAAC3O,OAAO,CAAC;;IAG1C,IAAI,CAAC8O,SAAS,CAAC9O,OAAO,IAAImQ,gBAAgB,CAACnQ,OAAO,CAAC0P,OAAO,EAAE;MAC1Da,eAAe,CAAC;QACdb,OAAO,EAAE4B,WAAW,CAAC1R,IAAI,EAAEme,OAAO,CAACgB,iBAAiB,CAAC;OACtD,CAAC;;GAEL;EAED,IAAMK,MAAM,GAAG,SAATA,MAAMA,CACV9lB,KAAgE,EAC9C;IAAA,IAAlB2d,WAAW,GAAAna,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;IAElB,IAAMuiB,WAAW,GAAGhkB,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;IAC1D,IAAMgmB,gBAAgB,MAAApgB,MAAA,CAAAX,kBAAA,CACjB6f,sBAAsB,EAAE,GAAA7f,kBAAA,CACxBse,MAAM,CAACwC,WAAW,EAAEvC,OAAO,CAAC,EAChC;IACDuB,qBAAqB,CAACiB,gBAAgB,CAAC;IAEvC,IACEnP,gBAAgB,CAACnQ,OAAO,CAACuD,WAAW,IACpC4M,gBAAgB,CAACnQ,OAAO,CAAC0P,OAAO,EAChC;MACA+O,kCAAkC,CAACa,gBAAgB,CAAC;MAEpD/O,eAAe,CAAC;QACdb,OAAO,EAAE,IAAI;QACbnM,WAAW,EAAE6M,YAAY,CAACpQ,OAAO,CAACuD;OACnC,CAAC;;IAGJ,CAACxB,gBAAgB,IACf9F,GAAG,CAAC4D,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,KAAAV,MAAA,CAAAX,kBAAA,CACjCrB,IAAG,CAAC2C,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC,IAAI,EAAE,GAAArB,kBAAA,CAC/C+N,WAAW,CAAC+S,WAAW,CAAC,GAC3B;IAEJ9B,aAAa,CAACvd,OAAO,GAAGiX,WAAW,GAC/B/Z,IAAG,CAACqR,mBAAmB,CAACvO,OAAO,EAAEJ,IAAI,CAAC,CAACtD,MAAM,GAAG,CAAC,GACjD,CAAC,CAAC;GACP;EAED,IAAMijB,SAAO,GAAG,SAAVA,SAAO/C,CACXljB,KAAgE,EAC9C;IAAA,IAAlB2d,WAAW,GAAAna,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;IAElB,IAAM0iB,UAAU,GAAG9C,cAAc,CAACpjB,KAAK,CAAC;IACxC,IAAMolB,uBAAuB,GAAGlC,OAAS,CACvC4B,sBAAsB,EAAE,EACxBvB,MAAM,CAACxhB,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAEwjB,OAAO,CAAC,CACxD;IAEDuB,qBAAqB,CAACK,uBAAuB,CAAC;IAC9CH,WAAW,EAAE;IACbI,gBAAgB,CACdnC,OAAS,EACT;MACE0C,IAAI,EAAEM,UAAU;MAChBC,IAAI,EAAE7C,gBAAgB,CAACtjB,KAAK;KAC7B,EACDolB,uBAAuB,CACxB;IACDnB,aAAa,CAACvd,OAAO,GAAGiX,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;GAC7C;EAED,IAAMyI,MAAM,GAAG,SAATA,MAAMA,CAAItjB,KAAyB;IACvC,IAAMmN,WAAW,GAAG6U,sBAAsB,EAAE;IAC5C,IAAMU,kBAAkB,GAGlBhD,aAAa,CAACvS,WAAW,EAAEnN,KAAK,CAAC;IACvCiiB,qBAAqB,CACnBS,kBAAwE,CACzE;IACDP,WAAW,EAAE;IACbI,gBAAgB,CACd7C,aAAa,EACb;MACEoD,IAAI,EAAE9iB,KAAK;MACXqjB,IAAI,EAAErjB;KACP,EACD0iB,kBAAkB,EAClBhD,aAAa,CAACvS,WAAW,EAAEnN,KAAK,CAAC,EACjC,IAAI,EACJ,IAAI,CACL;GACF;EAED,IAAMujB,QAAM,GAAG,SAATA,QAAMlD,CACVrgB,KAAa,EACb9C,KAAgE,EAC9C;IAAA,IAAlB2d,WAAW,GAAAna,SAAA,CAAAR,MAAA,QAAAQ,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;IAElB,IAAM0iB,UAAU,GAAG9C,cAAc,CAACpjB,KAAK,CAAC;IACxC,IAAMiQ,WAAW,GAAG6U,sBAAsB,EAAE;IAC5C,IAAMM,uBAAuB,GAAGjC,MAAQ,CACtClT,WAAW,EACXnN,KAAK,EACLygB,MAAM,CAACxhB,KAAK,CAACC,OAAO,CAAChC,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,EAAEwjB,OAAO,CAAC,CACxD;IAEDuB,qBAAqB,CAACK,uBAAuB,CAAC;IAC9CH,WAAW,EAAE;IACbI,gBAAgB,CACdlC,MAAQ,EACR;MACEyC,IAAI,EAAE9iB,KAAK;MACX+iB,IAAI,EAAEK,UAAU;MAChBC,IAAI,EAAErjB,KAAK;MACXwjB,IAAI,EAAEhD,gBAAgB,CAACtjB,KAAK;KAC7B,EACDolB,uBAAuB,EACvBjC,MAAQ,CAAClT,WAAW,EAAEnN,KAAK,CAAC,CAC7B;IACDmhB,aAAa,CAACvd,OAAO,GAAGiX,WAAW,GAAG7a,KAAK,GAAG,CAAC,CAAC;GACjD;EAED,IAAMyjB,IAAI,GAAG,SAAPA,IAAIA,CAAIvD,MAAc,EAAEC,MAAc;IAC1C,IAAMhT,WAAW,GAAG6U,sBAAsB,EAAE;IAC5C/B,WAAW,CAAC9S,WAAW,EAAE+S,MAAM,EAAEC,MAAM,CAAC;IACxCgC,WAAW,EAAE;IACbF,qBAAqB,CAAA9f,kBAAA,CAAKgL,WAAW,EAAE;IACvCoV,gBAAgB,CACdtC,WAAW,EACX;MACE6C,IAAI,EAAE5C,MAAM;MACZ6C,IAAI,EAAE5C,MAAM;MACZkD,IAAI,EAAEnD,MAAM;MACZsD,IAAI,EAAErD;KACP,EACDxf,SAAS,EACTwM,WAAW,EACX,KAAK,CACN;GACF;EAED,IAAMuW,IAAI,GAAG,SAAPA,IAAIA,CAAI3D,IAAY,EAAEC,EAAU;IACpC,IAAM7S,WAAW,GAAG6U,sBAAsB,EAAE;IAC5ClC,WAAW,CAAC3S,WAAW,EAAE4S,IAAI,EAAEC,EAAE,CAAC;IAClCmC,WAAW,EAAE;IACbF,qBAAqB,CAAA9f,kBAAA,CAAKgL,WAAW,EAAE;IACvCoV,gBAAgB,CACdzC,WAAW,EACX;MACEgD,IAAI,EAAE/C,IAAI;MACVgD,IAAI,EAAE/C,EAAE;MACRqD,IAAI,EAAEtD,IAAI;MACVyD,IAAI,EAAExD;KACP,EACDrf,SAAS,EACTwM,WAAW,EACX,KAAK,CACN;GACF;EAEDsQ,SAAe,CAAC;IACd,IAAIzH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI,CAAC1S,IAAI,EAAE;QACT2S,OAAO,CAACC,IAAI,CACV,6FAA6F,CAC9F;;;IAIL,IAAMlP,aAAa,GAAGpG,IAAG,CAACoR,0BAA0B,CAACtO,OAAO,EAAEJ,IAAI,CAAC;IAEnE,IAAI0D,aAAa,IAAI9F,MAAM,CAAClB,MAAM,GAAGgH,aAAa,CAAChH,MAAM,EAAE;MACzDL,GAAG,CAACqS,0BAA0B,CAACtO,OAAO,EAAEJ,IAAI,EAAE0D,aAAa,CAACnC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAGvEuV,kBAAkB,CAAC9W,IAAI,CAAC;IAExB,IAAI2d,aAAa,CAACvd,OAAO,GAAG,CAAC,CAAC,EAAE;MAC9B,KAAK,IAAMxD,GAAG,IAAImD,SAAS,CAACK,OAAO,EAAE;QACnC,IAAMtC,KAAK,GAAGiC,SAAS,CAACK,OAAO,CAACxD,GAAG,CAAC;QACpC,IACEA,GAAG,CAAC0H,UAAU,IAAAhF,MAAA,CAAIU,IAAI,OAAAV,MAAA,CAAIqe,aAAa,CAACvd,OAAO,OAAI,IACnDtC,KAAM,CAAC1C,GAAG,CAAC2C,KAAK,EAChB;UACAD,KAAM,CAAC1C,GAAG,CAAC2C,KAAK,EAAE;UAClB;;;;IAKN4f,aAAa,CAACvd,OAAO,GAAG,CAAC,CAAC;GAC3B,EAAE,CAACxC,MAAM,EAAEoC,IAAI,CAAC,CAAC;EAElBia,SAAe,CAAC;IACd,IAAMkG,cAAc,GAAG9Q,0BAA0B,CAACjP,OAAO;IACzD,IAAMggB,eAAe,GAAG5Q,kBAAkB,CAACpP,OAAO;IAElD,IAAI,CAACwK,uBAAuB,CAAC5K,IAAI,CAAC,EAAE;MAClCmgB,cAAc,CAACngB,IAAI,CAAC,GAAG,UACrB/C,IAAmD;QAEnD0hB,WAAW,EAAE;QACb,CAAC1hB,IAAI,IAAIuE,KAAK,CAACkN,0BAA0B,CAACtO,OAAO,EAAEJ,IAAI,CAAC;QACxDwB,KAAK,CAACvB,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC;QAC1C+d,qBAAqB,CAAC3d,OAAO,GAAG9C,IAAG,CACjCL,IAAI,IAAIgS,gBAAgB,CAAC7O,OAAO,EAChCJ,IAAI,CACL;QACD,IAAI,CAACkP,SAAS,CAAC9O,OAAO,EAAE;UACtB8d,SAAS,CAACjB,MAAM,CAACc,qBAAqB,CAAC3d,OAAO,EAAE8c,OAAO,CAAC,CAAC;;OAE5D;;IAGH,OAAO;MACLhO,SAAS,CAAC9O,OAAO,GAAG,IAAI;MACxB+B,gBAAgB,IAAI2d,MAAM,EAAE;MAC5BnB,WAAW,EAAE;MACb,OAAOwB,cAAc,CAACngB,IAAI,CAAC;MAC3BwB,KAAK,CAACmN,mBAAmB,CAACvO,OAAO,EAAEJ,IAAI,CAAC;MACxCogB,eAAe,CAACC,MAAM,CAACrgB,IAAI,CAAC;KAC7B;GACF,EAAE,EAAE,CAAC;EAEN,OAAO;IACLigB,IAAI,EAAErP,WAAiB,CAACqP,IAAI,EAAE,CAACjgB,IAAI,CAAC,CAAC;IACrCkgB,IAAI,EAAEtP,WAAiB,CAACsP,IAAI,EAAE,CAAClgB,IAAI,CAAC,CAAC;IACrC4c,OAAO,EAAEhM,WAAiB,CAAC+O,SAAO,EAAE,CAAC3f,IAAI,CAAC,CAAC;IAC3Cwf,MAAM,EAAE5O,WAAiB,CAAC4O,MAAM,EAAE,CAACxf,IAAI,CAAC,CAAC;IACzC8f,MAAM,EAAElP,WAAiB,CAACkP,MAAM,EAAE,CAAC9f,IAAI,CAAC,CAAC;IACzC6c,MAAM,EAAEjM,WAAiB,CAACmP,QAAM,EAAE,CAAC/f,IAAI,CAAC,CAAC;IACzCpC,MAAM,EAAE9B,OAAO,CAAC8B,MAAM;GACvB;AACH;ACxgBA,IAAA0iB,aAAA,GAAe,SAAfA,cAAgBC,KAAU;EAAA,OACxBhe,WAAW,CAACge,KAAK,CAAC,IAClB,CAAC/kB,QAAQ,CAAC+kB,KAAK,CAAC9d,MAAM,CAAC,IACtBjH,QAAQ,CAAC+kB,KAAK,CAAC9d,MAAM,CAAC,IAAI,CAAC8d,KAAK,CAACrhB,IAAK,GACnCqhB,KAAK,GACLnjB,WAAW,CAACmjB,KAAK,CAAC9d,MAAM,CAAC/I,KAAK,CAAC,GAC/B6mB,KAAK,CAAC9d,MAAM,CAAChE,OAAO,GACpB8hB,KAAK,CAAC9d,MAAM,CAAC/I,KAAK;AAAA;SCIR8mB,aAAaA,CAAAC,MAAA,EAMQ;EAAA,IALnCzgB,IAAI,GAAAygB,MAAA,CAAJzgB,IAAI;IACJ0gB,KAAK,GAAAD,MAAA,CAALC,KAAK;IACLljB,YAAY,GAAAijB,MAAA,CAAZjjB,YAAY;IACZ6c,OAAO,GAAAoG,MAAA,CAAPpG,OAAO;IACPsG,OAAO,GAAAF,MAAA,CAAPE,OAAO;EAEP,IAAMlD,OAAO,GAAG/C,cAAc,EAAgB;EAE9C,IAAIlI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAAC2H,OAAO,IAAI,CAACoD,OAAO,EAAE;MACxB,MAAM,IAAIC,KAAK,CACb,qFAAqF,CACtF;;;EAIL,IAAAkD,MAAA,GAiBIvG,OAAO,IAAIoD,OAAO,CAACpD,OAAO;IAhB5BpL,gBAAgB,GAAA2R,MAAA,CAAhB3R,gBAAgB;IAChBoG,QAAQ,GAAAuL,MAAA,CAARvL,QAAQ;IACRiD,QAAQ,GAAAsI,MAAA,CAARtI,QAAQ;IACRX,UAAU,GAAAiJ,MAAA,CAAVjJ,UAAU;IACVhE,OAAO,GAAAiN,MAAA,CAAPjN,OAAO;IACPpG,IAAI,GAAAqT,MAAA,CAAJrT,IAAI;IAAAsT,qBAAA,GAAAD,MAAA,CACJ3S,cAAc;IAAI1D,kBAAkB,GAAAsW,qBAAA,CAAlBtW,kBAAkB;IAAEC,oBAAoB,GAAAqW,qBAAA,CAApBrW,oBAAoB;IAC1D6F,SAAS,GAAAuQ,MAAA,CAATvQ,SAAS;IAAAyQ,qBAAA,GAAAF,MAAA,CACTpQ,YAAY,CACVpQ,OAAO;IAAIsK,WAAW,GAAAoW,qBAAA,CAAXpW,WAAW;IAAEuF,OAAO,GAAA6Q,qBAAA,CAAP7Q,OAAO;IAAEvL,MAAM,GAAAoc,qBAAA,CAANpc,MAAM;IAEzCiM,eAAe,GAAAiQ,MAAA,CAAfjQ,eAAe;IACfJ,gBAAgB,GAAAqQ,MAAA,CAAhBrQ,gBAAgB;IAChBxQ,SAAS,GAAA6gB,MAAA,CAAT7gB,SAAS;IACTyP,kBAAkB,GAAAoR,MAAA,CAAlBpR,kBAAkB;IAClBvP,qBAAqB,GAAA2gB,MAAA,CAArB3gB,qBAAqB;EAGvB,IAAM8gB,eAAe,GAAG,CAAC9V,kBAAkB,CAACuE,kBAAkB,CAACpP,OAAO,EAAEJ,IAAI,CAAC;EAC7E,IAAMghB,eAAe,GAAG,SAAlBA,eAAeA,CAAA;IAAA,OACnB,CAAC5jB,WAAW,CAACE,IAAG,CAAC2C,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC,CAAC,IAAI+gB,eAAe,GACrEzjB,IAAG,CAAC2C,qBAAqB,CAACG,OAAO,EAAEJ,IAAI,CAAC,GACxC5C,WAAW,CAACI,YAAY,CAAC,GACzBF,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEJ,IAAI,CAAC,GACnCxC,YAAY;EAAA;EAClB,IAAAyjB,UAAA,GAAoCpR,QAAc,CAACmR,eAAe,EAAE,CAAC;IAAAE,UAAA,GAAArY,cAAA,CAAAoY,UAAA;IAA9DvnB,KAAK,GAAAwnB,UAAA;IAAEC,kBAAkB,GAAAD,UAAA;EAChC,IAAME,QAAQ,GAAG3S,MAAY,CAAC/U,KAAK,CAAC;EACpC,IAAM0B,GAAG,GAAGqT,MAAY,CAAC;IACvB1Q,KAAK,EAAE,SAAAA,MAAA;MAAA,OAAM,IAAI;IAAA;GAClB,CAAC;EACF,IAAMsjB,UAAU,GAAG5S,MAAY,CAC7BkS,OAAO,IACJ;IACC,IAAIvb,UAAU,CAAChK,GAAG,CAACgF,OAAO,CAACrC,KAAK,CAAC,EAAE;MACjC3C,GAAG,CAACgF,OAAO,CAACrC,KAAK,EAAE;;IAGrB,IAAIyU,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI,CAACtN,UAAU,CAAChK,GAAG,CAACgF,OAAO,CAACrC,KAAK,CAAC,EAAE;QAClC4U,OAAO,CAACC,IAAI,+IAEX;;;GAGL,CACL;EAED,IAAM8B,cAAc,GAAG9D,WAAiB,CACtC,UAACnG,WAAqB;IAAA,OACpB,CAACR,cAAc,CAAA/I,MAAA,CAAA2C,MAAA;MACb4G,WAAW,EAAXA,WAAW;MACXF,kBAAkB,EAAlBA,kBAAkB;MAClBC,oBAAoB,EAApBA,oBAAoB;MACpBE,WAAW,EAAXA,WAAW;MACXJ,SAAS,EAAE,CAAC,CAAChN,IAAG,CAAC2S,OAAO,EAAEjQ,IAAI;IAAC,GAC5BuN,IAAI,EACP;EAAA,GACJ,CACEhD,kBAAkB,EAClBC,oBAAoB,EACpBE,WAAW,EACXuF,OAAO,EACPjQ,IAAI,EACJuN,IAAI,CACL,CACF;EAED,IAAM+T,UAAU,GAAG1Q,WAAiB,CAAC,UAAA2Q,MAAA,EAAe;IAAA,IAAAC,MAAA,GAAA3Y,cAAA,CAAA0Y,MAAA;MAAbhB,KAAK,GAAAiB,MAAA;IAC1C,IAAMvkB,IAAI,GAAGqjB,aAAa,CAACC,KAAK,CAAC;IACjCY,kBAAkB,CAAClkB,IAAI,CAAC;IACxBmkB,QAAQ,CAAChhB,OAAO,GAAGnD,IAAI;IACvB,OAAOA,IAAI;GACZ,EAAE,EAAE,CAAC;EAEN,IAAMwkB,aAAa,GAAG7Q,WAAiB,CACrC,UAAC8Q,iBAA2B;IAC1B,IAAIlP,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI,CAAC1S,IAAI,EAAE;QACT,OAAO2S,OAAO,CAACC,IAAI,CACjB,6EAA6E,CAC9E;;;IAIL,IAAI7S,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC,EAAE;MAC3BD,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC,GAAAkB,MAAA,CAAA2C,MAAA;QACrBzI,GAAG,EAAE2E,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAE,CAAC5E;MAAG,GAC9BslB,KAAK,CACT;KACF,MAAM;MACLpI,QAAQ,CACNpX,MAAM,CAACygB,gBAAgB,CACrB;QACE3hB,IAAI,EAAJA,IAAI;QACJjC,KAAK,EAAEsjB,UAAU,CAACjhB;OACnB,EACD;QACE1G,KAAK,EAAE;UACL2C,GAAG,WAAAA,IAACY,IAAI;YACNkkB,kBAAkB,CAAClkB,IAAI,CAAC;YACxBmkB,QAAQ,CAAChhB,OAAO,GAAGnD,IAAI;WACxB;UACDK,GAAG,WAAAA,IAAA;YACD,OAAO8jB,QAAQ,CAAChhB,OAAO;;;OAG5B,CACF,EACDsgB,KAAK,CACN;MAEDgB,iBAAiB,GAAGtkB,WAAW,CAACE,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEJ,IAAI,CAAC,CAAC;;IAGtE0hB,iBAAiB,IACfX,eAAe,IACfI,kBAAkB,CAACH,eAAe,EAAE,CAAC;GACxC,EACD,CAACN,KAAK,EAAE1gB,IAAI,EAAEsY,QAAQ,CAAC,CACxB;EAED2B,SAAe,CAAC;IAAA,OAAM;MAAA,OAAMtC,UAAU,CAAC3X,IAAI,CAAC;IAAA;EAAA,GAAE,CAACA,IAAI,CAAC,CAAC;EAErDia,SAAe,CAAC;IACd,IAAIzH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAItV,WAAW,CAAC1D,KAAK,CAAC,EAAE;QACtBiZ,OAAO,CAACC,IAAI,iBAAAtT,MAAA,CACJU,IAAI,uKACX;;MAGH,IAAI,CAAC+gB,eAAe,IAAI3jB,WAAW,CAACI,YAAY,CAAC,EAAE;QACjDmV,OAAO,CAACC,IAAI,CACV,qHAAqH,CACtH;;;IAIL6O,aAAa,EAAE;GAChB,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnBxH,SAAe,CAAC;IACd,CAACla,SAAS,CAACK,OAAO,CAACJ,IAAI,CAAC,IAAIyhB,aAAa,CAAC,IAAI,CAAC;GAChD,CAAC;EAEF,IAAMxnB,MAAM,GAAG2W,WAAiB,CAAC;IAC/B,IAAIL,gBAAgB,CAACnQ,OAAO,CAAC6P,OAAO,IAAI,CAAC3S,IAAG,CAAC2S,OAAO,EAAEjQ,IAAI,CAAC,EAAE;MAC3D3D,GAAG,CAAC4T,OAAO,EAAEjQ,IAAI,EAAE,IAAI,CAAC;MACxB2Q,eAAe,CAAC;QACdV,OAAO,EAAPA;OACD,CAAC;;IAGJyE,cAAc,CAAC,IAAI,CAAC,IAAIf,OAAO,CAAC3T,IAAI,CAAC;GACtC,EAAE,CAACA,IAAI,EAAE2Q,eAAe,EAAE+D,cAAc,EAAEf,OAAO,EAAEpD,gBAAgB,CAAC,CAAC;EAEtE,IAAMrW,QAAQ,GAAG0W,WAAiB,CAChC;IAAA,SAAAgR,IAAA,GAAA1kB,SAAA,CAAAR,MAAA,EAAI6jB,KAAY,OAAA9kB,KAAA,CAAAmmB,IAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,IAAA,EAAAC,KAAA;MAAZtB,KAAY,CAAAsB,KAAA,IAAA3kB,SAAA,CAAA2kB,KAAA;IAAA;IAAA,OACdxM,QAAQ,CAACrV,IAAI,EAAEshB,UAAU,CAACf,KAAK,CAAC,EAAE;MAChC7L,cAAc,EAAEA,cAAc,EAAE;MAChCD,WAAW,EAAE;KACd,CAAC;EAAA,GACJ,CAACY,QAAQ,EAAErV,IAAI,EAAE0U,cAAc,CAAC,CACjC;EAED,OAAO;IACL5W,KAAK,EAAE;MACL5D,QAAQ,EAARA,QAAQ;MACRD,MAAM,EAANA,MAAM;MACN+F,IAAI,EAAJA,IAAI;MACJtG,KAAK,EAALA,KAAK;MACL0B,GAAG,EAAHA;KACD;IACD0mB,IAAI,EAAE5gB,MAAM,CAACygB,gBAAgB,CAC3B;MACEI,OAAO,EAAE,CAAC,CAACzkB,IAAG,CAACoH,MAAM,EAAE1E,IAAI;KAC5B,EACD;MACE8P,OAAO,EAAE;QACPxS,GAAG,WAAAA,IAAA;UACD,OAAO,CAAC,CAACA,IAAG,CAAC+S,SAAS,CAAC1M,WAAW,EAAE3D,IAAI,CAAC;;OAE5C;MACDsK,SAAS,EAAE;QACThN,GAAG,WAAAA,IAAA;UACD,OAAO,CAAC,CAACA,IAAG,CAAC+S,SAAS,CAACJ,OAAO,EAAEjQ,IAAI,CAAC;;;KAG1C;GAEJ;AACH;SChMgBgiB,QAAQA,CAAAC,MAAA,EAIN;EAAA,IAHhB5H,OAAO,GAAA4H,MAAA,CAAP5H,OAAO;IACPra,IAAI,GAAAiiB,MAAA,CAAJjiB,IAAI;IACJxC,YAAY,GAAAykB,MAAA,CAAZzkB,YAAY;EAEZ,IAAMigB,OAAO,GAAG/C,cAAc,EAAE;EAEhC,IAAIlI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI,CAAC2H,OAAO,IAAI,CAACoD,OAAO,EAAE;MACxB,MAAM,IAAIC,KAAK,CACb,iFAAiF,CAClF;;;EAIL,IAAAwE,MAAA,GAKI7H,OAAO,IAAIoD,OAAO,CAACpD,OAAO;IAJ5BxL,iBAAiB,GAAAqT,MAAA,CAAjBrT,iBAAiB;IACjBC,0BAA0B,GAAAoT,MAAA,CAA1BpT,0BAA0B;IAC1BwI,aAAa,GAAA4K,MAAA,CAAb5K,aAAa;IACbrI,gBAAgB,GAAAiT,MAAA,CAAhBjT,gBAAgB;EAElB,IAAMkT,WAAW,GAAGtS,QAAc,EAAW,CAAC,CAAC,CAAC;EAChD,IAAMuS,KAAK,GAAG3T,MAAY,EAAU;EACpC,IAAM4T,eAAe,GAAG5T,MAAY,CAACjR,YAAY,CAAC;EAElDyc,SAAe,CAAC;IACd,IAAIzH,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAI1S,IAAI,KAAK,EAAE,EAAE;QACf2S,OAAO,CAACC,IAAI,CACV,mFAAmF,CACpF;;;IAIL,IAAM0P,EAAE,GAAIF,KAAK,CAAChiB,OAAO,GAAG8a,UAAU,EAAG;IACzC,IAAMqH,qBAAqB,GAAGzT,0BAA0B,CAAC1O,OAAO;IAChE,IAAMoiB,eAAe,GAAG3T,iBAAiB,CAACzO,OAAO;IACjDoiB,eAAe,CAACF,EAAE,CAAC,GAAG,IAAItV,GAAG,EAAE;IAC/BuV,qBAAqB,CAACD,EAAE,CAAC,GAAG;MAAA,OAAMH,WAAW,CAAC,EAAE,CAAC;IAAA;IACjD7K,aAAa,CAACtX,IAAI,EAAEqiB,eAAe,CAACjiB,OAAO,EAAEkiB,EAAE,CAAC;IAEhD,OAAO;MACL,OAAOE,eAAe,CAACF,EAAE,CAAC;MAC1B,OAAOC,qBAAqB,CAACD,EAAE,CAAC;KACjC;GACF,EAAE,CACDtiB,IAAI,EACJ8O,0BAA0B,EAC1BD,iBAAiB,EACjByI,aAAa,EACb+K,eAAe,CAChB,CAAC;EAEF,OAAOD,KAAK,CAAChiB,OAAO,GAChBkX,aAAa,CAACtX,IAAI,EAAEqiB,eAAe,CAACjiB,OAAO,EAAEgiB,KAAK,CAAChiB,OAAO,CAAC,GAC3DhD,WAAW,CAACI,YAAY,CAAC,GACzBwG,QAAQ,CAAChE,IAAI,CAAC,GACZ1C,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAEJ,IAAI,CAAC,GACnCvE,KAAK,CAACC,OAAO,CAACsE,IAAI,CAAC,GACnBA,IAAI,CAACtC,MAAM,CACT,UAACa,QAAQ,EAAE4Y,SAAS;IAAA,OAAAjW,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACftF,QAAQ,GAAAuF,eAAA,KACVqT,SAAS,EAAG7Z,IAAG,CAAC2R,gBAAgB,CAAC7O,OAAO,EAAE+W,SAAS,CAAC;EAAA,CACrD,EACF,EAAE,CACH,GACDlI,gBAAgB,CAAC7O,OAAO,GAC1B5C,YAAY;AAClB;IC9FMilB,UAAU,GAAG,SAAbA,UAAUA,CAId3H,KAAyC;EAEzC,IAAQ4F,KAAK,GAA0D5F,KAAK,CAApE4F,KAAK;IAAEgC,EAAE,GAAsD5H,KAAK,CAA7D4H,EAAE;IAAEC,MAAM,GAA8C7H,KAAK,CAAzD6H,MAAM;IAAEnlB,YAAY,GAAgCsd,KAAK,CAAjDtd,YAAY;IAAE6c,OAAO,GAAuBS,KAAK,CAAnCT,OAAO;IAAEsG,OAAO,GAAc7F,KAAK,CAA1B6F,OAAO;IAAKrC,IAAI,GAAAvD,MAAA,CAAKD,KAAK,EAAtE,+DAA8D,CAAQ;EAC5E,IAAA8H,cAAA,GAAwBpC,aAAa,CAAC1F,KAAK,CAAC;IAApChd,KAAK,GAAA8kB,cAAA,CAAL9kB,KAAK;IAAEgkB,IAAI,GAAAc,cAAA,CAAJd,IAAI;EAEnB,IAAMe,cAAc,GAAA3hB,MAAA,CAAA2C,MAAA,CAAA3C,MAAA,CAAA2C,MAAA,KACfya,IAAI,GACJxgB,KAAK,CACT;EAED,OAAO4kB,EAAE,GACLxf,cAAoB,CAACwf,EAAE,CAAC,GACtBI,YAAkB,CAACJ,EAAE,EAAEG,cAAc,CAAC,GACtC7H,aAAmB,CAAC0H,EAAkB,EAAEG,cAAqB,CAAC,GAChEF,MAAM,GACNA,MAAM,CAAC7kB,KAAK,EAAEgkB,IAAI,CAAC,GACnB,IAAI;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}